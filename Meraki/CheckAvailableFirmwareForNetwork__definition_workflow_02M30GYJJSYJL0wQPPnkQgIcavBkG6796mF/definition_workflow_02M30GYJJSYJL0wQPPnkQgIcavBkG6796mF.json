{
  "workflow": {
    "unique_name": "definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF",
    "name": "Check Available Firmware for Network",
    "title": "Check Available Firmware for Network",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Output - Result",
          "type": "datatype.string",
          "description": "Comprehensive summary report containing current firmware versions and available upgrades for all device types (Appliance, Switch, Wireless) in a human-readable format.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02M6KC1YUN2E21oTPUAWTuiigLqni8IaiMR",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.boolean",
        "properties": {
          "value": false,
          "scope": "output",
          "name": "Appliance Has Upgrade Available",
          "type": "datatype.boolean",
          "description": "Boolean flag for Security Appliances (MX): true = firmware upgrades are available, false = running latest firmware or no upgrade versions available.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": ""
        },
        "unique_name": "variable_workflow_02PYYLS61FZLF0ryAp4sqcDyP4E8mhuheHl",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Output - Appliance - Available Firmware Versions",
          "type": "datatype.string",
          "description": "JSON formatted list of available firmware versions for Meraki Security Appliances (MX) in the network. Returns 'Running the latest firmware.' if no upgrades are available.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "json"
        },
        "unique_name": "variable_workflow_02M3MYCAE4Z471oBd6zU3dI7HlwvXsNtZ4q",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.boolean",
        "properties": {
          "value": false,
          "scope": "output",
          "name": "Wireless Has Upgrade Available",
          "type": "datatype.boolean",
          "description": "Boolean flag for Wireless Access Points (MR): true = firmware upgrades are available, false = running latest firmware or no upgrade versions available.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": ""
        },
        "unique_name": "variable_workflow_02M3N4E7F0NST1AHjKl5MoQpR3UvW4xY5zA",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Output - Wireless - Available Firmware Versions",
          "type": "datatype.string",
          "description": "JSON formatted list of available firmware versions for Meraki Wireless Access Points (MR) in the network. Returns 'Running the latest firmware.' if no upgrades are available.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "json"
        },
        "unique_name": "variable_workflow_02M3MZOEXMFJN34Sue1HxX2IRzkVMmDXuMz",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Output - Switch - Available Firmware Versions",
          "type": "datatype.string",
          "description": "JSON formatted list of available firmware versions for Meraki Switches (MS) in the network. Returns 'Running the latest firmware.' if no upgrades are available.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "json"
        },
        "unique_name": "variable_workflow_02M3MZ49LWOK23aGQRbYOcYcm8ivPEZ2mVf",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Error Message",
          "type": "datatype.string",
          "description": "Detailed error information when workflow fails. Empty for successful executions, contains specific error details for troubleshooting failures.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02PYK5VBTIZ1M25E7SGVpt8SrknI56VrtMl",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "Input - Network Name",
          "type": "datatype.string",
          "description": "The name of the Meraki network to check for firmware updates. Must be an exact match for an existing network within the specified organization.",
          "is_required": true,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02M30H9ZWVYG97Ddcta3xu7rrVUZsl8ifwq",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Output - Appliance - Current Version",
          "type": "datatype.string",
          "description": "The current firmware version running on Meraki Security Appliances (MX) in the network, displayed as 'ShortName (ID: VersionID)' format.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02M3MVNE15DQQ3GM2uGQAx8zHoAAIsYmtPY",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "Organization ID",
          "type": "datatype.string",
          "description": "Internal variable to store the resolved Meraki organization ID, determined from either the organization name lookup or direct ID input.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02M6H1GEN4C263m1V94LPMCQNjGf0OG5ZG2",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Output - Wireless - Current Version",
          "type": "datatype.string",
          "description": "The current firmware version running on Meraki Wireless Access Points (MR) in the network, displayed as 'ShortName (ID: VersionID)' format.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02M3MZEFROAQL7kpDMAgvAu62wWwqTwJmqJ",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Output - Switch - Current Version",
          "type": "datatype.string",
          "description": "The current firmware version running on Meraki Switches (MS) in the network, displayed as 'ShortName (ID: VersionID)' format.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02M3MYR7I3LS64vFgpXcAidxLtVMy50gOdZ",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.integer",
        "properties": {
          "value": 0,
          "scope": "output",
          "name": "Status Code",
          "type": "datatype.integer",
          "description": "HTTP status code or workflow completion status. Returns 200 for success, 4xx/5xx for various error conditions.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": ""
        },
        "unique_name": "variable_workflow_02PYK5VBTIPF36xAo4ekXNelumZ8N2XzZdG",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "Input - Organization ID or Name",
          "type": "datatype.string",
          "description": "Provide the Organization Name or Organization ID.",
          "is_required": true,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02M30IM5VO2AS4WKLy2VYN1plX7frJeH1qw",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.boolean",
        "properties": {
          "value": false,
          "scope": "output",
          "name": "Switch Has Upgrade Available",
          "type": "datatype.boolean",
          "description": "Boolean flag for Switches (MS): true = firmware upgrades are available, false = running latest firmware or no upgrade versions available.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": ""
        },
        "unique_name": "variable_workflow_02M3N3D6E9MRS0zGiJk4LnOpQ2TuV3wX4yZ",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Status Message",
          "type": "datatype.string",
          "description": "Brief status description of workflow execution result. 'Success' for successful completion or error summary for failures.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02PYK5VBTJ5NE1O23tXaKnEe0XOOGEJ4zH7",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "is_atomic": false
      },
      "automation_rules": {
        "type": []
      },
      "delete_workflow_instance": false,
      "description": "Checks available firmware updates for Meraki network devices including Security Appliances (MX), Switches (MS), and Wireless Access Points (MR). Accepts organization name or ID, locates the specified network, and returns current firmware versions along with available upgrades for each device type in both individual outputs and a consolidated summary format.",
      "display_name": "Check Available Firmware for Network",
      "runtime_user": {
        "target_default": true
      },
      "target": {
        "target_type": "meraki.endpoint",
        "specify_on_workflow_start": true
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_02PEOAC0PDY003JBVLtTaygKBLzGSOB5tGo",
        "name": "Group",
        "title": "Find Organization by ID or Name",
        "type": "logic.group",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "Handles input flexibility by accepting either organization name or ID. Uses conditional logic to determine input type and set the organization ID for subsequent steps.",
          "display_as_suggestion": false,
          "display_name": "Find Organization by ID or Name",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_02MGBB1XV74T14vch1JymK78sjVAG8XLMPg",
            "name": "Get Organization By Name or ID",
            "title": "Get Organization By Name or ID",
            "type": "workflow.sub_workflow",
            "base_type": "subworkflow",
            "properties": {
              "continue_on_failure": true,
              "description": "Lookup the Organization by Name or ID",
              "display_name": "Get Organization By Name or ID",
              "input": {
                "variable_workflow_02M605GTHU5L72i8goD4nuYixYOvQEFV7rN": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.input.variable_workflow_02M30IM5VO2AS4WKLy2VYN1plX7frJeH1qw$",
                "variable_workflow_02M605GTI1LUG737lDLyzxnE9jwENJNQ08W": false
              },
              "runtime_user": {
                "target_default": true
              },
              "skip_execution": false,
              "target": {
                "target_type": "meraki.endpoint",
                "use_workflow_target": true
              },
              "workflow_id": "definition_workflow_02M605GS81XN44qr4RBWrJ6Zazk7k0ArIYX",
              "workflow_name": "Meraki - Get Organization By Name or ID"
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02M6GWLTHB0QQ2tHfY1ZO36K4S9uzgqt7gD",
            "name": "Condition Block",
            "title": "Was the Request Successful?",
            "type": "logic.if_else",
            "base_type": "activity",
            "properties": {
              "conditions": [],
              "continue_on_failure": false,
              "description": "Routes logic based on lookup success to set organization ID from either lookup result or original input.",
              "display_name": "Was the Request Successful?",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "blocks": [
              {
                "unique_name": "definition_activity_02M6GWLTN539K1dlKUmeNaU8S93S4tVs7gp",
                "name": "Condition Branch",
                "title": "Yes, Set ID from Get",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": "$activity.definition_activity_02MGBB1XV74T14vch1JymK78sjVAG8XLMPg.output.variable_workflow_02M605GTHEWOW4TGG1xjMEivKqrrMbc2hM3$",
                    "operator": "eq",
                    "right_operand": 200
                  },
                  "continue_on_failure": false,
                  "description": "HTTP 200 indicates successful name lookup - use returned organization ID.",
                  "display_name": "Yes, Set ID from Get",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02M6H1KCDK4CL6WPslndUEMP25csS3zZZkL",
                    "name": "Set Variables",
                    "title": "Set Local Org ID",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "description": "Use organization ID from lookup result.",
                      "display_name": "Set Local Org ID",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.local.variable_workflow_02M6H1GEN4C263m1V94LPMCQNjGf0OG5ZG2$",
                          "variable_value_new": "$activity.definition_activity_02MGBB1XV74T14vch1JymK78sjVAG8XLMPg.output.variable_workflow_02M605GTJITQP1fcLQlR8CLYAHoMomGWZvE$"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  }
                ]
              },
              {
                "unique_name": "definition_activity_02M6H2KH6P4Q56cig9mkjsWMHaANAfb03Z8",
                "name": "Condition Branch",
                "title": "No, Org Match",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": "$activity.definition_activity_02MGBB1XV74T14vch1JymK78sjVAG8XLMPg.output.variable_workflow_02M605GTHEWOW4TGG1xjMEivKqrrMbc2hM3$",
                    "operator": "ne",
                    "right_operand": 200
                  },
                  "continue_on_failure": false,
                  "description": "Non-200 response indicates input was likely already an organization ID - use original input.",
                  "display_name": "No, Org Match",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02Q1UNZE489PT5GCm8gQpGtyfoTzenSEocF",
                    "name": "Completed",
                    "title": "Completed",
                    "type": "logic.completed",
                    "base_type": "activity",
                    "properties": {
                      "completion_type": "failed-completed",
                      "continue_on_failure": false,
                      "description": "Completed action",
                      "display_name": "Completed",
                      "result_message": "No Organization Match.",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_02PEOGIRQ9Q462hvTAYZcXnY4qw3q9o75kw",
        "name": "Group",
        "title": "Find Network By Name",
        "type": "logic.group",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "Locates the target network within the organization using the provided network name.",
          "display_as_suggestion": false,
          "display_name": "Find Network By Name",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_02M30HGB4LNA03KaCfBjUVYxuyHAOiEq2IB",
            "name": "Get Network By Name",
            "title": "Get Network By Name",
            "type": "workflow.sub_workflow",
            "base_type": "subworkflow",
            "properties": {
              "continue_on_failure": true,
              "description": "Finds network by name within the organization and returns network ID for firmware queries.",
              "display_name": "Get Network By Name",
              "input": {
                "variable_workflow_02LCRACABYWD40LVa27k00YndGuostARjdp": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.local.variable_workflow_02M6H1GEN4C263m1V94LPMCQNjGf0OG5ZG2$",
                "variable_workflow_02LCRAQ5WICDM3PgxFwKyi19yaeu1bTpVUx": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.input.variable_workflow_02M30H9ZWVYG97Ddcta3xu7rrVUZsl8ifwq$",
                "variable_workflow_02LEUF5N782ES5q1O7K4p1AoMBPrkkcxi1E": false
              },
              "runtime_user": {
                "target_default": true
              },
              "skip_execution": false,
              "target": {
                "target_type": "meraki.endpoint",
                "use_workflow_target": true
              },
              "workflow_id": "definition_workflow_02LCR4UKH38PM6zDR4Bx2b2J165gCF1mhvh",
              "workflow_name": "Meraki - Get Network By Name"
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02PYK5VPXEWSO5RSV0KinD05aQCclZv5BRH",
            "name": "Condition Block",
            "title": "Is Network Found?",
            "type": "logic.if_else",
            "base_type": "activity",
            "properties": {
              "conditions": [],
              "continue_on_failure": false,
              "description": "Validates that the network was successfully found before proceeding with firmware queries.",
              "display_name": "Is Network Found?",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "blocks": [
              {
                "unique_name": "definition_activity_02PYLIFDS10246F4non6pLnBPBeKn6M4Hvs",
                "name": "Condition Branch",
                "title": "Network Found",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": "$activity.definition_activity_02M30HGB4LNA03KaCfBjUVYxuyHAOiEq2IB.output.variable_workflow_02LCS9H7YNIYX1GDaReaAe3aek2b4CnpPEW$",
                    "operator": "eq",
                    "right_operand": 200
                  },
                  "continue_on_failure": false,
                  "description": "Network lookup successful",
                  "display_name": "Network Found",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02PEOH4UMTQ7T1GVwglfqrY6D6A5FZRlOop",
                    "name": "Group",
                    "title": "Find Firmware for Network",
                    "type": "logic.group",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "description": "Retrieves firmware data, processes to remove current versions from upgrade lists, and formats output for all device types.",
                      "display_as_suggestion": false,
                      "display_name": "Find Firmware for Network",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_02MGBHTE6I3GX3DjiCchzbnQ27TYv3mNIjt",
                        "name": "Get Network Firmware Upgrades",
                        "title": "Get Network Firmware Upgrades",
                        "type": "workflow.atomic_workflow",
                        "base_type": "subworkflow",
                        "properties": {
                          "continue_on_failure": true,
                          "description": "Retrieves raw firmware upgrade data for the network using Meraki atomic.",
                          "display_name": "Get Network Firmware Upgrades",
                          "input": {
                            "variable_workflow_02LV1H3CNM5T45adfzDFwEeMjrKbmdHd58D": "$activity.definition_activity_02M30HGB4LNA03KaCfBjUVYxuyHAOiEq2IB.output.variable_workflow_02LCRLPN6EZY51pb3GRpQG7QdKWS452YyuL$"
                          },
                          "runtime_user": {
                            "target_default": true
                          },
                          "skip_execution": false,
                          "target": {
                            "target_type": "meraki.endpoint",
                            "use_workflow_target": true
                          },
                          "workflow_id": "definition_workflow_02LV1H3CNM49K1df7J02ad4wyV6Jv0E23b6",
                          "workflow_name": "Meraki - Get Network Firmware Upgrades"
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_02PYK5VVYSATE4J6abUrIud4Cbm26oCiwHX",
                        "name": "Condition Block",
                        "title": "Validate Firmware Data Retrieved",
                        "type": "logic.if_else",
                        "base_type": "activity",
                        "properties": {
                          "conditions": [],
                          "continue_on_failure": false,
                          "description": "Validates that firmware data was successfully retrieved before proceeding with processing.",
                          "display_name": "Validate Firmware Data Retrieved",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "blocks": [
                          {
                            "unique_name": "definition_activity_02PYLK1OLP6721UsBBwfRaGOF1PjvaI27T9",
                            "name": "Condition Branch",
                            "title": "Success",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": "$activity.definition_activity_02MGBHTE6I3GX3DjiCchzbnQ27TYv3mNIjt.output.variable_workflow_02LV1H3CNM9O04WSyjWX5NG0o5H3rbSFXFi$",
                                "operator": "eq",
                                "right_operand": 200
                              },
                              "continue_on_failure": false,
                              "description": "Firmware data retrieval failed - set error outputs and terminate workflow.",
                              "display_name": "Success",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02M3IVKIZS08U0H7qiGNWAtzvz7OkVBAI0p",
                                "name": "JSONPath Query",
                                "title": "Parse Output",
                                "type": "corejava.jsonpathquery",
                                "base_type": "activity",
                                "properties": {
                                  "action_timeout": 180,
                                  "continue_on_failure": true,
                                  "description": "Parses firmware data using JSONPath to extract version details for each device type. Continues on failure to handle missing device types gracefully.",
                                  "display_name": "Parse Output",
                                  "input_json": "$activity.definition_activity_02MGBHTE6I3GX3DjiCchzbnQ27TYv3mNIjt.output.variable_workflow_02LV1H3CNMB7K2eIEUcLniuSFXAmkGIOQJ2$",
                                  "jsonpath_queries": [
                                    {
                                      "jsonpath_query": ".products.appliance.currentVersion.id",
                                      "jsonpath_query_name": "applianceCurrVersionId",
                                      "jsonpath_query_type": "string",
                                      "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                                    },
                                    {
                                      "jsonpath_query": ".products.appliance.currentVersion.shortName",
                                      "jsonpath_query_name": "applianceCurrVersionShortName",
                                      "jsonpath_query_type": "string",
                                      "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                                    },
                                    {
                                      "jsonpath_query": ".products.appliance",
                                      "jsonpath_query_name": "applianceDetails",
                                      "jsonpath_query_type": "string",
                                      "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                                    },
                                    {
                                      "jsonpath_query": ".products.switch.currentVersion.id",
                                      "jsonpath_query_name": "switchCurrVersionId",
                                      "jsonpath_query_type": "string",
                                      "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                                    },
                                    {
                                      "jsonpath_query": ".products.switch.currentVersion.shortName",
                                      "jsonpath_query_name": "switchCurrVersionShortName",
                                      "jsonpath_query_type": "string",
                                      "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                                    },
                                    {
                                      "jsonpath_query": ".products.switch",
                                      "jsonpath_query_name": "switchDetails",
                                      "jsonpath_query_type": "string",
                                      "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                                    },
                                    {
                                      "jsonpath_query": ".products.wireless.currentVersion.id",
                                      "jsonpath_query_name": "wirelessCurrVersionId",
                                      "jsonpath_query_type": "string",
                                      "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                                    },
                                    {
                                      "jsonpath_query": ".products.wireless.currentVersion.shortName",
                                      "jsonpath_query_name": "wirelessCurrVersionShortName",
                                      "jsonpath_query_type": "string",
                                      "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                                    },
                                    {
                                      "jsonpath_query": ".products.wireless",
                                      "jsonpath_query_name": "wirelessDetails",
                                      "jsonpath_query_type": "string",
                                      "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                                    }
                                  ],
                                  "skip_execution": false,
                                  "skip_path": false
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_02PYK5W0XEWSO5RSV0KinD05aQCclZv5BRH",
                                "name": "Condition Block",
                                "title": "Validate JSONPath Results",
                                "type": "logic.if_else",
                                "base_type": "activity",
                                "properties": {
                                  "conditions": [],
                                  "continue_on_failure": false,
                                  "description": "Validates JSONPath parsing results and handles any failures by providing default values for missing device types.",
                                  "display_name": "Validate JSONPath Results",
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity",
                                "blocks": [
                                  {
                                    "unique_name": "definition_activity_02PYK5W1JMDSF5ESkvsZQVY94LjCs3jQbHu",
                                    "name": "Condition Branch",
                                    "title": "JSONPath Failed",
                                    "type": "logic.condition_block",
                                    "base_type": "activity",
                                    "properties": {
                                      "condition": {
                                        "left_operand": "$activity.definition_activity_02M3IVKIZS08U0H7qiGNWAtzvz7OkVBAI0p.output.succeeded$",
                                        "operator": "eq",
                                        "right_operand": false
                                      },
                                      "continue_on_failure": false,
                                      "description": "JSONPath parsing failed - set default empty values for all device types.",
                                      "display_name": "JSONPath Failed",
                                      "skip_execution": false
                                    },
                                    "object_type": "definition_activity",
                                    "actions": [
                                      {
                                        "unique_name": "definition_activity_02PYK5W2JACY04QBD6lQGzESHLHYeadvaZe",
                                        "name": "Set Variables",
                                        "title": "Set Default Values",
                                        "type": "core.set_multiple_variables",
                                        "base_type": "activity",
                                        "properties": {
                                          "continue_on_failure": false,
                                          "description": "Set default empty values for failed JSONPath parsing.",
                                          "display_name": "Set Default Values",
                                          "skip_execution": false,
                                          "variables_to_update": [
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MVNE15DQQ3GM2uGQAx8zHoAAIsYmtPY$",
                                              "variable_value_new": "No devices of this type found in the network."
                                            },
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MYCAE4Z471oBd6zU3dI7HlwvXsNtZ4q$",
                                              "variable_value_new": "No devices of this type found in the network."
                                            },
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MYR7I3LS64vFgpXcAidxLtVMy50gOdZ$",
                                              "variable_value_new": "No devices of this type found in the network."
                                            },
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MZ49LWOK23aGQRbYOcYcm8ivPEZ2mVf$",
                                              "variable_value_new": "No devices of this type found in the network."
                                            },
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MZEFROAQL7kpDMAgvAu62wWwqTwJmqJ$",
                                              "variable_value_new": "No devices of this type found in the network."
                                            },
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MZOEXMFJN34Sue1HxX2IRzkVMmDXuMz$",
                                              "variable_value_new": "No devices of this type found in the network."
                                            },
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M6KC1YUN2E21oTPUAWTuiigLqni8IaiMR$",
                                              "variable_value_new": "Network firmware check completed with limited device types available."
                                            },
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.workflow_results$",
                                              "variable_value_new": "Network firmware check completed with limited device types available."
                                            },
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.workflow_results_code$",
                                              "variable_value_new": "completed-successfully"
                                            },
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02PYK5VBTIPF36xAo4ekXNelumZ8N2XzZdG$",
                                              "variable_value_new": 400
                                            },
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02PYK5VBTJ5NE1O23tXaKnEe0XOOGEJ4zH7$",
                                              "variable_value_new": "Failed"
                                            }
                                          ]
                                        },
                                        "object_type": "definition_activity"
                                      },
                                      {
                                        "unique_name": "definition_activity_02Q0VAR7Z9KPL1nIoC9KGwuyxoY8x5BFfnt",
                                        "name": "Completed",
                                        "title": "Completed",
                                        "type": "logic.completed",
                                        "base_type": "activity",
                                        "properties": {
                                          "completion_type": "failed-completed",
                                          "continue_on_failure": false,
                                          "description": "Completed action",
                                          "display_name": "Completed",
                                          "result_message": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M6KC1YUN2E21oTPUAWTuiigLqni8IaiMR$",
                                          "skip_execution": false
                                        },
                                        "object_type": "definition_activity"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "unique_name": "definition_activity_02M3J5QYN9IQR5PcWCx4uv47zJMWbpGUP2P",
                                "name": "Execute Python Script",
                                "title": "Identify Available Versions",
                                "type": "python3.script",
                                "base_type": "activity",
                                "properties": {
                                  "action_timeout": 180,
                                  "continue_on_failure": false,
                                  "description": "Processes firmware data to remove current versions from available upgrade lists and filter unnecessary attributes.",
                                  "display_name": "Identify Available Versions",
                                  "script": "import sys\nimport json\n\n####################\n# This section establishes some inputs and local variables we need for later\n####################\n\n# Note when you have one item as input you need extra comma - it's not a mistake\n(mxDetails,msDetails,mrDetails) = sys.argv[1:4]\n\ndef remove_current_version_and_attributes(json_data):\n    \"\"\"\n    Removes the current version from the list of available versions and\n    excludes 'releaseDate' and 'firmware' attributes from the output JSON.\n    Handles missing/empty device types gracefully.\n\n    Parameters:\n    json_data (str): The JSON data as a string.\n\n    Returns:\n    tuple: (updated_json_str, no_available_versions_flag)\n        - updated_json_str: The updated JSON data as a string or appropriate message for missing devices\n        - no_available_versions_flag: Boolean indicating if current version is the only available version\n    \"\"\"\n    # Handle null, empty, or invalid inputs\n    if not json_data or json_data == 'null' or json_data.strip() == '' or json_data == 'None':\n        return \"No devices of this type found in the network.\", False\n    \n    try:\n        # Parse the JSON string into a Python dictionary\n        data = json.loads(json_data)\n        \n        # Handle empty or null parsed data\n        if not data or data is None:\n            return \"No devices of this type found in the network.\", False\n        \n        # Check if required keys exist\n        if 'currentVersion' not in data or not data['currentVersion']:\n            return \"No current version information available for this device type.\", False\n        \n        if 'id' not in data['currentVersion']:\n            return \"Invalid current version data for this device type.\", False\n        \n        # Find the current version ID\n        current_version_id = data['currentVersion']['id']\n        \n        # Handle missing availableVersions key\n        if 'availableVersions' not in data:\n            data['availableVersions'] = []\n        \n        # Check if current version is the only available version\n        available_version_ids = [version.get('id') for version in data['availableVersions'] if version.get('id')]\n        no_available_versions = len(available_version_ids) == 1 and current_version_id in available_version_ids\n        \n        # Remove the current version and filter out specific attributes\n        data['availableVersions'] = [\n            # iterate over each element in available versions and remove extra elements\n            {key: version[key] for key in version if key not in ['releaseDate', 'firmware']}\n            for version in data['availableVersions']\n            if version.get('id') != current_version_id\n        ]\n        \n        # Remove from final JSON (safely handle missing keys)\n        data.pop('currentVersion', None)\n        data.pop('lastUpgrade', None)\n        data.pop('nextUpgrade', None)\n        data.pop('isUpgradeAvailable', None)\n        data.pop('participateInNextBetaRelease', None)\n        \n        # Check if 'availableVersions' is an empty list\n        if not data['availableVersions']:\n            return \"Running the latest firmware.\", no_available_versions\n        else:\n            # Keep the original data if not empty\n            # Return the updated JSON data as a string\n            return json.dumps(data, indent=4), no_available_versions\n            \n    except json.JSONDecodeError:\n        return \"Invalid JSON data for this device type.\", False\n    except KeyError as e:\n        return f\"Missing required data field: {str(e)}\", False\n    except Exception as e:\n        return f\"Error processing device data: {str(e)}\", False\n\n# Process each device type and capture both JSON and boolean results\napplianceResult, applianceNoVersions = remove_current_version_and_attributes(mxDetails)\nswitchResult, switchNoVersions = remove_current_version_and_attributes(msDetails)\nwirelessResult, wirelessNoVersions = remove_current_version_and_attributes(mrDetails)\n\n# Set the JSON results for backward compatibility\napplianceAvailableVersionsJson = applianceResult\nswitchAvailableVersionsJson = switchResult\nwirelessAvailableVersionsJson = wirelessResult\n\n# Set individual boolean flags for each product type (using positive logic)\n# True = upgrades available, False = no upgrades available\napplianceHasUpgradeAvailable = not applianceNoVersions\nswitchHasUpgradeAvailable = not switchNoVersions\nwirelessHasUpgradeAvailable = not wirelessNoVersions\n",
                                  "script_arguments": [
                                    "$activity.definition_activity_02M3IVKIZS08U0H7qiGNWAtzvz7OkVBAI0p.output.jsonpath_queries.applianceDetails$",
                                    "$activity.definition_activity_02M3IVKIZS08U0H7qiGNWAtzvz7OkVBAI0p.output.jsonpath_queries.switchDetails$",
                                    "$activity.definition_activity_02M3IVKIZS08U0H7qiGNWAtzvz7OkVBAI0p.output.jsonpath_queries.wirelessDetails$"
                                  ],
                                  "script_queries": [
                                    {
                                      "script_query": "applianceAvailableVersionsJson",
                                      "script_query_name": "applianceAvailableVersionsJson",
                                      "script_query_type": "string"
                                    },
                                    {
                                      "script_query": "switchAvailableVersionsJson",
                                      "script_query_name": "switchAvailableVersionsJson",
                                      "script_query_type": "string"
                                    },
                                    {
                                      "script_query": "wirelessAvailableVersionsJson",
                                      "script_query_name": "wirelessAvailableVersionsJson",
                                      "script_query_type": "string"
                                    },
                                    {
                                      "script_query": "applianceHasUpgradeAvailable",
                                      "script_query_name": "applianceHasUpgradeAvailable",
                                      "script_query_type": "boolean"
                                    },
                                    {
                                      "script_query": "switchHasUpgradeAvailable",
                                      "script_query_name": "switchHasUpgradeAvailable",
                                      "script_query_type": "boolean"
                                    },
                                    {
                                      "script_query": "wirelessHasUpgradeAvailable",
                                      "script_query_name": "wirelessHasUpgradeAvailable",
                                      "script_query_type": "boolean"
                                    }
                                  ],
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_02M3KCC16KVL679xGr1IX2USKsfHp7EFzVx",
                                "name": "Set Variables",
                                "title": "Set Variables",
                                "type": "core.set_multiple_variables",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "description": "Sets output variables with processed firmware information and summary results.",
                                  "display_name": "Set Variables",
                                  "skip_execution": false,
                                  "variables_to_update": [
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MVNE15DQQ3GM2uGQAx8zHoAAIsYmtPY$",
                                      "variable_value_new": "$activity.definition_activity_02M3IVKIZS08U0H7qiGNWAtzvz7OkVBAI0p.output.jsonpath_queries.applianceCurrVersionShortName$ (ID:$activity.definition_activity_02M3IVKIZS08U0H7qiGNWAtzvz7OkVBAI0p.output.jsonpath_queries.applianceCurrVersionId$)"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MYCAE4Z471oBd6zU3dI7HlwvXsNtZ4q$",
                                      "variable_value_new": "$activity.definition_activity_02M3J5QYN9IQR5PcWCx4uv47zJMWbpGUP2P.output.script_queries.applianceAvailableVersionsJson$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MYR7I3LS64vFgpXcAidxLtVMy50gOdZ$",
                                      "variable_value_new": "$activity.definition_activity_02M3IVKIZS08U0H7qiGNWAtzvz7OkVBAI0p.output.jsonpath_queries.switchCurrVersionShortName$ (ID: $activity.definition_activity_02M3IVKIZS08U0H7qiGNWAtzvz7OkVBAI0p.output.jsonpath_queries.switchCurrVersionId$)"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MZ49LWOK23aGQRbYOcYcm8ivPEZ2mVf$",
                                      "variable_value_new": "$activity.definition_activity_02M3J5QYN9IQR5PcWCx4uv47zJMWbpGUP2P.output.script_queries.switchAvailableVersionsJson$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MZEFROAQL7kpDMAgvAu62wWwqTwJmqJ$",
                                      "variable_value_new": "$activity.definition_activity_02M3IVKIZS08U0H7qiGNWAtzvz7OkVBAI0p.output.jsonpath_queries.wirelessCurrVersionShortName$ (ID:$activity.definition_activity_02M3IVKIZS08U0H7qiGNWAtzvz7OkVBAI0p.output.jsonpath_queries.wirelessCurrVersionId$)"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MZOEXMFJN34Sue1HxX2IRzkVMmDXuMz$",
                                      "variable_value_new": "$activity.definition_activity_02M3J5QYN9IQR5PcWCx4uv47zJMWbpGUP2P.output.script_queries.wirelessAvailableVersionsJson$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M6KC1YUN2E21oTPUAWTuiigLqni8IaiMR$",
                                      "variable_value_new": "Appliance Current Version: $workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MVNE15DQQ3GM2uGQAx8zHoAAIsYmtPY$\nAppliance Available Version(s):\n$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MYCAE4Z471oBd6zU3dI7HlwvXsNtZ4q$\n------------------------------------\nSwitch Current Version: $workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MYR7I3LS64vFgpXcAidxLtVMy50gOdZ$\nSwitch Available Version(s):\n$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MZ49LWOK23aGQRbYOcYcm8ivPEZ2mVf$\n------------------------------------\nWireless Current Version: $workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MZEFROAQL7kpDMAgvAu62wWwqTwJmqJ$\nWireless Available Version(s):\n$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MZOEXMFJN34Sue1HxX2IRzkVMmDXuMz$\n------------------------------------"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.workflow_results$",
                                      "variable_value_new": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M6KC1YUN2E21oTPUAWTuiigLqni8IaiMR$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.workflow_results_code$",
                                      "variable_value_new": "completed-successfully"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02PYK5VBTIPF36xAo4ekXNelumZ8N2XzZdG$",
                                      "variable_value_new": 200
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02PYK5VBTJ5NE1O23tXaKnEe0XOOGEJ4zH7$",
                                      "variable_value_new": "Success"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02PYYLS61FZLF0ryAp4sqcDyP4E8mhuheHl$",
                                      "variable_value_new": "$activity.definition_activity_02M3J5QYN9IQR5PcWCx4uv47zJMWbpGUP2P.output.script_queries.applianceHasUpgradeAvailable$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3N3D6E9MRS0zGiJk4LnOpQ2TuV3wX4yZ$",
                                      "variable_value_new": "$activity.definition_activity_02M3J5QYN9IQR5PcWCx4uv47zJMWbpGUP2P.output.script_queries.switchHasUpgradeAvailable$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3N4E7F0NST1AHjKl5MoQpR3UvW4xY5zA$",
                                      "variable_value_new": "$activity.definition_activity_02M3J5QYN9IQR5PcWCx4uv47zJMWbpGUP2P.output.script_queries.wirelessHasUpgradeAvailable$"
                                    }
                                  ]
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          },
                          {
                            "unique_name": "definition_activity_02PYK5VWKXWO03SwInni34FV61tFGMogA14",
                            "name": "Condition Branch",
                            "title": "Firmware Data Failed",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": "$activity.definition_activity_02MGBHTE6I3GX3DjiCchzbnQ27TYv3mNIjt.output.variable_workflow_02LV1H3CNM9O04WSyjWX5NG0o5H3rbSFXFi$",
                                "operator": "ne",
                                "right_operand": 200
                              },
                              "continue_on_failure": false,
                              "description": "Firmware data retrieval failed - set error outputs and terminate workflow.",
                              "display_name": "Firmware Data Failed",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02PYK5VXKM0224WPCi8cJLvdfvalA1JFJt9",
                                "name": "Set Variables",
                                "title": "Set Firmware Error",
                                "type": "core.set_multiple_variables",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "description": "Set error outputs for firmware data retrieval failure.",
                                  "display_name": "Set Firmware Error",
                                  "skip_execution": false,
                                  "variables_to_update": [
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02PYK5VBTIPF36xAo4ekXNelumZ8N2XzZdG$",
                                      "variable_value_new": "$activity.definition_activity_02MGBHTE6I3GX3DjiCchzbnQ27TYv3mNIjt.output.variable_workflow_02LV1H3CNM9O04WSyjWX5NG0o5H3rbSFXFi$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02PYK5VBTJ5NE1O23tXaKnEe0XOOGEJ4zH7$",
                                      "variable_value_new": "Firmware Data Retrieval Failed"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02PYK5VBTIZ1M25E7SGVpt8SrknI56VrtMl$",
                                      "variable_value_new": "Failed to retrieve firmware data for network. Error: $activity.definition_activity_02MGBHTE6I3GX3DjiCchzbnQ27TYv3mNIjt.output.variable_workflow_02LV1H3CNMB7K7L2YWKcivCpvRDwhECTDqR$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.workflow_results$",
                                      "variable_value_new": "Failed: Firmware data retrieval error"
                                    }
                                  ]
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "unique_name": "definition_activity_02PYK5VQJMDSF5ESkvsZQVY94LjCs3jQbHu",
                "name": "Condition Branch",
                "title": "Network Not Found",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": "$activity.definition_activity_02M30HGB4LNA03KaCfBjUVYxuyHAOiEq2IB.output.variable_workflow_02LCS9H7YNIYX1GDaReaAe3aek2b4CnpPEW$",
                    "operator": "ne",
                    "right_operand": 200
                  },
                  "continue_on_failure": false,
                  "description": "Network lookup failed - set error outputs and terminate workflow.",
                  "display_name": "Network Not Found",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02PYK5VRJACY04QBD6lQGzESHLHYeadvaZe",
                    "name": "Set Variables",
                    "title": "Set Network Error",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "description": "Set error outputs for network not found.",
                      "display_name": "Set Network Error",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02PYK5VBTIPF36xAo4ekXNelumZ8N2XzZdG$",
                          "variable_value_new": 404
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02PYK5VBTJ5NE1O23tXaKnEe0XOOGEJ4zH7$",
                          "variable_value_new": "Network Not Found"
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02PYK5VBTIZ1M25E7SGVpt8SrknI56VrtMl$",
                          "variable_value_new": "Network '$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.input.variable_workflow_02M30H9ZWVYG97Ddcta3xu7rrVUZsl8ifwq$' not found in organization. Error details: $activity.definition_activity_02M30HGB4LNA03KaCfBjUVYxuyHAOiEq2IB.output.variable_workflow_02LCSAES32AOH7RGaVHj5aM3SixcS34Qdqc$"
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.workflow_results$",
                          "variable_value_new": "Failed: Network not found"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "categories": [
      "category_02M5I40Y7XSOX59ZtwCZnsrkS73sAGa3w1t"
    ]
  },
  "atomic_workflows": [
    "definition_workflow_02LV1H3CNM49K1df7J02ad4wyV6Jv0E23b6"
  ],
  "dependent_workflows": [
    "definition_workflow_02M605GS81XN44qr4RBWrJ6Zazk7k0ArIYX",
    "definition_workflow_02LCR4UKH38PM6zDR4Bx2b2J165gCF1mhvh",
    "definition_workflow_02LV1H3CNM49K1df7J02ad4wyV6Jv0E23b6"
  ]
}