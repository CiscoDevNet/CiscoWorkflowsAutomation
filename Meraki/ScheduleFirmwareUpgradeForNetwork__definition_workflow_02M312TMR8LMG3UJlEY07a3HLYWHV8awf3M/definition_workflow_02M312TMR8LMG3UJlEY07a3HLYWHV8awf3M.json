{
  "workflow": {
    "unique_name": "definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M",
    "name": "Schedule Firmware Upgrade for Network",
    "title": "Schedule Firmware Upgrade for Network",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "Organization ID or Name",
          "type": "datatype.string",
          "description": "Meraki organization identifier - provide either the organization name (e.g., 'Acme Corporation') or the organization ID (e.g., '123456'). The workflow automatically detects the input type and resolves to the correct organization ID. Organization names are case-sensitive and must match exactly as they appear in the Meraki Dashboard.",
          "is_required": true,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02M312TNV48D362Qqex9PTw1USYd7QlgbfQ",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Result",
          "type": "datatype.string",
          "description": "Complete JSON response from the Meraki Dashboard API containing detailed firmware upgrade scheduling results. Includes upgrade confirmation details, scheduled times, affected devices, and any warnings or additional information returned by the API for troubleshooting and audit purposes.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02M6L3TQUAWOC1fCLGxNZgjlFeD9xgkJoHr",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "MX ID",
          "type": "datatype.string",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02PZZO7WI1FZX3TWhd6HR5Vuhw8CFIEZ4Jq",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "Network Name",
          "type": "datatype.string",
          "description": "The exact name of the Meraki network where firmware upgrades will be scheduled. Must match an existing network within the specified organization. Network names are case-sensitive and must be provided exactly as they appear in the Meraki Dashboard.",
          "is_required": true,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02M312TNUWBWB54vet49qWU74z2yohx7ssJ",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "Wireless Version ID to Upgrade",
          "type": "datatype.string",
          "description": "Specific firmware version ID for Meraki Wireless Access Points (MR) devices to upgrade to. This must be a valid version ID available for the wireless devices in your network. Use the 'Check Available Firmware for Network' workflow to identify compatible version IDs. Leave empty to use the latest available firmware version. Example: 4952 for MR firmware v29.7.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02M6JG70GBGQG7HoqTfGf5aqzeOeDO3N0OT",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "Appliance Version ID to Upgrade",
          "type": "datatype.string",
          "description": "Specific firmware version ID for Meraki Security Appliance (MX) devices to upgrade to. This must be a valid version ID available for the appliances in your network. Use the 'Check Available Firmware for Network' workflow to identify compatible version IDs. Leave empty to use the latest available firmware version. Example: 4727 for MX firmware v18.107.2.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02M6JG0JY44ZB2J10JOQI8CsqtK0hhn1SBp",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "MS ID",
          "type": "datatype.string",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02PZZOFQTFANI5LoBVWZnJdR7p6CL07k1i5",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "MR ID",
          "type": "datatype.string",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02PZZOBV3C7K00njLjGN4Zjj0wjpCW0SGhM",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.integer",
        "properties": {
          "value": 0,
          "scope": "output",
          "name": "Status Code",
          "type": "datatype.integer",
          "description": "HTTP status code indicating the firmware upgrade scheduling operation result. Returns 200 for successful scheduling, 404 for network/organization not found, 400 for invalid parameters, and other standard HTTP codes for various error conditions. Essential for automated workflow decision-making.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": ""
        },
        "unique_name": "variable_workflow_02M6L2QUMXRS66QznqbbhESCOI6BVQ5KLP8",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Status Message",
          "type": "datatype.string",
          "description": "Human-readable status message describing the firmware upgrade scheduling operation outcome. Provides clear success confirmation, partial completion details, or failure reasons. Essential for user feedback and workflow orchestration decision-making in automated deployments.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02M6L319PNRLE5UnZJlJVqWYILq8SQZe8nV",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "Local Organization ID",
          "type": "datatype.string",
          "description": "Internal variable that stores the resolved Meraki organization ID after processing the input (organization name or ID). This variable ensures consistent organization identification throughout the workflow regardless of input format.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02M6HQJ239YBT6VFBUlUndyY9WWtNOYImuT",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Error Message",
          "type": "datatype.string",
          "description": "Detailed error information when firmware upgrade scheduling fails. Contains specific API error messages, validation failures, or system issues to enable effective troubleshooting. Empty when workflow completes successfully, populated with diagnostic details when errors occur.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02M6L3FIK1MB054rZdfPQcAYgBDONPSlwN6",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "Upgrade Date Time",
          "type": "datatype.string",
          "description": "Scheduled date and time for the firmware upgrade in 'YYYY-MM-DD HH:MM:SS' format using the network's timezone. All devices in the network will be upgraded simultaneously at this time. If left empty, the upgrade will be scheduled for 5 minutes from now. Maximum scheduling window is 30 days from current date. Examples: '2025-05-20 14:30:00' for 2:30 PM on May 20th, '2025-12-15 02:00:00' for 2:00 AM maintenance window.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02M6ITCWL1UEH2ROmXLUwyaAtxN0s8yb5Xq",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "Switch Version ID to Upgrade",
          "type": "datatype.string",
          "description": "Specific firmware version ID for Meraki Switch (MS) devices to upgrade to. This must be a valid version ID available for the switches in your network. Use the 'Check Available Firmware for Network' workflow to identify compatible version IDs. Leave empty to use the latest available firmware version. Example: 4758 for MS firmware v15.21.1.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02M6J1XSPTOPF32pVY3YOG8khAHZh9c1W2N",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.boolean",
        "properties": {
          "value": false,
          "scope": "input",
          "name": "Ignore Errors",
          "type": "datatype.boolean",
          "description": "Controls workflow behavior when encountering API errors or validation failures. When set to false (default), the workflow will terminate on first error with detailed error information. When set to true, the workflow continues processing and provides best-effort results despite errors.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": ""
        },
        "unique_name": "variable_workflow_02M7XBLKG0QUX0Rem8WlG1RekFxSh8w3YWo",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "is_atomic": false
      },
      "delete_workflow_instance": false,
      "description": "Schedules firmware upgrades for Meraki network devices including Security Appliances (MX), Switches (MS), and Wireless Access Points (MR). Accepts organization name or ID, locates the specified network, and schedules firmware upgrades with specified version IDs and timing. Supports flexible scheduling from immediate (5 minutes) to 30 days in advance using network timezone. \n\nAutomatically compares current firmware versions against target versions and only schedules upgrades when necessary. Multiple executions are safe - devices already running target versions are skipped with clear status reporting.\n\nProvides comprehensive status reporting and error handling for production automation workflows. Use 'Check Available Firmware for Network' workflow first to identify compatible firmware version IDs.",
      "display_name": "Schedule Firmware Upgrade for Network",
      "runtime_user": {
        "target_default": true
      },
      "target": {
        "target_type": "meraki.endpoint",
        "specify_on_workflow_start": true
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_02Q09GI4H5AEJ1GZLwktLEc4zXg9U8t6N6g",
        "name": "Group",
        "title": "Input Validation",
        "type": "logic.group",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "Validates firmware version ID inputs and provides helpful feedback if all version inputs are empty.",
          "display_as_suggestion": false,
          "display_name": "Input Validation",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_02Q09GI5GDZQT4tQjLnzlWHLvTPl3Iah0zE",
            "name": "Condition Block",
            "title": "Check Input Version IDs",
            "type": "logic.if_else",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "description": "Check if all firmware version ID inputs are empty and provide guidance if needed",
              "display_name": "Check Input Version IDs",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "blocks": [
              {
                "unique_name": "definition_activity_02Q09GI60MO9C5mrQJbgYxl52R7L5MnqDwC",
                "name": "Condition Branch",
                "title": "All Version IDs Empty",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": {
                      "left_operand": {
                        "left_operand": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.input.variable_workflow_02M6JG0JY44ZB2J10JOQI8CsqtK0hhn1SBp$",
                        "operator": "eq",
                        "right_operand": ""
                      },
                      "operator": "and",
                      "right_operand": {
                        "left_operand": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.input.variable_workflow_02M6J1XSPTOPF32pVY3YOG8khAHZh9c1W2N$",
                        "operator": "eq",
                        "right_operand": ""
                      }
                    },
                    "operator": "and",
                    "right_operand": {
                      "left_operand": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.input.variable_workflow_02M6JG70GBGQG7HoqTfGf5aqzeOeDO3N0OT$",
                      "operator": "eq",
                      "right_operand": ""
                    }
                  },
                  "continue_on_failure": false,
                  "description": "All firmware version IDs are empty - provide guidance",
                  "display_name": "All Version IDs Empty",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02Q09GI6TGJTS3iJW6J3nb6orARHgid3bk1",
                    "name": "Set Variables",
                    "title": "Set Input Validation Error",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "Set Input Validation Error",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L2QUMXRS66QznqbbhESCOI6BVQ5KLP8$",
                          "variable_value_new": 400
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L319PNRLE5UnZJlJVqWYILq8SQZe8nV$",
                          "variable_value_new": "Invalid input: At least one firmware version ID must be provided for Appliance, Switch, or Wireless devices. Use the 'Check Available Firmware for Network' workflow to identify valid version IDs."
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L3TQUAWOC1fCLGxNZgjlFeD9xgkJoHr$",
                          "variable_value_new": "Firmware upgrade failed - no version IDs specified for any device types"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02Q09GI7EWL0N3QQUaLxvvxeqyU8vHuYQZE",
                    "name": "Completed",
                    "title": "Completed - Input Validation Failed",
                    "type": "logic.completed",
                    "base_type": "activity",
                    "properties": {
                      "completion_type": "failed-completed",
                      "continue_on_failure": false,
                      "display_name": "Completed - Input Validation Failed",
                      "result_message": "At least one firmware version ID must be provided",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  }
                ]
              }
            ]
          },
          {
            "unique_name": "definition_activity_02PZA8L9O9K3T1esU9v6y7oNMB011rWbgPr",
            "name": "Execute Python Script",
            "title": "Validate Date Format",
            "type": "python3.script",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": false,
              "description": "Validates the upgrade date time format. Accepts empty value or 'YYYY-MM-DD HH:MM:SS' format.",
              "display_name": "Validate Date Format",
              "script": "import re\nimport sys\nfrom datetime import datetime\n\n# Get the date time input\n(upgrade_datetime,) = sys.argv[1:2]\n\n# Initialize validation result\nvalid_date = True\nerror_message = ''\n\n# Check if date is empty (which is allowed)\nif not upgrade_datetime or upgrade_datetime.strip() == '':\n    valid_date = True\n    error_message = ''\nelse:\n    # Validate the format using regex: YYYY-MM-DD HH:MM:SS\n    date_pattern = r'^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$'\n    \n    if not re.match(date_pattern, upgrade_datetime):\n        valid_date = False\n        error_message = f'Invalid date format: \"{upgrade_datetime}\". Expected format: YYYY-MM-DD HH:MM:SS (e.g., 2025-05-20 14:30:00)'\n    else:\n        # Additional validation - try to parse the date to ensure it's a valid date\n        try:\n            datetime.strptime(upgrade_datetime, '%Y-%m-%d %H:%M:%S')\n            valid_date = True\n            error_message = ''\n        except ValueError:\n            valid_date = False\n            error_message = f'Invalid date values: \"{upgrade_datetime}\". Please check month, day, hour, minute, and second values are valid.'",
              "script_arguments": [
                "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.input.variable_workflow_02M6ITCWL1UEH2ROmXLUwyaAtxN0s8yb5Xq$"
              ],
              "script_queries": [
                {
                  "script_query": "valid_date",
                  "script_query_name": "valid_date",
                  "script_query_type": "boolean"
                },
                {
                  "script_query": "error_message",
                  "script_query_name": "error_message",
                  "script_query_type": "string"
                }
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02PZA8L9O9K3T1esU9v6y7oNMB011rWbgPs",
            "name": "Condition Block",
            "title": "Check Date Validation Result",
            "type": "logic.if_else",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "description": "Check if date validation failed and exit with error if invalid format",
              "display_name": "Check Date Validation Result",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "blocks": [
              {
                "unique_name": "definition_activity_02PZA8L9O9K3T1esU9v6y7oNMB011rWbgPt",
                "name": "Condition Branch",
                "title": "Invalid Date Format",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": "$activity.definition_activity_02PZA8L9O9K3T1esU9v6y7oNMB011rWbgPr.output.script_queries.valid_date$",
                    "operator": "eq",
                    "right_operand": false
                  },
                  "continue_on_failure": false,
                  "description": "Date format validation failed",
                  "display_name": "Invalid Date Format",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02PZA8L9O9K3T1esU9v6y7oNMB011rWbgPu",
                    "name": "Set Variables",
                    "title": "Set Date Validation Error",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "Set Date Validation Error",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L2QUMXRS66QznqbbhESCOI6BVQ5KLP8$",
                          "variable_value_new": 400
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L319PNRLE5UnZJlJVqWYILq8SQZe8nV$",
                          "variable_value_new": "$activity.definition_activity_02PZA8L9O9K3T1esU9v6y7oNMB011rWbgPr.output.script_queries.error_message$"
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L3TQUAWOC1fCLGxNZgjlFeD9xgkJoHr$",
                          "variable_value_new": "Firmware upgrade failed - invalid date format provided"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02PZA8L9O9K3T1esU9v6y7oNMB011rWbgPv",
                    "name": "Completed",
                    "title": "Completed - Date Validation Failed",
                    "type": "logic.completed",
                    "base_type": "activity",
                    "properties": {
                      "completion_type": "failed-completed",
                      "continue_on_failure": false,
                      "display_name": "Completed - Date Validation Failed",
                      "result_message": "$activity.definition_activity_02PZA8L9O9K3T1esU9v6y7oNMB011rWbgPr.output.script_queries.error_message$",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02Q09GIC8MVIQ4pDqP9wLXZFUqYYHuGN4l0",
                    "name": "Execute Python Script",
                    "title": "Validate Version ID Formats",
                    "type": "python3.script",
                    "base_type": "activity",
                    "properties": {
                      "action_timeout": 180,
                      "continue_on_failure": false,
                      "description": "Validates that version IDs are numeric when provided",
                      "display_name": "Validate Version ID Formats",
                      "script": "import re\nimport sys\n\n# Get version IDs from command line arguments\n(appliance_version, switch_version, wireless_version) = sys.argv[1:4]\n\n# Initialize validation result\nvalid_versions = True\nerror_messages = []\n\n# Function to validate version ID format\ndef validate_version_id(version_id, device_type):\n    if not version_id or version_id.strip() == '':\n        return True, ''  # Empty is allowed\n    \n    # Check if it's numeric\n    if not version_id.isdigit():\n        return False, f'Invalid {device_type} Version ID: \"{version_id}\". Version IDs must be numeric (e.g., 4727, 4952, 4758).'\n    \n    return True, ''\n\n# Validate each version ID\nvalidations = [\n    (appliance_version, 'Appliance'),\n    (switch_version, 'Switch'),\n    (wireless_version, 'Wireless')\n]\n\nfor version_id, device_type in validations:\n    is_valid, error_msg = validate_version_id(version_id, device_type)\n    if not is_valid:\n        valid_versions = False\n        error_messages.append(error_msg)\n\n# Combine error messages\nfinal_error_message = '\\n'.join(error_messages) if error_messages else ''",
                      "script_arguments": [
                        "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.input.variable_workflow_02M6JG0JY44ZB2J10JOQI8CsqtK0hhn1SBp$",
                        "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.input.variable_workflow_02M6J1XSPTOPF32pVY3YOG8khAHZh9c1W2N$",
                        "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.input.variable_workflow_02M6JG70GBGQG7HoqTfGf5aqzeOeDO3N0OT$"
                      ],
                      "script_queries": [
                        {
                          "script_query": "valid_versions",
                          "script_query_name": "valid_versions",
                          "script_query_type": "boolean"
                        },
                        {
                          "script_query": "final_error_message",
                          "script_query_name": "error_message",
                          "script_query_type": "string"
                        }
                      ],
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02Q09GICUX7RC67n3s3iWIVdt3O8K9rtGeV",
                    "name": "Condition Block",
                    "title": "Check Version ID Validation Result",
                    "type": "logic.if_else",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "description": "Check if version ID validation failed and exit with error if invalid format",
                      "display_name": "Check Version ID Validation Result",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "blocks": [
                      {
                        "unique_name": "definition_activity_02Q09GIDGL0HQ3iQ7n8PLqcqi2vLHM94twW",
                        "name": "Condition Branch",
                        "title": "Invalid Version ID Format",
                        "type": "logic.condition_block",
                        "base_type": "activity",
                        "properties": {
                          "condition": {
                            "left_operand": "$activity.definition_activity_02Q09GIC8MVIQ4pDqP9wLXZFUqYYHuGN4l0.output.script_queries.valid_versions$",
                            "operator": "eq",
                            "right_operand": false
                          },
                          "continue_on_failure": false,
                          "description": "Version ID format validation failed",
                          "display_name": "Invalid Version ID Format",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02Q09GIEFH9PL30q00BtXBQWqSxVFn9Y7M2",
                            "name": "Set Variables",
                            "title": "Set Version ID Validation Error",
                            "type": "core.set_multiple_variables",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "display_name": "Set Version ID Validation Error",
                              "skip_execution": false,
                              "variables_to_update": [
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L2QUMXRS66QznqbbhESCOI6BVQ5KLP8$",
                                  "variable_value_new": 400
                                },
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L319PNRLE5UnZJlJVqWYILq8SQZe8nV$",
                                  "variable_value_new": "$activity.definition_activity_02Q09GIC8MVIQ4pDqP9wLXZFUqYYHuGN4l0.output.script_queries.error_message$"
                                },
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L3FIK1MB054rZdfPQcAYgBDONPSlwN6$",
                                  "variable_value_new": "$activity.definition_activity_02Q09GIC8MVIQ4pDqP9wLXZFUqYYHuGN4l0.output.script_queries.error_message$"
                                },
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L3TQUAWOC1fCLGxNZgjlFeD9xgkJoHr$",
                                  "variable_value_new": "Firmware upgrade failed - invalid version ID format provided"
                                }
                              ]
                            },
                            "object_type": "definition_activity"
                          },
                          {
                            "unique_name": "definition_activity_02Q09GIF73GML2p7LQSjAog4iz54ni0nCwq",
                            "name": "Completed",
                            "title": "Completed - Version ID Validation Failed",
                            "type": "logic.completed",
                            "base_type": "activity",
                            "properties": {
                              "completion_type": "failed-completed",
                              "continue_on_failure": false,
                              "display_name": "Completed - Version ID Validation Failed",
                              "result_message": "$activity.definition_activity_02Q09GIC8MVIQ4pDqP9wLXZFUqYYHuGN4l0.output.script_queries.error_message$",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_02M6JZVP05OG65tqeJlav9hEVYcW0OF8qpu",
        "name": "Group",
        "title": "Lookup Organization and Network",
        "type": "logic.group",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "Lookup the Organization and the Network within the Organization. ",
          "display_as_suggestion": false,
          "display_name": "Lookup Organization and Network",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_02MGBK77HJ5SF71aVNGCAJ7Bifn5QSUdozA",
            "name": "Get Organization By Name",
            "title": "Get Organization By Name",
            "type": "workflow.sub_workflow",
            "base_type": "subworkflow",
            "properties": {
              "continue_on_failure": true,
              "display_name": "Get Organization By Name",
              "input": {
                "variable_workflow_02M605GTHU5L72i8goD4nuYixYOvQEFV7rN": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.input.variable_workflow_02M312TNV48D362Qqex9PTw1USYd7QlgbfQ$",
                "variable_workflow_02M605GTI1LUG737lDLyzxnE9jwENJNQ08W": false
              },
              "runtime_user": {
                "target_default": true
              },
              "skip_execution": false,
              "target": {
                "target_type": "meraki.endpoint",
                "use_workflow_target": true
              },
              "workflow_id": "definition_workflow_02M605GS81XN44qr4RBWrJ6Zazk7k0ArIYX",
              "workflow_name": "Meraki - Get Organization By Name"
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02M6HPRJG1K7U41B1j5MHl3N7AhJpHF4ul8",
            "name": "Condition Block",
            "title": "Was Input Org Name?",
            "type": "logic.if_else",
            "base_type": "activity",
            "properties": {
              "conditions": [],
              "continue_on_failure": false,
              "display_name": "Was Input Org Name?",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "blocks": [
              {
                "unique_name": "definition_activity_02M6HPRJLFUAD4QDpPEenjH0rJOVlMxuss1",
                "name": "Condition Branch",
                "title": "Yes, Set ID from Get",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": "$activity.definition_activity_02MGBK77HJ5SF71aVNGCAJ7Bifn5QSUdozA.output.variable_workflow_02M605GTHEWOW4TGG1xjMEivKqrrMbc2hM3$",
                    "operator": "eq",
                    "right_operand": 200
                  },
                  "continue_on_failure": false,
                  "display_name": "Yes, Set ID from Get",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02M6HQLPWGM364f64fuS1qF3ohGzIVeBrSN",
                    "name": "Set Variables",
                    "title": "Set Local Org ID Variable",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "Set Local Org ID Variable",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.local.variable_workflow_02M6HQJ239YBT6VFBUlUndyY9WWtNOYImuT$",
                          "variable_value_new": "$activity.definition_activity_02MGBK77HJ5SF71aVNGCAJ7Bifn5QSUdozA.output.variable_workflow_02M605GTJITQP1fcLQlR8CLYAHoMomGWZvE$"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  }
                ]
              },
              {
                "unique_name": "definition_activity_02M6HPRJQWZ2Z5e27Q83OcHNA47AU8yTHof",
                "name": "Condition Branch",
                "title": "No, Set ID from Input",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": "$activity.definition_activity_02MGBK77HJ5SF71aVNGCAJ7Bifn5QSUdozA.output.variable_workflow_02M605GTHEWOW4TGG1xjMEivKqrrMbc2hM3$",
                    "operator": "ne",
                    "right_operand": 200
                  },
                  "continue_on_failure": false,
                  "display_name": "No, Set ID from Input",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02M6HSB8V83YX5CLExsB7hICBo11No4pZkD",
                    "name": "Set Variables",
                    "title": "Set Local Org ID Variable",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "Set Local Org ID Variable",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.local.variable_workflow_02M6HQJ239YBT6VFBUlUndyY9WWtNOYImuT$",
                          "variable_value_new": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.input.variable_workflow_02M312TNV48D362Qqex9PTw1USYd7QlgbfQ$"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  }
                ]
              }
            ]
          },
          {
            "unique_name": "definition_activity_02M312TTTNDIE7iqfUDnANBR4WCbYfp3fdy",
            "name": "Get Network By Name",
            "title": "Get Network By Name",
            "type": "workflow.sub_workflow",
            "base_type": "subworkflow",
            "properties": {
              "continue_on_failure": true,
              "display_name": "Get Network By Name",
              "input": {
                "variable_workflow_02LCRACABYWD40LVa27k00YndGuostARjdp": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.local.variable_workflow_02M6HQJ239YBT6VFBUlUndyY9WWtNOYImuT$",
                "variable_workflow_02LCRAQ5WICDM3PgxFwKyi19yaeu1bTpVUx": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.input.variable_workflow_02M312TNUWBWB54vet49qWU74z2yohx7ssJ$",
                "variable_workflow_02LEUF5N782ES5q1O7K4p1AoMBPrkkcxi1E": false
              },
              "runtime_user": {
                "target_default": true
              },
              "skip_execution": false,
              "target": {
                "target_type": "meraki.endpoint",
                "use_workflow_target": true
              },
              "workflow_id": "definition_workflow_02LCR4UKH38PM6zDR4Bx2b2J165gCF1mhvh",
              "workflow_name": "Meraki - Get Network By Name"
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02M6K8C1OVZWR6mTvLTmwTncV0Msun7r7SQ",
            "name": "Condition Block",
            "title": "Was the Request Successful?",
            "type": "logic.if_else",
            "base_type": "activity",
            "properties": {
              "conditions": [],
              "continue_on_failure": false,
              "display_name": "Was the Request Successful?",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "blocks": [
              {
                "unique_name": "definition_activity_02M6K8C1P2HPV1nsXGZl20mYg81RkTHe1xM",
                "name": "Condition Branch",
                "title": "Ignore Errors",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": {
                      "left_operand": "$activity.definition_activity_02M312TTTNDIE7iqfUDnANBR4WCbYfp3fdy.output.variable_workflow_02LCS9H7YNIYX1GDaReaAe3aek2b4CnpPEW$",
                      "operator": "ne",
                      "right_operand": 200
                    },
                    "operator": "and",
                    "right_operand": {
                      "left_operand": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.input.variable_workflow_02M7XBLKG0QUX0Rem8WlG1RekFxSh8w3YWo$",
                      "operator": "eq",
                      "right_operand": true
                    }
                  },
                  "continue_on_failure": false,
                  "display_name": "Ignore Errors",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02M6L785K2Y0N1RpAkdVHCCV0eEvqyuIUJJ",
                    "name": "Set Variables",
                    "title": "Set Variables",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "Set Variables",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L2QUMXRS66QznqbbhESCOI6BVQ5KLP8$",
                          "variable_value_new": "$activity.definition_activity_02M312TTTNDIE7iqfUDnANBR4WCbYfp3fdy.output.variable_workflow_02LCS9H7YNIYX1GDaReaAe3aek2b4CnpPEW$"
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L319PNRLE5UnZJlJVqWYILq8SQZe8nV$",
                          "variable_value_new": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.input.variable_workflow_02M312TNUWBWB54vet49qWU74z2yohx7ssJ$ Not Found"
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L3FIK1MB054rZdfPQcAYgBDONPSlwN6$",
                          "variable_value_new": "$activity.definition_activity_02M312TTTNDIE7iqfUDnANBR4WCbYfp3fdy.output.variable_workflow_02LCSAES32AOH7RGaVHj5aM3SixcS34Qdqc$"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02M6LJFHQ9SFA2UdJ4SRwU5BCdByGnp5W6O",
                    "name": "Completed",
                    "title": "Completed",
                    "type": "logic.completed",
                    "base_type": "activity",
                    "properties": {
                      "completion_type": "succeeded",
                      "continue_on_failure": false,
                      "display_name": "Completed",
                      "result_message": "$activity.definition_activity_02M312TTTNDIE7iqfUDnANBR4WCbYfp3fdy.output.variable_workflow_02LCSAES32AOH7RGaVHj5aM3SixcS34Qdqc$",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  }
                ]
              },
              {
                "unique_name": "definition_activity_02M7XBZLVY85C0b2jxLf9wtvDlcwojUQ7Ni",
                "name": "Condition Branch",
                "title": "Failed",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": "$activity.definition_activity_02M312TTTNDIE7iqfUDnANBR4WCbYfp3fdy.output.variable_workflow_02LCS9H7YNIYX1GDaReaAe3aek2b4CnpPEW$",
                    "operator": "ne",
                    "right_operand": 200
                  },
                  "continue_on_failure": false,
                  "display_name": "Failed",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02M7XBZLVZMPR6lmSIHwkb49aAMVcHqLvaf",
                    "name": "Set Variables",
                    "title": "Set Variables",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "Set Variables",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L2QUMXRS66QznqbbhESCOI6BVQ5KLP8$",
                          "variable_value_new": "$activity.definition_activity_02M312TTTNDIE7iqfUDnANBR4WCbYfp3fdy.output.variable_workflow_02LCS9H7YNIYX1GDaReaAe3aek2b4CnpPEW$"
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L319PNRLE5UnZJlJVqWYILq8SQZe8nV$",
                          "variable_value_new": "$activity.definition_activity_02M312TTTNDIE7iqfUDnANBR4WCbYfp3fdy.output.variable_workflow_02LCSAES32AOH7RGaVHj5aM3SixcS34Qdqc$"
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L3TQUAWOC1fCLGxNZgjlFeD9xgkJoHr$",
                          "variable_value_new": "$activity.definition_activity_02M312TTTNDIE7iqfUDnANBR4WCbYfp3fdy.output.variable_workflow_02LCSAES32AOH7RGaVHj5aM3SixcS34Qdqc$"
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L3FIK1MB054rZdfPQcAYgBDONPSlwN6$",
                          "variable_value_new": "$activity.definition_activity_02M312TTTNDIE7iqfUDnANBR4WCbYfp3fdy.output.variable_workflow_02LCSAES32AOH7RGaVHj5aM3SixcS34Qdqc$"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02M7XBZLW235H7kg3i3HNxogJ9WWOvG3FCf",
                    "name": "Completed",
                    "title": "Completed",
                    "type": "logic.completed",
                    "base_type": "activity",
                    "properties": {
                      "completion_type": "failed-completed",
                      "continue_on_failure": false,
                      "display_name": "Completed",
                      "result_message": "$activity.definition_activity_02M312TTTNDIE7iqfUDnANBR4WCbYfp3fdy.output.variable_workflow_02LCSAES32AOH7RGaVHj5aM3SixcS34Qdqc$",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_02PYMKA5ZB9KB2fLLZztXyVbFS002iPSWFg",
        "name": "Group",
        "title": "Check if Upgrade is needed",
        "type": "logic.group",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "Validates current firmware versions against input version IDs to determine if upgrades are needed. Implements idempotency by ensuring devices are only upgraded when input version differs from current version.",
          "display_as_suggestion": false,
          "display_name": "Check if Upgrade is needed",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_02PZA0D1G1BVX2UJYN0u7UFRCDXxjQjEdpd",
            "name": "Check Available Firmware for Network",
            "title": "Check Available Firmware for Network",
            "type": "workflow.sub_workflow",
            "base_type": "subworkflow",
            "properties": {
              "continue_on_failure": false,
              "description": "Checks available firmware updates for Meraki network devices including Security Appliances (MX), Switches (MS), and Wireless Access Points (MR). Accepts organization name or ID, locates the specified network, and returns current firmware versions along with available upgrades for each device type in both individual outputs and a consolidated summary format.",
              "display_name": "Check Available Firmware for Network",
              "input": {
                "variable_workflow_02M30H9ZWVYG97Ddcta3xu7rrVUZsl8ifwq": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.input.variable_workflow_02M312TNUWBWB54vet49qWU74z2yohx7ssJ$",
                "variable_workflow_02M30IM5VO2AS4WKLy2VYN1plX7frJeH1qw": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.input.variable_workflow_02M312TNV48D362Qqex9PTw1USYd7QlgbfQ$"
              },
              "runtime_user": {
                "target_default": true
              },
              "skip_execution": false,
              "target": {
                "target_type": "meraki.endpoint",
                "use_workflow_target": true
              },
              "workflow_id": "definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF",
              "workflow_name": "Check Available Firmware for Network"
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02PZA1E2H2CWL3VKM1n8q9gFET003jQTXGh",
            "name": "Execute Python Script",
            "title": "Determine Upgrade Requirements",
            "type": "python3.script",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": false,
              "description": "Compare input version IDs against current versions to determine which device types need upgrades. Sets filtered version IDs for each device type - empty if no upgrade needed, input value if upgrade required. Generates status messages for user feedback.",
              "display_name": "Determine Upgrade Requirements",
              "script": "import re\nimport sys\n\n# Get inputs from command line arguments\n(appliance_current_version, switch_current_version, wireless_current_version, \n appliance_input_version, switch_input_version, wireless_input_version) = sys.argv[1:7]\n\n# Extract version IDs from formatted strings like 'MX 18.211.5.2 (ID:4625)'\ndef extract_version_id(version_string):\n    if not version_string or version_string.strip() == '' or version_string == 'null':\n        return ''\n    \n    # Look for pattern like '(ID:1234)' in the string\n    match = re.search(r'\\(ID:([^)]+)\\)', version_string)\n    if match:\n        return match.group(1)\n    return ''\n\n# Extract version names from formatted strings like 'MX 18.211.5.2 (ID:4625)'\ndef extract_version_name(version_string):\n    if not version_string or version_string.strip() == '' or version_string == 'null':\n        return ''\n    \n    # Extract everything before ' (ID:' or return the whole string if no ID found\n    if ' (ID:' in version_string:\n        return version_string.split(' (ID:')[0]\n    return version_string\n\n# Extract current version IDs and names from each device type\napplianceCurrentVersionId = extract_version_id(appliance_current_version)\nswitchCurrentVersionId = extract_version_id(switch_current_version)\nwirelessCurrentVersionId = extract_version_id(wireless_current_version)\n\napplianceCurrentVersionName = extract_version_name(appliance_current_version)\nswitchCurrentVersionName = extract_version_name(switch_current_version)\nwirelessCurrentVersionName = extract_version_name(wireless_current_version)\n\n# Initialize status tracking\nstatus_messages = []\n\n# Determine filtered version IDs based on upgrade requirements\n# Set to input value if upgrade needed, empty if not needed or input is empty\nfilteredApplianceVersionId = ''\nfilteredSwitchVersionId = ''\nfilteredWirelessVersionId = ''\n\n# Check appliance upgrade requirement\nif appliance_input_version and appliance_input_version.strip() != '' and appliance_input_version != 'null':\n    if appliance_input_version == applianceCurrentVersionId:\n        status_messages.append(f'🔵 Appliance (MX): Already running target version (ID: {appliance_input_version}) - upgrade skipped')\n    else:\n        filteredApplianceVersionId = appliance_input_version\n        if applianceCurrentVersionName:\n            status_messages.append(f'🟢 Appliance (MX): Upgrade scheduled from {applianceCurrentVersionName} to version ID {appliance_input_version}')\n        else:\n            status_messages.append(f'🟢 Appliance (MX): Upgrade scheduled to version ID {appliance_input_version}')\n\n# Check switch upgrade requirement  \nif switch_input_version and switch_input_version.strip() != '' and switch_input_version != 'null':\n    if switch_input_version == switchCurrentVersionId:\n        status_messages.append(f'🔵 Switch (MS): Already running target version (ID: {switch_input_version}) - upgrade skipped')\n    else:\n        filteredSwitchVersionId = switch_input_version\n        if switchCurrentVersionName:\n            status_messages.append(f'🟢 Switch (MS): Upgrade scheduled from {switchCurrentVersionName} to version ID {switch_input_version}')\n        else:\n            status_messages.append(f'🟢 Switch (MS): Upgrade scheduled to version ID {switch_input_version}')\n\n# Check wireless upgrade requirement\nif wireless_input_version and wireless_input_version.strip() != '' and wireless_input_version != 'null':\n    if wireless_input_version == wirelessCurrentVersionId:\n        status_messages.append(f'🔵 Wireless (MR): Already running target version (ID: {wireless_input_version}) - upgrade skipped')\n    else:\n        filteredWirelessVersionId = wireless_input_version\n        if wirelessCurrentVersionName:\n            status_messages.append(f'🟢 Wireless (MR): Upgrade scheduled from {wirelessCurrentVersionName} to version ID {wireless_input_version}')\n        else:\n            status_messages.append(f'🟢 Wireless (MR): Upgrade scheduled to version ID {wireless_input_version}')\n\n# Determine if any upgrades are needed\nanyUpgradeNeeded = (filteredApplianceVersionId != '' or \n                   filteredSwitchVersionId != '' or \n                   filteredWirelessVersionId != '')\n\n# Generate final status message\nif not status_messages:\n    upgrade_status_message = 'ℹ️ No firmware upgrade targets specified - all device type version fields are empty.'\nelse:\n    upgrade_status_message = '\\n'.join(status_messages)\n    if anyUpgradeNeeded:\n        upgrade_count = sum(1 for vid in [filteredApplianceVersionId, filteredSwitchVersionId, filteredWirelessVersionId] if vid != '')\n        skip_count = len(status_messages) - upgrade_count\n        if skip_count \u003e 0:\n            upgrade_status_message += f'\\n\\n📊 Summary: {upgrade_count} device type(s) scheduled for upgrade, {skip_count} already at target version(s)'\n        else:\n            upgrade_status_message += f'\\n\\n📊 Summary: {upgrade_count} device type(s) scheduled for upgrade'\n    else:\n        upgrade_status_message += '\\n\\n📊 Summary: All specified device types are already running target firmware versions - no upgrades needed'",
              "script_arguments": [
                "$activity.definition_activity_02PZA0D1G1BVX2UJYN0u7UFRCDXxjQjEdpd.output.variable_workflow_02M3MVNE15DQQ3GM2uGQAx8zHoAAIsYmtPY$",
                "$activity.definition_activity_02PZA0D1G1BVX2UJYN0u7UFRCDXxjQjEdpd.output.variable_workflow_02M3MYR7I3LS64vFgpXcAidxLtVMy50gOdZ$",
                "$activity.definition_activity_02PZA0D1G1BVX2UJYN0u7UFRCDXxjQjEdpd.output.variable_workflow_02M3MZEFROAQL7kpDMAgvAu62wWwqTwJmqJ$",
                "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.input.variable_workflow_02M6JG0JY44ZB2J10JOQI8CsqtK0hhn1SBp$",
                "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.input.variable_workflow_02M6J1XSPTOPF32pVY3YOG8khAHZh9c1W2N$",
                "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.input.variable_workflow_02M6JG70GBGQG7HoqTfGf5aqzeOeDO3N0OT$"
              ],
              "script_queries": [
                {
                  "script_query": "filteredApplianceVersionId",
                  "script_query_name": "filteredApplianceVersionId",
                  "script_query_type": "string"
                },
                {
                  "script_query": "filteredSwitchVersionId",
                  "script_query_name": "filteredSwitchVersionId",
                  "script_query_type": "string"
                },
                {
                  "script_query": "filteredWirelessVersionId",
                  "script_query_name": "filteredWirelessVersionId",
                  "script_query_type": "string"
                },
                {
                  "script_query": "anyUpgradeNeeded",
                  "script_query_name": "anyUpgradeNeeded",
                  "script_query_type": "boolean"
                },
                {
                  "script_query": "upgrade_status_message",
                  "script_query_name": "upgrade_status_message",
                  "script_query_type": "string"
                }
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02PZA7K8N8J2S0drT8u5x6nMLA010qXafOr",
            "name": "Set Variables",
            "title": "Set Filtered Version IDs",
            "type": "core.set_multiple_variables",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "description": "Set the local variables with filtered version IDs for each device type. Variables will contain version ID if upgrade needed, empty if no upgrade required.",
              "display_name": "Set Filtered Version IDs",
              "skip_execution": false,
              "variables_to_update": [
                {
                  "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.local.variable_workflow_02PZZO7WI1FZX3TWhd6HR5Vuhw8CFIEZ4Jq$",
                  "variable_value_new": "$activity.definition_activity_02PZA1E2H2CWL3VKM1n8q9gFET003jQTXGh.output.script_queries.filteredApplianceVersionId$"
                },
                {
                  "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.local.variable_workflow_02PZZOFQTFANI5LoBVWZnJdR7p6CL07k1i5$",
                  "variable_value_new": "$activity.definition_activity_02PZA1E2H2CWL3VKM1n8q9gFET003jQTXGh.output.script_queries.filteredSwitchVersionId$"
                },
                {
                  "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.local.variable_workflow_02PZZOBV3C7K00njLjGN4Zjj0wjpCW0SGhM$",
                  "variable_value_new": "$activity.definition_activity_02PZA1E2H2CWL3VKM1n8q9gFET003jQTXGh.output.script_queries.filteredWirelessVersionId$"
                }
              ]
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02PZA2F3I3DXM4WLN2o9r0hGFU004kRUYHi",
            "name": "Condition Block",
            "title": "Validate Version Requirements",
            "type": "logic.if_else",
            "base_type": "activity",
            "properties": {
              "conditions": [],
              "continue_on_failure": false,
              "description": "Check each device type to determine if upgrade is needed by comparing input version IDs with current version IDs.",
              "display_name": "Validate Version Requirements",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "blocks": [
              {
                "unique_name": "definition_activity_02PZA2F3I7GYN5XMO3p0s1iHGV005lSVZIj",
                "name": "Condition Branch",
                "title": "No Upgrades Needed",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": "$activity.definition_activity_02PZA1E2H2CWL3VKM1n8q9gFET003jQTXGh.output.script_queries.anyUpgradeNeeded$",
                    "operator": "eq",
                    "right_operand": false
                  },
                  "continue_on_failure": false,
                  "description": "No firmware upgrades are needed - all specified devices are already running the target versions",
                  "display_name": "No Upgrades Needed",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02PZA3G4J4EYO6ZNP4q1t2jIHW006mTWaJk",
                    "name": "Set Variables",
                    "title": "Set No Upgrade Needed Variables",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "Set No Upgrade Needed Variables",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L2QUMXRS66QznqbbhESCOI6BVQ5KLP8$",
                          "variable_value_new": 200
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L319PNRLE5UnZJlJVqWYILq8SQZe8nV$",
                          "variable_value_new": "No firmware upgrade needed - all specified devices are already running the target firmware versions or no valid version IDs were provided"
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L3TQUAWOC1fCLGxNZgjlFeD9xgkJoHr$",
                          "variable_value_new": "Firmware check completed - no upgrade required for $workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.input.variable_workflow_02M312TNUWBWB54vet49qWU74z2yohx7ssJ$\n\n$activity.definition_activity_02PZA1E2H2CWL3VKM1n8q9gFET003jQTXGh.output.script_queries.upgrade_status_message$"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02PZA4H5K5FZP7aoQ5r2u3kJIX007nUXbKl",
                    "name": "Completed",
                    "title": "Completed - No Upgrade Needed",
                    "type": "logic.completed",
                    "base_type": "activity",
                    "properties": {
                      "completion_type": "succeeded",
                      "continue_on_failure": false,
                      "display_name": "Completed - No Upgrade Needed",
                      "result_message": "All devices are already running the specified firmware versions. No upgrade needed.",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_02Q09HV27P34N1B6qUGq6RYL2dAvIwQAlSA",
        "name": "Group",
        "title": "Upgrade Networks",
        "type": "logic.group",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "Executes the actual firmware upgrade scheduling after validation and requirements determination. Uses the Update Network Firmware Upgrades atomic workflow to schedule firmware upgrades for the filtered device types that require updates. Handles both successful scheduling and error scenarios with comprehensive status reporting and proper error handling.",
          "display_as_suggestion": false,
          "display_name": "Upgrade Networks",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_02MGCSC45W3PJ5TPIq4e9IaIOQToLGFC3p0",
            "name": "Update Network Firmware Upgrades",
            "title": "Update Network Firmware Upgrades",
            "type": "workflow.atomic_workflow",
            "base_type": "subworkflow",
            "properties": {
              "continue_on_failure": true,
              "description": "Update Network Firmware based on inputs provided.",
              "display_name": "Update Network Firmware Upgrades",
              "input": {
                "variable_workflow_02M3057KLFLIG20p3pF8ezNDO75MHqfMshf": "$activity.definition_activity_02M312TTTNDIE7iqfUDnANBR4WCbYfp3fdy.output.variable_workflow_02LCRLPN6EZY51pb3GRpQG7QdKWS452YyuL$",
                "variable_workflow_02M4KERVOSRJQ08qXFbfM4iMYQx2FpdU2Wv": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.local.variable_workflow_02PZZO7WI1FZX3TWhd6HR5Vuhw8CFIEZ4Jq$",
                "variable_workflow_02M4KERVP62GU060qFU6m1vvv9OwL3mx2dr": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.input.variable_workflow_02M6ITCWL1UEH2ROmXLUwyaAtxN0s8yb5Xq$",
                "variable_workflow_02M4KERVPIWKK5qoD0mltZ2vRBwqueLtzx3": false,
                "variable_workflow_02M4KERVPWAVA4upg4hyDRhVSQq4gXX6sf2": "",
                "variable_workflow_02M4KERVQ9MZF7jg3BdAhGNZFlt3qteptmt": "",
                "variable_workflow_02M4KERVQMOMV7BMIPi4zaoJNiqQg4T9JvI": "",
                "variable_workflow_02M4KERVQZELU4R7e0vGsxOkGMXFgxCcCQA": false,
                "variable_workflow_02M4KERVRC3QE2OLTU4o22QEpid35nqLKxL": "",
                "variable_workflow_02M4KERVS2VGZ2aMw0gwig6JJIT24q4KMP3": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.input.variable_workflow_02M6ITCWL1UEH2ROmXLUwyaAtxN0s8yb5Xq$",
                "variable_workflow_02M4KERVSTNX04vnDZTl0xrUY7LDJa4ZdlN": "",
                "variable_workflow_02M4KERVT6GCB3qhldBseHG3T6lt0rMU1Mh": "",
                "variable_workflow_02M4KERVTJG3D6z0pR38CYPBhZD7S5rTHeL": "",
                "variable_workflow_02M4KERVTXNXE0VtG74iQnLYuk15EOGjdTE": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.input.variable_workflow_02M6ITCWL1UEH2ROmXLUwyaAtxN0s8yb5Xq$",
                "variable_workflow_02M4KERVUAJ1V1PyguqfdoICjF1BmHR7X2b": false,
                "variable_workflow_02M4KERVUNIC90E9ID0hvx5GO21BmmzIs08": false,
                "variable_workflow_02M4KERVV09U46NNQXWhuLlgEFsBSliOUNR": false,
                "variable_workflow_02M4KERVVD4B80d0TNrHG17Oj0JRKQ0t1rM": "",
                "variable_workflow_02M4KERVVPPQ72Beed28WWzCNhfcw121KZh": "",
                "variable_workflow_02M4KERVW32IK323MeeO2ZRMVhqupIl3Vnf": "",
                "variable_workflow_02M4KERVWFXYU1hDx5aB3T8ThL6zSXFMTT3": false,
                "variable_workflow_02M4KERVWSKTJ4T8YMhcQ21to7TnlCqYM3l": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.local.variable_workflow_02PZZOFQTFANI5LoBVWZnJdR7p6CL07k1i5$",
                "variable_workflow_02M4KERVX5OFW4pJO7lxPaQ7ocZzRKxdKfn": "",
                "variable_workflow_02M4KERVXJS3R2hNPsRY66qPvsx8P6I77S3": false,
                "variable_workflow_02M4KERVXWWZV3oInj8jFfnitnKrWUaFaX2": false,
                "variable_workflow_02M4KERVYC3RT6HIpeFiGsPas45oB0gD48h": false,
                "variable_workflow_02M4KERVYPC1E11PVRqaDjAaHJ3TRWznwFf": "",
                "variable_workflow_02M4KERVZ2C7F7lU7gVGO8NZOaQjYe95OZW": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.local.variable_workflow_02PZZOBV3C7K00njLjGN4Zjj0wjpCW0SGhM$"
              },
              "runtime_user": {
                "target_default": true
              },
              "skip_execution": false,
              "target": {
                "target_type": "meraki.endpoint",
                "use_workflow_target": true
              },
              "workflow_id": "definition_workflow_02M3057KLFJ745Vm184muHicvBpdJ0s0vGF",
              "workflow_name": "Meraki - Update Network Firmware Upgrades"
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02M6LGMTX47U46kBoNBf5Ftup3tj59Fv2y4",
            "name": "Condition Block",
            "title": "Was the Request Successful?",
            "type": "logic.if_else",
            "base_type": "activity",
            "properties": {
              "conditions": [],
              "continue_on_failure": false,
              "description": "Evaluate result of the operation and populate final responses.",
              "display_name": "Was the Request Successful?",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "blocks": [
              {
                "unique_name": "definition_activity_02M6LGMTX4ZD53IvNzCWjfCmdXwlkPZIHZy",
                "name": "Condition Branch",
                "title": "200/Success",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": "$activity.definition_activity_02MGCSC45W3PJ5TPIq4e9IaIOQToLGFC3p0.output.variable_workflow_02M3057KLFT882CZIEPo8wIRVmx8JqaChAz$",
                    "operator": "eq",
                    "right_operand": 200
                  },
                  "continue_on_failure": false,
                  "display_name": "200/Success",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02M6LGMTX8O0O3mNa7v1zbntIH5z4Oxd3to",
                    "name": "Set Variables",
                    "title": "Set Variables",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "Set Variables",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L2QUMXRS66QznqbbhESCOI6BVQ5KLP8$",
                          "variable_value_new": "$activity.definition_activity_02MGCSC45W3PJ5TPIq4e9IaIOQToLGFC3p0.output.variable_workflow_02M3057KLFT882CZIEPo8wIRVmx8JqaChAz$"
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L319PNRLE5UnZJlJVqWYILq8SQZe8nV$",
                          "variable_value_new": "$activity.definition_activity_02MGCSC45W3PJ5TPIq4e9IaIOQToLGFC3p0.output.variable_workflow_02M3057KLFSGG0DBQRLz133mNnZHnGJESAq$"
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L3TQUAWOC1fCLGxNZgjlFeD9xgkJoHr$",
                          "variable_value_new": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.input.variable_workflow_02M312TNUWBWB54vet49qWU74z2yohx7ssJ$ upgrade is scheduled.\n\n$activity.definition_activity_02PZA1E2H2CWL3VKM1n8q9gFET003jQTXGh.output.script_queries.upgrade_status_message$"
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.workflow_results_code$",
                          "variable_value_new": "completed-successfully"
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.workflow_results$",
                          "variable_value_new": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L3TQUAWOC1fCLGxNZgjlFeD9xgkJoHr$"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02M7XZRJ5SP1B3Cdj8cxHqP4acnsnL3ovqL",
                    "name": "Completed",
                    "title": "Completed",
                    "type": "logic.completed",
                    "base_type": "activity",
                    "properties": {
                      "completion_type": "succeeded",
                      "continue_on_failure": false,
                      "display_name": "Completed",
                      "result_message": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L3TQUAWOC1fCLGxNZgjlFeD9xgkJoHr$",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  }
                ]
              },
              {
                "unique_name": "definition_activity_02M7XFCXFP11H20q6JIAnJT636nfw2T9ldr",
                "name": "Condition Branch",
                "title": "Ignore Errors",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": {
                      "left_operand": "$activity.definition_activity_02MGCSC45W3PJ5TPIq4e9IaIOQToLGFC3p0.output.variable_workflow_02M3057KLFT882CZIEPo8wIRVmx8JqaChAz$",
                      "operator": "ne",
                      "right_operand": 200
                    },
                    "operator": "and",
                    "right_operand": {
                      "left_operand": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.input.variable_workflow_02M7XBLKG0QUX0Rem8WlG1RekFxSh8w3YWo$",
                      "operator": "eq",
                      "right_operand": true
                    }
                  },
                  "continue_on_failure": false,
                  "display_name": "Ignore Errors",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02M7XFCXFQJGB0gBMuBXF8loPLg1QZp6uyt",
                    "name": "Set Variables",
                    "title": "Set Variables",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "Set Variables",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L2QUMXRS66QznqbbhESCOI6BVQ5KLP8$",
                          "variable_value_new": "$activity.definition_activity_02MGCSC45W3PJ5TPIq4e9IaIOQToLGFC3p0.output.variable_workflow_02M3057KLFT882CZIEPo8wIRVmx8JqaChAz$"
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L319PNRLE5UnZJlJVqWYILq8SQZe8nV$",
                          "variable_value_new": "$activity.definition_activity_02MGCSC45W3PJ5TPIq4e9IaIOQToLGFC3p0.output.variable_workflow_02M3057KLFSGG0DBQRLz133mNnZHnGJESAq$"
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L3TQUAWOC1fCLGxNZgjlFeD9xgkJoHr$",
                          "variable_value_new": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.input.variable_workflow_02M312TNUWBWB54vet49qWU74z2yohx7ssJ$ upgrade skipped due to errors.\n\n$activity.definition_activity_02PZA1E2H2CWL3VKM1n8q9gFET003jQTXGh.output.script_queries.upgrade_status_message$"
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.workflow_results_code$",
                          "variable_value_new": "completed-successfully"
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.workflow_results$",
                          "variable_value_new": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L3TQUAWOC1fCLGxNZgjlFeD9xgkJoHr$"
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L3FIK1MB054rZdfPQcAYgBDONPSlwN6$",
                          "variable_value_new": "$activity.definition_activity_02MGCSC45W3PJ5TPIq4e9IaIOQToLGFC3p0.output.variable_workflow_02M3057KLFURS0hP6yaZLrIa3H5T3VKTy5E$"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02M7XEWRKKEDR03oKIqk0z2zRZs5yMos1Dx",
                    "name": "Completed",
                    "title": "Completed",
                    "type": "logic.completed",
                    "base_type": "activity",
                    "properties": {
                      "completion_type": "succeeded",
                      "continue_on_failure": false,
                      "display_name": "Completed",
                      "result_message": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L3TQUAWOC1fCLGxNZgjlFeD9xgkJoHr$",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  }
                ]
              },
              {
                "unique_name": "definition_activity_02M6LGMTX9Q7O5MIGWYEeR2Cyu3kUvEZePO",
                "name": "Condition Branch",
                "title": "Failed",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": "$activity.definition_activity_02MGCSC45W3PJ5TPIq4e9IaIOQToLGFC3p0.output.variable_workflow_02M3057KLFT882CZIEPo8wIRVmx8JqaChAz$",
                    "operator": "ne",
                    "right_operand": 200
                  },
                  "continue_on_failure": false,
                  "display_name": "Failed",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02M6LGMTXC5ZS0ubOpj1D3lXEetwnitprPd",
                    "name": "Set Variables",
                    "title": "Set Variables",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "Set Variables",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L2QUMXRS66QznqbbhESCOI6BVQ5KLP8$",
                          "variable_value_new": "$activity.definition_activity_02MGCSC45W3PJ5TPIq4e9IaIOQToLGFC3p0.output.variable_workflow_02M3057KLFT882CZIEPo8wIRVmx8JqaChAz$"
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L319PNRLE5UnZJlJVqWYILq8SQZe8nV$",
                          "variable_value_new": "$activity.definition_activity_02MGCSC45W3PJ5TPIq4e9IaIOQToLGFC3p0.output.variable_workflow_02M3057KLFSGG0DBQRLz133mNnZHnGJESAq$"
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L3TQUAWOC1fCLGxNZgjlFeD9xgkJoHr$",
                          "variable_value_new": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.input.variable_workflow_02M312TNUWBWB54vet49qWU74z2yohx7ssJ$ upgrade failed to schedule."
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.workflow_results_code$",
                          "variable_value_new": "workflow-errored"
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.workflow_results$",
                          "variable_value_new": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L3TQUAWOC1fCLGxNZgjlFeD9xgkJoHr$"
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L3FIK1MB054rZdfPQcAYgBDONPSlwN6$",
                          "variable_value_new": "$activity.definition_activity_02MGCSC45W3PJ5TPIq4e9IaIOQToLGFC3p0.output.variable_workflow_02M3057KLFURS0hP6yaZLrIa3H5T3VKTy5E$"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02M7XZMZ74LRQ63EGvzvETpm9aDNJ7QYsR1",
                    "name": "Completed",
                    "title": "Completed",
                    "type": "logic.completed",
                    "base_type": "activity",
                    "properties": {
                      "completion_type": "failed-completed",
                      "continue_on_failure": false,
                      "display_name": "Completed",
                      "result_message": "$workflow.definition_workflow_02M312TMR8LMG3UJlEY07a3HLYWHV8awf3M.output.variable_workflow_02M6L3TQUAWOC1fCLGxNZgjlFeD9xgkJoHr$",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "categories": [
      "category_02M5I40Y7XSOX59ZtwCZnsrkS73sAGa3w1t"
    ]
  },
  "atomic_workflows": [
    "definition_workflow_02M3057KLFJ745Vm184muHicvBpdJ0s0vGF"
  ],
  "dependent_workflows": [
    "definition_workflow_02M605GS81XN44qr4RBWrJ6Zazk7k0ArIYX",
    "definition_workflow_02LCR4UKH38PM6zDR4Bx2b2J165gCF1mhvh",
    "definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF",
    "definition_workflow_02M3057KLFJ745Vm184muHicvBpdJ0s0vGF"
  ]
}