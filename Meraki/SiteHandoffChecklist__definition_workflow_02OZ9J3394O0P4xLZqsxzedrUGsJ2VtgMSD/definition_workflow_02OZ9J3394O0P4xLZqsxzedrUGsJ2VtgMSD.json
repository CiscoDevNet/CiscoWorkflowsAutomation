{
  "workflow": {
    "unique_name": "definition_workflow_02OZ9J3394O0P4xLZqsxzedrUGsJ2VtgMSD",
    "name": "Site Handoff Checklist",
    "title": "Site Handoff Checklist",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "Network Name",
          "type": "datatype.string",
          "description": "Provide the Network Name for the new Site.",
          "is_required": true,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02OZ9TVDMUFHJ2SdUqn2uKPWe3rAKLB0zCS",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "Org ID",
          "type": "datatype.string",
          "description": "A local variable capturing the Org ID identified from the input Name. ",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02OZAU61BHLVY7JbLJDp7QN52V113Iqwn6t",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "variable_type_array_01JhSTW61I3ZU2IfL7dwQox83eFDzE1qUiA",
        "properties": {
          "value": [],
          "scope": "local",
          "name": "Network ID as Array",
          "type": "datatype.array",
          "description": "A local variable capturing the Network ID as an Array. This is used to pass to Workflows where filtering by Network ID is available. Just set the Network ID as a String but access it as Array where needed.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": ""
        },
        "unique_name": "variable_workflow_02OZ9J33RTNL32qluippznQ2nHHEdYvjqbl",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Result",
          "type": "datatype.string",
          "description": "This is final result capturing the outcome of each test.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02OZ9J33RU0W01ZdfCJDqrAXizOzuEltjCU",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "Organization ID or Name",
          "type": "datatype.string",
          "description": "Provide either the Organization Name or the Organization ID. The Organization ID/Name is a unique identifier assigned to that organization within the Meraki cloud platform.",
          "is_required": true,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02OZAT5XTWR3C6tLoqSxO0sRhSDsLhECS1C",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "Network ID",
          "type": "datatype.string",
          "description": "A local variable capturing the Network ID identified from the input network Name. ",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02OZAUVAK34HI1pYvifKWkLXNTRiOOOFTrC",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "is_atomic": false
      },
      "delete_workflow_instance": false,
      "description": "The Site Handoff checklist is a workflow executed after a new site is brought up and is ready to transition from deployment to standard operating mode. This checklist is designed to verify and ensure operational readiness for a single network site before handing off to standard operations.",
      "display_name": "Site Handoff Checklist",
      "runtime_user": {
        "target_default": true
      },
      "target": {
        "target_type": "meraki.endpoint",
        "specify_on_workflow_start": true
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_02OZ9J36EYJE764mwA78HX1OXRpHtLTd7nm",
        "name": "Group",
        "title": "Find Network",
        "type": "logic.group",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "Lookup the input Network by Name and set local variables for the Network and Organization ID.",
          "display_as_suggestion": false,
          "display_name": "Find Network",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_02OZASF2C407Y2mlSQwcYezHaZqXyJPmMUn",
            "name": "Get Network By Name",
            "title": "Get Network By Name",
            "type": "workflow.sub_workflow",
            "base_type": "subworkflow",
            "properties": {
              "continue_on_failure": false,
              "description": "**Cisco Meraki - Networks - Get Network By Name**\n\nA utility to lookup the Network by Name. \n\n**Target:** A Meraki Endpoint using HTTPS \"api.meraki.com\" port 443 and no path.\n\n**Account Key:** Meraki User API Key. API Key can be generated from Meraki Dashboard -\u003e User Profile -\u003e API Access.\n",
              "display_name": "Get Network By Name",
              "input": {
                "variable_workflow_02OZ9YHN4D7Z45xWr7sUgh5PAANCDNvyuwZ": "$workflow.definition_workflow_02OZ9J3394O0P4xLZqsxzedrUGsJ2VtgMSD.input.variable_workflow_02OZAT5XTWR3C6tLoqSxO0sRhSDsLhECS1C$",
                "variable_workflow_02OZ9YHN4E12T5odx23tDpAHmoVPJxb9Mqf": false,
                "variable_workflow_02OZ9YHN4GQ4D5WlOY6YrkeJvjHD9Je8QXB": "$workflow.definition_workflow_02OZ9J3394O0P4xLZqsxzedrUGsJ2VtgMSD.input.variable_workflow_02OZ9TVDMUFHJ2SdUqn2uKPWe3rAKLB0zCS$"
              },
              "runtime_user": {
                "target_default": true
              },
              "skip_execution": false,
              "target": {
                "target_type": "meraki.endpoint",
                "use_workflow_target": true
              },
              "workflow_id": "definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S",
              "workflow_name": "Get Network By Name"
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02OZ9J3B4NHGQ4rXOoKJiN9D2Nat880H5uL",
            "name": "Set Variables",
            "title": "Set Local Variables",
            "type": "core.set_multiple_variables",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "description": "Set Variables",
              "display_name": "Set Local Variables",
              "skip_execution": false,
              "variables_to_update": [
                {
                  "variable_to_update": "$workflow.definition_workflow_02OZ9J3394O0P4xLZqsxzedrUGsJ2VtgMSD.local.variable_workflow_02OZAU61BHLVY7JbLJDp7QN52V113Iqwn6t$",
                  "variable_value_new": "$activity.definition_activity_02OZASF2C407Y2mlSQwcYezHaZqXyJPmMUn.output.variable_workflow_02OZ9YHN4GG374prJ5QKuz7a7KEM4ZKtrwc$"
                },
                {
                  "variable_to_update": "$workflow.definition_workflow_02OZ9J3394O0P4xLZqsxzedrUGsJ2VtgMSD.local.variable_workflow_02OZAUVAK34HI1pYvifKWkLXNTRiOOOFTrC$",
                  "variable_value_new": "$activity.definition_activity_02OZASF2C407Y2mlSQwcYezHaZqXyJPmMUn.output.variable_workflow_02OZ9YHN4FYG92Th7CwyXfZQhMY6mPmvI4U$"
                }
              ]
            },
            "object_type": "definition_activity"
          }
        ]
      },
      {
        "unique_name": "definition_activity_02OZ9J3FPQBQL5PGv8iizGRDLEOW22ocsKv",
        "name": "Group",
        "title": "Perform Org-Level Calls",
        "type": "logic.group",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "A group collecting information needed at Organization level.",
          "display_as_suggestion": false,
          "display_name": "Perform Org-Level Calls",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_02OZ9J3JHIML203HrElxUYCF3vJjbXWmWSc",
            "name": "Meraki - Get Organization Devices",
            "title": "Meraki - Get Organization Devices",
            "type": "workflow.atomic_workflow",
            "base_type": "subworkflow",
            "properties": {
              "continue_on_failure": false,
              "description": "**Cisco Meraki - Devices - Get Organization Devices**\n\nList the devices in an organization that have been assigned to networks.\n\n**Target:** A Meraki Endpoint using HTTPS \"api.meraki.com\" port 443 and no path.\n\n**Account Key:** Meraki User API Key. API Key can be generated from Merkai Dashboard -\u003e User Profile -\u003e API Access.\n\nSteps:\n[] Sends Get Network request to Meraki\n[] Check if the request was successful:\n[]\u003e If it was, attempt to extract the results and set the output variables\n[]\u003e If it wasn't, return the error and marks the workflow as failed.\n\nNOTE: Empty attributes in the request are removed from the payload before sending to Meraki. \n\nMore information about this API: https://developer.cisco.com/meraki/api-v1/get-organization-networks/",
              "display_name": "Meraki - Get Organization Devices",
              "input": {
                "variable_workflow_02LBZJE84MKWU3b4u5iWvF5C56j3SWvcLxU": "$workflow.definition_workflow_02OZ9J3394O0P4xLZqsxzedrUGsJ2VtgMSD.local.variable_workflow_02OZAU61BHLVY7JbLJDp7QN52V113Iqwn6t$",
                "variable_workflow_02LPD34ABGELX4xRBULzEWn7yZXmlOLnhlm": "",
                "variable_workflow_02LPD34ABGWM530L7Ref10RR1lIyS6swy7y": "",
                "variable_workflow_02LPD34ABH4NB5Y3srIX91xn9cIzEY68MMa": "withAnyTags",
                "variable_workflow_02LPD34ABHCES6OHeiXWIvVmRKLdKquVK4f": [],
                "variable_workflow_02LPD34ABHKTT7bzR3DO9wR6Jt8QIVkTmKA": [],
                "variable_workflow_02LPD34ABHUR66qxroFyemfNTX3wjVrx4bB": "",
                "variable_workflow_02LPD34ABI5767Bipcwnil1zhzAhMVqXU77": "",
                "variable_workflow_02LPD34ABICWG2rq68sl7VROvFjqB8bmooh": "$workflow.definition_workflow_02OZ9J3394O0P4xLZqsxzedrUGsJ2VtgMSD.local.variable_workflow_02OZ9J33RTNL32qluippznQ2nHHEdYvjqbl$",
                "variable_workflow_02LPD34ABIJYH3MHQNXX88Tf38tgg2nnaiV": [],
                "variable_workflow_02LPD34ABIRIY7ksRBfahOf52zARKfji5tq": "",
                "variable_workflow_02LPD34ABIZNM1hpRmCW4fNi50a79mCW4oF": 1000,
                "variable_workflow_02LPD34ABJ73Y1vUpFZq8UjZK37FVXisvfT": "",
                "variable_workflow_02LPD34ABJFEJ26DNauhcFei0QIVgWIgCYw": [],
                "variable_workflow_02LPD34ABJV2C0tJTsG5KJNoU4RZ9yRWNBC": [],
                "variable_workflow_02LPD34ABK6IH5MaynNsHWnm1mpCQw0TkyQ": [],
                "variable_workflow_02LPD34ABKF695YGotxETEugS06mLWBlnVr": [],
                "variable_workflow_02LPD34ABKNYC53bhvdbdyJKVnk3JPbMbDL": ""
              },
              "runtime_user": {
                "target_default": true
              },
              "skip_execution": false,
              "target": {
                "target_type": "meraki.endpoint",
                "use_workflow_target": true
              },
              "workflow_id": "definition_workflow_02LBZJE7PQZVJ3crE33ELBrscM7zWeiugTw",
              "workflow_name": "Meraki - Get Organization Devices"
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02OZ9J3LKUGDI7idfaSqiDZsMZR2hCj8vtY",
            "name": "Get Organization Devices Statuses",
            "title": "Get Organization Devices Statuses",
            "type": "workflow.atomic_workflow",
            "base_type": "subworkflow",
            "properties": {
              "continue_on_failure": false,
              "description": "List the status of every Meraki device in the organization. This is the deprecated API in Meraki. Hence this Atomic is not system atomic.",
              "display_name": "Get Organization Devices Statuses",
              "input": {
                "variable_workflow_02OQTFUOR8MVC11Q9By4LxWBBrDmYfb4FOQ": "$workflow.definition_workflow_02OZ9J3394O0P4xLZqsxzedrUGsJ2VtgMSD.local.variable_workflow_02OZAU61BHLVY7JbLJDp7QN52V113Iqwn6t$"
              },
              "runtime_user": {
                "target_default": true
              },
              "skip_execution": false,
              "target": {
                "target_type": "meraki.endpoint",
                "use_workflow_target": true
              },
              "workflow_id": "definition_workflow_02OQTFUOR8LBS2UYcPdhVOgQwSfDAOOYyuw",
              "workflow_name": "Get Organization Devices Statuses"
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02OZ9J3NO57904zcWT6oaK425dV7JrMBcp8",
            "name": "Meraki - Get Organization Appliance Uplink Statuses",
            "title": "Meraki - Get Organization Appliance Uplink Statuses",
            "type": "workflow.atomic_workflow",
            "base_type": "subworkflow",
            "properties": {
              "continue_on_failure": false,
              "description": "List the uplink status of every Meraki MX and Z series appliances in the organization",
              "display_name": "Meraki - Get Organization Appliance Uplink Statuses",
              "input": {
                "variable_workflow_02OARCJ16X2WW4donDhGip6N90Y2WO8jaS5": "$workflow.definition_workflow_02OZ9J3394O0P4xLZqsxzedrUGsJ2VtgMSD.local.variable_workflow_02OZAU61BHLVY7JbLJDp7QN52V113Iqwn6t$"
              },
              "runtime_user": {
                "target_default": true
              },
              "skip_execution": false,
              "target": {
                "target_type": "meraki.endpoint",
                "use_workflow_target": true
              },
              "workflow_id": "definition_workflow_02OARCJ16WZTS5V0LlpWAeTm3Br5dYPREHG",
              "workflow_name": "Meraki - Get Organization Appliance Uplink Statuses"
            },
            "object_type": "definition_activity"
          }
        ]
      },
      {
        "unique_name": "definition_activity_02OZ9J3QKJSIA4SY50j1O5p8Mz71zA7E2Ow",
        "name": "Group",
        "title": "Perform Network Level Calls",
        "type": "logic.group",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "A group collecting information needed at Network level.",
          "display_as_suggestion": false,
          "display_name": "Perform Network Level Calls",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_02OZ9J3SI25XR5EzhpZ31w7rsT1uux49uNy",
            "name": "Meraki - Get Network Appliance VLANs",
            "title": "Meraki - Get Network Appliance VLANs",
            "type": "workflow.atomic_workflow",
            "base_type": "subworkflow",
            "properties": {
              "continue_on_failure": false,
              "description": "Retrieve VLAN information for a specific Meraki network appliance within a given organization.",
              "display_name": "Meraki - Get Network Appliance VLANs",
              "input": {
                "variable_workflow_02LLQ6L7QIQQZ0XnS8DcriLDPnW0S7SauWX": "$workflow.definition_workflow_02OZ9J3394O0P4xLZqsxzedrUGsJ2VtgMSD.local.variable_workflow_02OZAUVAK34HI1pYvifKWkLXNTRiOOOFTrC$",
                "variable_workflow_02LLQVGHALE2V4hp6V0kbylHzgwt7s7sWxn": true
              },
              "runtime_user": {
                "target_default": true
              },
              "skip_execution": false,
              "target": {
                "target_type": "meraki.endpoint",
                "use_workflow_target": true
              },
              "workflow_id": "definition_workflow_02L6HO3MVE3076LgocjRMWpLoMD5gmGIgIR",
              "workflow_name": "Meraki - Get Network Appliance VLANs"
            },
            "object_type": "definition_activity"
          }
        ]
      },
      {
        "unique_name": "definition_activity_02OZ9J3U4CG3967hjHzbnPPbwNwHBS9eEJH",
        "name": "Parallel Block",
        "title": "Perform Compliance Checks in Parallel",
        "type": "logic.parallel",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "Parallel block action",
          "display_name": "Perform Compliance Checks in Parallel",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_02OZ9J3V25WNR3V8KpjwbElKT0Ap5j8T7Sh",
            "name": "Parallel Branch",
            "title": "Check 1",
            "type": "logic.parallel_block",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "description": "A placeholder to add additional Network Level checks as needed.",
              "display_name": "Check 1",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_02OZ9J3W1DJ3K4jwOZzU7qUwuPSA6J48KBb",
                "name": "Group",
                "title": "Network Checklist",
                "type": "logic.group",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "description": "A placeholder to add additional Network Level checks as needed.",
                  "display_as_suggestion": false,
                  "display_name": "Network Checklist",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02OZ9J3XB231A0hJQQDwcamrI2PPMMR67ZR",
                    "name": "Group",
                    "title": "Monitor - Appliances Status are Green",
                    "type": "logic.group",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "description": "Group",
                      "display_as_suggestion": false,
                      "display_name": "Monitor - Appliances Status are Green",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02OZ9J3YKS23G1EOodFafuOzQEJQK2BVo9l",
                    "name": "Group",
                    "title": "Monitor - Check ARP Table Entries",
                    "type": "logic.group",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "description": "Group",
                      "display_as_suggestion": false,
                      "display_name": "Monitor - Check ARP Table Entries",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02OZ9J3ZTRBWL2Sp9zXNuA4dEN3atc2NJkx",
                    "name": "Group",
                    "title": "Monitor - VPN Status",
                    "type": "logic.group",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "description": "Group",
                      "display_as_suggestion": false,
                      "display_name": "Monitor - VPN Status",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  }
                ]
              }
            ]
          },
          {
            "unique_name": "definition_activity_02OZ9J4146HE10SA4OO03zt6DWzCtqCxpmW",
            "name": "Parallel Branch",
            "title": "Check 2",
            "type": "logic.parallel_block",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "description": "This check performs Device level checks. ",
              "display_name": "Check 2",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_02OZ9J42300P54q6BXvJTNl3pcubRUDqpfv",
                "name": "Group",
                "title": "Device Checklist",
                "type": "logic.group",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "description": "Group",
                  "display_as_suggestion": false,
                  "display_name": "Device Checklist",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02OZ9J4453U5I5vgwNpfH0ElQxxWvtcERai",
                    "name": "Device Checklist",
                    "title": "Device Checklist",
                    "type": "workflow.sub_workflow",
                    "base_type": "subworkflow",
                    "properties": {
                      "continue_on_failure": false,
                      "description": "A checklist of tests for Devices for a given input Network. Workflow performs two checks \n1. Device Status \n2. IP Assignment of device matches with one of the Appliance VLAN Fixed IP Assignments.",
                      "display_name": "Device Checklist",
                      "input": {
                        "variable_workflow_02OSH0EYH2QMP4wI6rY8BO5v0LL7jaVkBx0": "$activity.definition_activity_02OZ9J3SI25XR5EzhpZ31w7rsT1uux49uNy.output.variable_workflow_02LLQ6L7QI68J5L73IDYmrWkYMa5r6rbGoo$",
                        "variable_workflow_02OSH0EYH3SRL7mnVUYWeuhNafzA34PWn47": "$workflow.definition_workflow_02OZ9J3394O0P4xLZqsxzedrUGsJ2VtgMSD.local.variable_workflow_02OZAUVAK34HI1pYvifKWkLXNTRiOOOFTrC$",
                        "variable_workflow_02OSH0EYH3YXH1aZFgYWowPqztnCMVBQta7": "$activity.definition_activity_02OZ9J3JHIML203HrElxUYCF3vJjbXWmWSc.output.variable_workflow_02LBZJE84NB1F75jMCnZjaIsHHmn1NBoO2y$",
                        "variable_workflow_02OSH0EYH5B8R5LWvHqx2BaTaStXoTcNYCe": "$activity.definition_activity_02OZ9J3LKUGDI7idfaSqiDZsMZR2hCj8vtY.output.variable_workflow_02OQTFUOR8PYG3qvB7FFXfklAF5EQYr0ArG$",
                        "variable_workflow_02OSH0EYH5X847in0cURERDBFdelXTn7emS": "$workflow.definition_workflow_02OZ9J3394O0P4xLZqsxzedrUGsJ2VtgMSD.local.variable_workflow_02OZAU61BHLVY7JbLJDp7QN52V113Iqwn6t$",
                        "variable_workflow_02OYL2QK8ZSCD07HzEgRCYchh8f33oefSyC": "$activity.definition_activity_02OZ9J3NO57904zcWT6oaK425dV7JrMBcp8.output.variable_workflow_02OARCJ16X5884mgWf2gyCT0zMxfyvA1KnC$"
                      },
                      "runtime_user": {
                        "target_default": true
                      },
                      "skip_execution": false,
                      "target": {
                        "target_type": "meraki.endpoint",
                        "use_workflow_target": true
                      },
                      "workflow_id": "definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui",
                      "workflow_name": "Device Checklist"
                    },
                    "object_type": "definition_activity"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_02OZ9J4709Q0Q78jgnYG2CjuRVjsGmq2ao4",
        "name": "Group",
        "title": "Summarize Network Results",
        "type": "logic.group",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "Summarize output for all the tests performed.",
          "display_as_suggestion": false,
          "display_name": "Summarize Network Results",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_02OZ9J48QO8UV19IcwU2Md2cryifMQnebwK",
            "name": "Set Variables",
            "title": "Set Variables",
            "type": "core.set_multiple_variables",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "description": "Set Variables",
              "display_name": "Set Variables",
              "skip_execution": false,
              "variables_to_update": [
                {
                  "variable_to_update": "$workflow.definition_workflow_02OZ9J3394O0P4xLZqsxzedrUGsJ2VtgMSD.output.variable_workflow_02OZ9J33RU0W01ZdfCJDqrAXizOzuEltjCU$",
                  "variable_value_new": "$workflow.definition_workflow_02OZ9J3394O0P4xLZqsxzedrUGsJ2VtgMSD.output.variable_workflow_02OZ9J33RU0W01ZdfCJDqrAXizOzuEltjCU$\nFor Organization [$workflow.definition_workflow_02OZ9J3394O0P4xLZqsxzedrUGsJ2VtgMSD.local.variable_workflow_02OZAU61BHLVY7JbLJDp7QN52V113Iqwn6t$] Network [$workflow.definition_workflow_02OZ9J3394O0P4xLZqsxzedrUGsJ2VtgMSD.input.variable_workflow_02OZ9TVDMUFHJ2SdUqn2uKPWe3rAKLB0zCS$] Device Test Results:$activity.definition_activity_02OZ9J4453U5I5vgwNpfH0ElQxxWvtcERai.output.variable_workflow_02OSH0EYH3NKG1nwlsglE3wubPeEjcgZGO5$\n============================================================"
                }
              ]
            },
            "object_type": "definition_activity"
          }
        ]
      }
    ],
    "categories": [
      "category_02P1ZHJAQ54XV1zJuzEtLLMo66BUJZWb5Dm"
    ]
  },
  "categories": {
    "category_02P1ZHJAQ54XV1zJuzEtLLMo66BUJZWb5Dm": {
      "unique_name": "category_02P1ZHJAQ54XV1zJuzEtLLMo66BUJZWb5Dm",
      "name": "Compliance Checklist",
      "title": "Compliance Checklist",
      "type": "basic.category",
      "base_type": "category",
      "category_type": "custom",
      "object_type": "category"
    }
  },
  "subworkflows": [
    {
      "workflow": {
        "unique_name": "definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S",
        "name": "Get Network By Name",
        "title": "Get Network By Name",
        "type": "generic.workflow",
        "base_type": "workflow",
        "variables": [
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "output",
              "name": "Output - Network Notes",
              "type": "datatype.string",
              "description": "In Cisco Meraki, network notes allows administrators to add descriptive text or annotations to a network within the Meraki Dashboard. These notes can be used to provide additional context, documentation, or instructions relevant to the network's configuration or purpose.",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "text"
            },
            "unique_name": "variable_workflow_02OZ9YHN4EAM53cpREhkrVcE5Q3aCU1reKh",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.integer",
            "properties": {
              "value": 0,
              "scope": "output",
              "name": "Output - Status Code",
              "type": "datatype.integer",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02OZ9YHN4FQAA2ajWizdYtc3QC10gL4aouc",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.boolean",
            "properties": {
              "value": false,
              "scope": "output",
              "name": "Ouput - Is Bound To Config Template",
              "type": "datatype.boolean",
              "description": "Indicates whether a specific network is linked to a configuration template within the Meraki Dashboard. Configuration templates allow administrators to apply consistent settings across multiple networks efficiently.  Returns true or false.",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02OZ9YHN4FHIK4MTNM6yaoAKsI496yl9nE4",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "output",
              "name": "Output - Network Product Types",
              "type": "datatype.string",
              "description": "Specifies the types of Meraki hardware products that are utilized within a particular network. This field helps administrators understand the composition and capabilities of the network based on the devices in use.",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "json"
            },
            "unique_name": "variable_workflow_02OZ9YHN4HEPV6mi3lig6pJIeZCASTKzhxc",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "output",
              "name": "Output - Network Time Zone",
              "type": "datatype.string",
              "description": "The Network Time Zone field in Cisco Meraki is a setting that specifies the time zone for a particular network. This setting is crucial for ensuring that all time-related functions and logs are accurate and consistent with the network's geographical location.",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02OZ9YHN4G77J7IkSWBxpKyNxXAYp5MC0Y4",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "output",
              "name": "Output - Network Enrollment String",
              "type": "datatype.string",
              "description": "The Enrollment String in a Cisco Meraki network is a unique code used for enrolling and managing devices within Systems Manager, Meraki's mobile device management (MDM) platform. This string helps ensure that devices are associated with the correct network and configuration settings.",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "text"
            },
            "unique_name": "variable_workflow_02OZ9YHN4EL8S6PCf2CdF0jUoMG16aPWX8j",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "output",
              "name": "Output - Network Id",
              "type": "datatype.string",
              "description": "The ID of the Network. ",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "text"
            },
            "unique_name": "variable_workflow_02OZ9YHN4FYG92Th7CwyXfZQhMY6mPmvI4U",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "output",
              "name": "Output - Network Details",
              "type": "datatype.string",
              "description": "JSON information of Network Details for the given Name",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "json"
            },
            "unique_name": "variable_workflow_02OZ9YHN4H3JP4nELdsd9ARU1OECuiraU3G",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "output",
              "name": "Output - Status Message",
              "type": "datatype.string",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02OZ9YHN4CNUG5n0eNjrERkF0WSOXOO91PG",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "input",
              "name": "Input - Organization Id or Name",
              "type": "datatype.string",
              "description": "The Organization id for which the networks are obtained.\nIn the Cisco Meraki platform, the Organization ID is a unique identifier associated with an entire organization within the Meraki Dashboard. This ID is critical for managing and accessing all networks and administrative settings tied to a specific organization.",
              "is_required": true,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "text"
            },
            "unique_name": "variable_workflow_02OZ9YHN4D7Z45xWr7sUgh5PAANCDNvyuwZ",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "output",
              "name": "Output - Network Organization Id",
              "type": "datatype.string",
              "description": "The Organization id the network belongs to.\nIn the Cisco Meraki platform, the Organization ID is a unique identifier associated with an entire organization within the Meraki Dashboard. This ID is critical for managing and accessing all networks and administrative settings tied to a specific organization.",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02OZ9YHN4GG374prJ5QKuz7a7KEM4ZKtrwc",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "output",
              "name": "Output - Network Tags",
              "type": "datatype.string",
              "description": "In Cisco Meraki, network tags are labels that can be assigned to networks within the Meraki Dashboard to help organize and categorize them. Tags provide a flexible way to manage and filter networks, especially in environments with multiple networks.",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02OZ9YHN4F0PT1F3wFpLzqKddRAvGDaHlSs",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "output",
              "name": "Output - Network URL",
              "type": "datatype.string",
              "description": "The Network URL in Cisco Meraki refers to the specific web address used to access a particular network's settings and information within the Meraki Dashboard. This URL is unique to each network and allows administrators to directly navigate to the network's management interface.",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "text"
            },
            "unique_name": "variable_workflow_02OZ9YHN4DI8F2acop8bytSZfYa4qaO64Z1",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "local",
              "name": "Local - Org ID",
              "type": "datatype.string",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "text"
            },
            "unique_name": "variable_workflow_02OZADEZTZ4C02kleWDCkx5kNF8kNE4OazQ",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "input",
              "name": "Input - Network Name to Get",
              "type": "datatype.string",
              "description": "Provide the Network Name to retrieve details. Enter only the network name without any quotes. \nExample: Main switch Network",
              "is_required": true,
              "display_on_wizard": true,
              "is_invisible": false,
              "variable_string_format": "text"
            },
            "unique_name": "variable_workflow_02OZ9YHN4GQ4D5WlOY6YrkeJvjHD9Je8QXB",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "output",
              "name": "Output - Network Name",
              "type": "datatype.string",
              "description": "The Meraki Network Name is a user-defined label assigned to a network within the Cisco Meraki Dashboard. It serves as a way to identify and organize networks, making it easier for administrators to manage multiple networks within the Meraki environment.",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "text"
            },
            "unique_name": "variable_workflow_02OZ9YHN4DR983WgtlUiqNhcc3YSbI6v8V9",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.boolean",
            "properties": {
              "value": false,
              "scope": "input",
              "name": "Input - Ignore Errors",
              "type": "datatype.boolean",
              "description": "Set to true, if you want to skip Not Found errors and summarize results in Output variables for workflow callers to process results further.",
              "is_required": false,
              "display_on_wizard": true,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02OZ9YHN4E12T5odx23tDpAHmoVPJxb9Mqf",
            "object_type": "variable_workflow"
          }
        ],
        "properties": {
          "atomic": {
            "is_atomic": false
          },
          "delete_workflow_instance": false,
          "description": "**Cisco Meraki - Networks - Get Network By Name**\n\nA utility to lookup the Network by Name. \n\n**Target:** A Meraki Endpoint using HTTPS \"api.meraki.com\" port 443 and no path.\n\n**Account Key:** Meraki User API Key. API Key can be generated from Merkai Dashboard -\u003e User Profile -\u003e API Access.\n",
          "display_name": "Get Network By Name",
          "runtime_user": {
            "target_default": true
          },
          "target": {
            "target_type": "meraki.endpoint",
            "specify_on_workflow_start": true
          }
        },
        "object_type": "definition_workflow",
        "actions": [
          {
            "unique_name": "definition_activity_02OZ9YSAVYYWB5gGHnCwDBC1cpXQQaMEVzd",
            "name": "Condition Block",
            "title": "Is Organization provided in Input?",
            "type": "logic.if_else",
            "base_type": "activity",
            "properties": {
              "conditions": [],
              "continue_on_failure": false,
              "description": "If-Else condition block",
              "display_name": "Is Organization provided in Input?",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "blocks": [
              {
                "unique_name": "definition_activity_02OZ9YSC9DWA92T6v6QBsLz80BncKUzINsJ",
                "name": "Condition Branch",
                "title": "Yes",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.input.variable_workflow_02OZ9YHN4D7Z45xWr7sUgh5PAANCDNvyuwZ$",
                    "operator": "ne",
                    "right_operand": ""
                  },
                  "continue_on_failure": false,
                  "display_name": "Yes",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02OZABYE4HZLQ18LLWpeYDR1rwBi9iwLuNU",
                    "name": "Meraki - Get Organization By Name",
                    "title": "Meraki - Get Organization By Name",
                    "type": "workflow.sub_workflow",
                    "base_type": "subworkflow",
                    "properties": {
                      "continue_on_failure": false,
                      "description": "**Cisco Meraki - Organizations - Get Organization By Name**\n\nA utility to lookup the Organization by Name. \n\n**Target:** A Meraki Endpoint using HTTPS \"api.meraki.com\" port 443 and no path.\n\n**Account Key:** Meraki User API Key. API Key can be generated from Merkai Dashboard -\u003e User Profile -\u003e API Access.\n",
                      "display_name": "Meraki - Get Organization By Name",
                      "input": {
                        "variable_workflow_02M605GTHU5L72i8goD4nuYixYOvQEFV7rN": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.input.variable_workflow_02OZ9YHN4D7Z45xWr7sUgh5PAANCDNvyuwZ$",
                        "variable_workflow_02M605GTI1LUG737lDLyzxnE9jwENJNQ08W": false
                      },
                      "runtime_user": {
                        "target_default": true
                      },
                      "skip_execution": false,
                      "target": {
                        "target_type": "meraki.endpoint",
                        "use_workflow_target": true
                      },
                      "workflow_id": "definition_workflow_02M605GS81XN44qr4RBWrJ6Zazk7k0ArIYX",
                      "workflow_name": "Meraki - Get Organization By Name"
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02OZAC6LC35EI6e0ayxqjXbJnEfUg9aoQN1",
                    "name": "Condition Block",
                    "title": "Was Input Org Name?",
                    "type": "logic.if_else",
                    "base_type": "activity",
                    "properties": {
                      "conditions": [],
                      "continue_on_failure": false,
                      "description": "If-Else condition block",
                      "display_name": "Was Input Org Name?",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "blocks": [
                      {
                        "unique_name": "definition_activity_02OZAC6MGOFI72eW5p8PmTUdOv7RUWW7mkS",
                        "name": "Condition Branch",
                        "title": "Yes, Set ID from Get",
                        "type": "logic.condition_block",
                        "base_type": "activity",
                        "properties": {
                          "condition": {
                            "left_operand": "$activity.definition_activity_02OZABYE4HZLQ18LLWpeYDR1rwBi9iwLuNU.output.variable_workflow_02M605GTHEWOW4TGG1xjMEivKqrrMbc2hM3$",
                            "operator": "eq",
                            "right_operand": 200
                          },
                          "continue_on_failure": false,
                          "display_name": "Yes, Set ID from Get",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02OZAEWZLLZW01a5W6mvRYudVulrbGIGYKs",
                            "name": "Set Variables",
                            "title": "Set Variables",
                            "type": "core.set_multiple_variables",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "description": "Set Variables",
                              "display_name": "Set Variables",
                              "skip_execution": false,
                              "variables_to_update": [
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.local.variable_workflow_02OZADEZTZ4C02kleWDCkx5kNF8kNE4OazQ$",
                                  "variable_value_new": "$activity.definition_activity_02OZABYE4HZLQ18LLWpeYDR1rwBi9iwLuNU.output.variable_workflow_02M605GTJITQP1fcLQlR8CLYAHoMomGWZvE$"
                                }
                              ]
                            },
                            "object_type": "definition_activity"
                          }
                        ]
                      },
                      {
                        "unique_name": "definition_activity_02OZAFJZM2B587c6vkojdobwXEyerhFEbls",
                        "name": "Condition Branch",
                        "title": "No, Set ID from Input",
                        "type": "logic.condition_block",
                        "base_type": "activity",
                        "properties": {
                          "condition": {
                            "left_operand": "$activity.definition_activity_02OZABYE4HZLQ18LLWpeYDR1rwBi9iwLuNU.output.variable_workflow_02M605GTHEWOW4TGG1xjMEivKqrrMbc2hM3$",
                            "operator": "ne",
                            "right_operand": 200
                          },
                          "continue_on_failure": false,
                          "display_name": "No, Set ID from Input",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02OZAFJZOA8Z641Lh2N2x2w62QsQ9XUfPQV",
                            "name": "Set Variables",
                            "title": "Set Variables",
                            "type": "core.set_multiple_variables",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "description": "Set Variables",
                              "display_name": "Set Variables",
                              "skip_execution": false,
                              "variables_to_update": [
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.local.variable_workflow_02OZADEZTZ4C02kleWDCkx5kNF8kNE4OazQ$",
                                  "variable_value_new": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.input.variable_workflow_02OZ9YHN4D7Z45xWr7sUgh5PAANCDNvyuwZ$"
                                }
                              ]
                            },
                            "object_type": "definition_activity"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "unique_name": "definition_activity_02OZALWYBJH257LNuNvDIa0ZGcCWYHgIeXr",
            "name": "Group",
            "title": "Group",
            "type": "logic.group",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "description": "Group",
              "display_name": "Group",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_02OZ9YHSS3K3G2v89aBapXAYoMaGP1RgNYy",
                "name": "Get Organization Networks",
                "title": "Get Organization Networks",
                "type": "workflow.atomic_workflow",
                "base_type": "subworkflow",
                "properties": {
                  "continue_on_failure": true,
                  "description": "Note: This activitiy is purposefully marked as continue execution on Failure to handle responses gracefully.",
                  "display_name": "Get Organization Networks",
                  "input": {
                    "variable_workflow_02L9TZH6C81473IDtFQ0NIzW3jmXrgchtN9": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.local.variable_workflow_02OZADEZTZ4C02kleWDCkx5kNF8kNE4OazQ$",
                    "variable_workflow_02LEUL5GOHN9T53T7jFQx3T2Yo04p5Xuz0r": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.input.variable_workflow_02OZ9YHN4E12T5odx23tDpAHmoVPJxb9Mqf$",
                    "variable_workflow_02LNK5WW0RD2A20mG7v1G7gsyE2N2RrKdQd": "",
                    "variable_workflow_02LNK5WW0RTCB1AXbOwJOBVWvUx1wdyKtkt": "withAnyTags",
                    "variable_workflow_02LNK5WW0S5E21Q9biFSXTiLbHr7cWP2K7y": true,
                    "variable_workflow_02LNK5WW0SE2H1zmchhUHyfX7L0XGvKmB7W": 1000,
                    "variable_workflow_02LNK5WW0SM7R5SjIvnnytN6vYzR7wfDHeE": [],
                    "variable_workflow_02LNK5WW0STMX38BXiY2IvPQoHQliJHSCgE": [],
                    "variable_workflow_02LNK5WW0T0NX26NyApdlTn355uYJwcQGqW": "",
                    "variable_workflow_02LNK5WW0T92U1HJd1sxzFrmVvwxy7NVaQn": ""
                  },
                  "runtime_user": {
                    "target_default": true
                  },
                  "skip_execution": false,
                  "target": {
                    "target_type": "meraki.endpoint",
                    "use_workflow_target": true
                  },
                  "workflow_id": "definition_workflow_02L9TZH5W95870XebPF2g8kSyIYcawUvljX",
                  "workflow_name": "Meraki - Get Organization Networks"
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02OZ9YHU401CA5BGRPIgUyFRDfEETQI976k",
                "name": "Condition Block",
                "title": "Was The Request Successful?",
                "type": "logic.if_else",
                "base_type": "activity",
                "properties": {
                  "conditions": [],
                  "continue_on_failure": false,
                  "display_name": "Was The Request Successful?",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_02OZ9YHV4KFUC3DpcSRboe4qq70AJ9LXLEY",
                    "name": "Condition Branch",
                    "title": "200/Success",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$activity.definition_activity_02OZ9YHSS3K3G2v89aBapXAYoMaGP1RgNYy.output.variable_workflow_02L9TZH6C9HVU3eHnLNP91ZKEfJOnaYpBsh$",
                        "operator": "eq",
                        "right_operand": 200
                      },
                      "continue_on_failure": false,
                      "display_name": "200/Success",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_02OZ9YHWMO7PG3zzn4UErrvhh3uNkosZs0Z",
                        "name": "Read Table from JSON",
                        "title": "Read Table from JSON",
                        "type": "corejava.read_table_from_json",
                        "base_type": "activity",
                        "properties": {
                          "action_timeout": 180,
                          "continue_on_failure": false,
                          "description": "This saves the response JSON in table.",
                          "display_name": "Read Table from JSON",
                          "input_json": "$activity.definition_activity_02OZ9YHSS3K3G2v89aBapXAYoMaGP1RgNYy.output.variable_workflow_02L9TZH6C8OZI7c9t9Z0h0JHAbqCc7LuTGT$",
                          "jsonpath_query": "$.*",
                          "persist_output": true,
                          "populate_columns": false,
                          "skip_execution": false,
                          "table_columns": [
                            {
                              "column_name": "id",
                              "column_type": "string"
                            },
                            {
                              "column_name": "name",
                              "column_type": "string"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_02OZ9YHY6ZBD75vgsF9UgP8vCTNGPnvF1ok",
                        "name": "Select from Table",
                        "title": "Select from Table",
                        "type": "core.selectfromtable",
                        "base_type": "activity",
                        "properties": {
                          "action_timeout": 180,
                          "columns": [
                            {
                              "column_name": "id",
                              "column_type": "string"
                            }
                          ],
                          "continue_on_failure": true,
                          "description": "Filter for the condition passed in input",
                          "display_name": "Select from Table",
                          "input_table": "$activity.definition_activity_02OZ9YHWMO7PG3zzn4UErrvhh3uNkosZs0Z.output.read_table_from_json$",
                          "number_of_rows": {
                            "all_rows": true
                          },
                          "persist_output": false,
                          "skip_execution": false,
                          "sorting": {
                            "no_sort": true
                          },
                          "where_clause": "name = \"$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.input.variable_workflow_02OZ9YHN4GQ4D5WlOY6YrkeJvjHD9Je8QXB$\""
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_02OZ9YHZRWWJ43KoOw1U53e3MxFTTx20nMI",
                        "name": "Condition Block",
                        "title": "Is Network Found?",
                        "type": "logic.if_else",
                        "base_type": "activity",
                        "properties": {
                          "conditions": [],
                          "continue_on_failure": false,
                          "display_name": "Is Network Found?",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "blocks": [
                          {
                            "unique_name": "definition_activity_02OZ9YI0RWR3H6Pwo8a6qolCeAbULzJG1K6",
                            "name": "Condition Branch",
                            "title": "Found",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": "$activity.definition_activity_02OZ9YHY6ZBD75vgsF9UgP8vCTNGPnvF1ok.output.row_count$",
                                "operator": "gt",
                                "right_operand": 0
                              },
                              "continue_on_failure": false,
                              "display_name": "Found",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02OZ9YI2XXELP6wFIUNJe8XwG4MrvcXmWz1",
                                "name": "Get Network",
                                "title": "Get Network",
                                "type": "workflow.atomic_workflow",
                                "base_type": "subworkflow",
                                "properties": {
                                  "continue_on_failure": false,
                                  "display_name": "Get Network",
                                  "input": {
                                    "variable_workflow_02L9A58LOWD596Dxk7ArTlCaFsEgCJKdOVD": "$activity.definition_activity_02OZ9YHY6ZBD75vgsF9UgP8vCTNGPnvF1ok.output.output_table[0].id$"
                                  },
                                  "runtime_user": {
                                    "target_default": true
                                  },
                                  "skip_execution": false,
                                  "target": {
                                    "target_type": "meraki.endpoint",
                                    "use_workflow_target": true
                                  },
                                  "workflow_id": "definition_workflow_02L9A58L99D8Q6CNvrbNWfw5UlyLLpkP3IW",
                                  "workflow_name": "Meraki - Get Network"
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_02OZ9YI6ZRF8Q3iFJ885CuaT0A4wxUXffjb",
                                "name": "Set Variables",
                                "title": "Set Output Variables",
                                "type": "core.set_multiple_variables",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "display_name": "Set Output Variables",
                                  "skip_execution": false,
                                  "variables_to_update": [
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4H3JP4nELdsd9ARU1OECuiraU3G$",
                                      "variable_value_new": "$activity.definition_activity_02OZ9YI2XXELP6wFIUNJe8XwG4MrvcXmWz1.output.variable_workflow_02L9A58LOSS2H0IrqR7kyQR4gsXeI9u8Es3$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4FYG92Th7CwyXfZQhMY6mPmvI4U$",
                                      "variable_value_new": "$activity.definition_activity_02OZ9YI2XXELP6wFIUNJe8XwG4MrvcXmWz1.output.variable_workflow_02L9A58LOSZ4S5AIhZbs6crbSVV81XNw9Hx$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4FQAA2ajWizdYtc3QC10gL4aouc$",
                                      "variable_value_new": 200
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4CNUG5n0eNjrERkF0WSOXOO91PG$",
                                      "variable_value_new": "Network Found"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4FHIK4MTNM6yaoAKsI496yl9nE4$",
                                      "variable_value_new": "$activity.definition_activity_02OZ9YI2XXELP6wFIUNJe8XwG4MrvcXmWz1.output.variable_workflow_02L9A58LOV6JY0dEhXzJimiJ8bF7lceby3C$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4EL8S6PCf2CdF0jUoMG16aPWX8j$",
                                      "variable_value_new": "$activity.definition_activity_02OZ9YI2XXELP6wFIUNJe8XwG4MrvcXmWz1.output.variable_workflow_02L9A58LOVS2I4k7cEYgg2uv4nk1O7VgQ9d$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4DR983WgtlUiqNhcc3YSbI6v8V9$",
                                      "variable_value_new": "$activity.definition_activity_02OZ9YI2XXELP6wFIUNJe8XwG4MrvcXmWz1.output.variable_workflow_02L9A58LOW6KC27b8GQsEFf9U0YVtWKz8Ii$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4EAM53cpREhkrVcE5Q3aCU1reKh$",
                                      "variable_value_new": "$activity.definition_activity_02OZ9YI2XXELP6wFIUNJe8XwG4MrvcXmWz1.output.variable_workflow_02L9A58LOVLMF6srLsICvcwVJHq5mvAuVh0$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4GG374prJ5QKuz7a7KEM4ZKtrwc$",
                                      "variable_value_new": "$activity.definition_activity_02OZ9YI2XXELP6wFIUNJe8XwG4MrvcXmWz1.output.variable_workflow_02L9A58LOVYPZ5Bd2cu1dcvbQMmyiMszobN$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4HEPV6mi3lig6pJIeZCASTKzhxc$",
                                      "variable_value_new": "$activity.definition_activity_02OZ9YI2XXELP6wFIUNJe8XwG4MrvcXmWz1.output.variable_workflow_02L9A58LOVD6Q2mQ8Q5cKZbqW6MMbaOFyPI$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4F0PT1F3wFpLzqKddRAvGDaHlSs$",
                                      "variable_value_new": "$activity.definition_activity_02OZ9YI2XXELP6wFIUNJe8XwG4MrvcXmWz1.output.variable_workflow_02L9A58LOTIVB2Qlmg7JayOVoZAYi3fFn6P$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4G77J7IkSWBxpKyNxXAYp5MC0Y4$",
                                      "variable_value_new": "$activity.definition_activity_02OZ9YI2XXELP6wFIUNJe8XwG4MrvcXmWz1.output.variable_workflow_02L9A58LOWQA572HXKYqMIYdHtA3aVwroEP$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4DI8F2acop8bytSZfYa4qaO64Z1$",
                                      "variable_value_new": "$activity.definition_activity_02OZ9YI2XXELP6wFIUNJe8XwG4MrvcXmWz1.output.variable_workflow_02L9A58LOSGKM2X44oSwyhe83tcc9XDfeNg$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.workflow_results$",
                                      "variable_value_new": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4CNUG5n0eNjrERkF0WSOXOO91PG$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.workflow_results_code$",
                                      "variable_value_new": "completed-successfully"
                                    }
                                  ]
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_02OZ9YIA5PWMT58rfKbNFrZ7E41KjOaQ3qa",
                                "name": "Completed",
                                "title": "Completed, Success",
                                "type": "logic.completed",
                                "base_type": "activity",
                                "properties": {
                                  "completion_type": "succeeded",
                                  "continue_on_failure": false,
                                  "display_name": "Completed, Success",
                                  "result_message": "$activity.definition_activity_02OZ9YI2XXELP6wFIUNJe8XwG4MrvcXmWz1.output.variable_workflow_02L9A58LOSS2H0IrqR7kyQR4gsXeI9u8Es3$",
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          },
                          {
                            "unique_name": "definition_activity_02OZ9YIB2RRNQ0oh1dp9e7zmFy5bKDkV7Mj",
                            "name": "Condition Branch",
                            "title": "Not Found / Skip",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": {
                                  "left_operand": "$activity.definition_activity_02OZ9YHY6ZBD75vgsF9UgP8vCTNGPnvF1ok.output.row_count$",
                                  "operator": "eq",
                                  "right_operand": 0
                                },
                                "operator": "and",
                                "right_operand": {
                                  "left_operand": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.input.variable_workflow_02OZ9YHN4E12T5odx23tDpAHmoVPJxb9Mqf$",
                                  "operator": "eq",
                                  "right_operand": true
                                }
                              },
                              "continue_on_failure": false,
                              "description": "Network is not found, populate output variables as failed but call the workflow as success.",
                              "display_name": "Not Found / Skip",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02OZ9YICJ9TXT4ElPSbVdBERlHhpM4AV7AN",
                                "name": "Set Variables",
                                "title": "Set Output Variables",
                                "type": "core.set_multiple_variables",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "display_name": "Set Output Variables",
                                  "skip_execution": false,
                                  "variables_to_update": [
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4FQAA2ajWizdYtc3QC10gL4aouc$",
                                      "variable_value_new": 404
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4CNUG5n0eNjrERkF0WSOXOO91PG$",
                                      "variable_value_new": "Network Not Found"
                                    }
                                  ]
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_02OZ9YIDQ2W032wklbWijsiJ6ozvN4PnciR",
                                "name": "Completed",
                                "title": "Completed, Success",
                                "type": "logic.completed",
                                "base_type": "activity",
                                "properties": {
                                  "completion_type": "succeeded",
                                  "continue_on_failure": false,
                                  "display_name": "Completed, Success",
                                  "result_message": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4CNUG5n0eNjrERkF0WSOXOO91PG$",
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          },
                          {
                            "unique_name": "definition_activity_02OZ9YIEQAMW26R0g9h8XMRPeHZQnJtrOUi",
                            "name": "Condition Branch",
                            "title": "Not Found / Failed",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": {
                                  "left_operand": "$activity.definition_activity_02OZ9YHY6ZBD75vgsF9UgP8vCTNGPnvF1ok.output.row_count$",
                                  "operator": "eq",
                                  "right_operand": 0
                                },
                                "operator": "and",
                                "right_operand": {
                                  "left_operand": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.input.variable_workflow_02OZ9YHN4E12T5odx23tDpAHmoVPJxb9Mqf$",
                                  "operator": "eq",
                                  "right_operand": false
                                }
                              },
                              "continue_on_failure": false,
                              "description": "Network is not found, populate output variables as failed and set workflow as failed.",
                              "display_name": "Not Found / Failed",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02OZ9YIGC6U4L5Ap4ZQG3Ru3khmnYaQKjRl",
                                "name": "Set Variables",
                                "title": "Set Output Variables",
                                "type": "core.set_multiple_variables",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "display_name": "Set Output Variables",
                                  "skip_execution": false,
                                  "variables_to_update": [
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4FQAA2ajWizdYtc3QC10gL4aouc$",
                                      "variable_value_new": 404
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4CNUG5n0eNjrERkF0WSOXOO91PG$",
                                      "variable_value_new": "Network Not Found"
                                    }
                                  ]
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_02OZ9YIHC9EG15MykPsBSIVif9frZJeJzx2",
                                "name": "Completed",
                                "title": "Completed, Failed",
                                "type": "logic.completed",
                                "base_type": "activity",
                                "properties": {
                                  "completion_type": "failed-completed",
                                  "continue_on_failure": false,
                                  "display_name": "Completed, Failed",
                                  "result_message": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4CNUG5n0eNjrERkF0WSOXOO91PG$",
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "unique_name": "definition_activity_02OZ9YIICVR9U7Vu4w7zEsOw90s91PEtkL1",
                    "name": "Condition Branch",
                    "title": "Get Failed / Skip",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": {
                          "left_operand": "$activity.definition_activity_02OZ9YHSS3K3G2v89aBapXAYoMaGP1RgNYy.output.variable_workflow_02L9TZH6C9HVU3eHnLNP91ZKEfJOnaYpBsh$",
                          "operator": "ne",
                          "right_operand": 200
                        },
                        "operator": "and",
                        "right_operand": {
                          "left_operand": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.input.variable_workflow_02OZ9YHN4E12T5odx23tDpAHmoVPJxb9Mqf$",
                          "operator": "eq",
                          "right_operand": true
                        }
                      },
                      "continue_on_failure": false,
                      "display_name": "Get Failed / Skip",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_02OZ9YIKLOJZG3yJOnkSbcqe3De5Zspk1HP",
                        "name": "Set Variables",
                        "title": "Set Output Variables",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Set Output Variables",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4FQAA2ajWizdYtc3QC10gL4aouc$",
                              "variable_value_new": "$activity.definition_activity_02OZ9YHSS3K3G2v89aBapXAYoMaGP1RgNYy.output.variable_workflow_02L9TZH6C9HVU3eHnLNP91ZKEfJOnaYpBsh$"
                            },
                            {
                              "variable_to_update": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4CNUG5n0eNjrERkF0WSOXOO91PG$",
                              "variable_value_new": "$activity.definition_activity_02OZ9YHSS3K3G2v89aBapXAYoMaGP1RgNYy.output.variable_workflow_02L9TZH6CAB8T4C8P5tULvLWU4BoXyzW3r7$"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_02OZ9YIM6ADA153eF5n0vuvPMwayX5XbWPz",
                        "name": "Completed",
                        "title": "Completed, Success",
                        "type": "logic.completed",
                        "base_type": "activity",
                        "properties": {
                          "completion_type": "succeeded",
                          "continue_on_failure": false,
                          "display_name": "Completed, Success",
                          "result_message": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4CNUG5n0eNjrERkF0WSOXOO91PG$",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  },
                  {
                    "unique_name": "definition_activity_02OZ9YINBTIHA02RIceIYvavDv1sLd4i912",
                    "name": "Condition Branch",
                    "title": "Get Failed",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": {
                          "left_operand": "$activity.definition_activity_02OZ9YHSS3K3G2v89aBapXAYoMaGP1RgNYy.output.variable_workflow_02L9TZH6C9HVU3eHnLNP91ZKEfJOnaYpBsh$",
                          "operator": "ne",
                          "right_operand": 200
                        },
                        "operator": "and",
                        "right_operand": {
                          "left_operand": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.input.variable_workflow_02OZ9YHN4E12T5odx23tDpAHmoVPJxb9Mqf$",
                          "operator": "eq",
                          "right_operand": false
                        }
                      },
                      "continue_on_failure": false,
                      "display_name": "Get Failed",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_02OZ9YIPCO3YY0OHzvsKwWCKl8Tazm5M3Fd",
                        "name": "Set Variables",
                        "title": "Set Output Variables",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Set Output Variables",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4FQAA2ajWizdYtc3QC10gL4aouc$",
                              "variable_value_new": "$activity.definition_activity_02OZ9YHSS3K3G2v89aBapXAYoMaGP1RgNYy.output.variable_workflow_02L9TZH6C9HVU3eHnLNP91ZKEfJOnaYpBsh$"
                            },
                            {
                              "variable_to_update": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4CNUG5n0eNjrERkF0WSOXOO91PG$",
                              "variable_value_new": "$activity.definition_activity_02OZ9YHSS3K3G2v89aBapXAYoMaGP1RgNYy.output.variable_workflow_02L9TZH6CAB8T4C8P5tULvLWU4BoXyzW3r7$"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_02OZ9YIQP6I3E6vBp3dwCzlgoPEqM34NaLV",
                        "name": "Completed",
                        "title": "Completed, Failed",
                        "type": "logic.completed",
                        "base_type": "activity",
                        "properties": {
                          "completion_type": "failed-completed",
                          "continue_on_failure": false,
                          "display_name": "Completed, Failed",
                          "result_message": "$workflow.definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S.output.variable_workflow_02OZ9YHN4CNUG5n0eNjrERkF0WSOXOO91PG$",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "categories": [
          "category_02L8Y8MMNRTPU2rXklDKC7tsWsgppHits9e"
        ]
      },
      "atomic_workflows": [
        "definition_workflow_02L9TZH5W95870XebPF2g8kSyIYcawUvljX",
        "definition_workflow_02L9A58L99D8Q6CNvrbNWfw5UlyLLpkP3IW"
      ],
      "dependent_workflows": [
        "definition_workflow_02M605GS81XN44qr4RBWrJ6Zazk7k0ArIYX",
        "definition_workflow_02L9TZH5W95870XebPF2g8kSyIYcawUvljX",
        "definition_workflow_02L9A58L99D8Q6CNvrbNWfw5UlyLLpkP3IW"
      ]
    },
    {
      "workflow": {
        "unique_name": "definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui",
        "name": "Device Checklist",
        "title": "Device Checklist",
        "type": "generic.workflow",
        "base_type": "workflow",
        "variables": [
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "[]",
              "scope": "local",
              "name": "Appliance VLANs JSON",
              "type": "datatype.string",
              "description": "A local variable used to align all different input paths.\nThis is set from the Input passed from caller or set when the API calls are made directly from within this workflow.",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "json"
            },
            "unique_name": "variable_workflow_02OSH0EYH4S1S23ep1RZcl7GCvrAhlCDjcT",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.integer",
            "properties": {
              "value": 0,
              "scope": "output",
              "name": "Status Code",
              "type": "datatype.integer",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02OSH0EYH392O62h1dhKS86tib8KRNftRuJ",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.boolean",
            "properties": {
              "value": false,
              "scope": "local",
              "name": "Device has IP Assignment",
              "type": "datatype.boolean",
              "description": "A local flag where Device has some IP Assignment. This flag will not say its the correct IP is assigned.",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02OSH0EYH30X961rApId7NKu66pme36xkaf",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "[]",
              "scope": "local",
              "name": "Appliance Uplink Status JSON",
              "type": "datatype.string",
              "description": "A local variable used to align all different input paths.\nThis is set from the Input passed from caller or set when the API calls are made directly from within this workflow.",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "json"
            },
            "unique_name": "variable_workflow_02OYL9O8S2J1M64pTd5hwVWPck79byWj7mh",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "output",
              "name": "Result",
              "type": "datatype.string",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "text"
            },
            "unique_name": "variable_workflow_02OSH0EYH3NKG1nwlsglE3wubPeEjcgZGO5",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "[]",
              "scope": "local",
              "name": "Devices Status JSON",
              "type": "datatype.string",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "json"
            },
            "unique_name": "variable_workflow_02OSH0EYH51GV6YLvw99m0EVb3a3cfdjFfp",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "[]",
              "scope": "input",
              "name": "Device Status List",
              "type": "datatype.string",
              "description": "Input list of Device Status to help in performing compliance checks.\nProvide the Device Status as a JSON array. This is raw JSON output from Get Organization Devices Statuses activity.",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "json"
            },
            "unique_name": "variable_workflow_02OSH0EYH5B8R5LWvHqx2BaTaStXoTcNYCe",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "[]",
              "scope": "local",
              "name": "Devices JSON",
              "type": "datatype.string",
              "description": "A local variable used to align all different input paths.\nThis is set from the Input passed from caller or set when the API calls are made directly from within this workflow.",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "json"
            },
            "unique_name": "variable_workflow_02OSH0EYH28GZ3JKqBGBPnuxfAxmfHaSIMb",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "input",
              "name": "Organization ID",
              "type": "datatype.string",
              "description": "Optional - If you are passing the AP devices list then Organization ID is not needed. Pass this as input when you what the workflow to lookup access point devices for the organization. ",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "text"
            },
            "unique_name": "variable_workflow_02OSH0EYH5X847in0cURERDBFdelXTn7emS",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.boolean",
            "properties": {
              "value": false,
              "scope": "local",
              "name": "Device Is Online",
              "type": "datatype.boolean",
              "description": "Boolean indicating Device is Online ",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02OSH0EYH46U65yK8bMOP16CRXnPSKKiruX",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "input",
              "name": "Network ID",
              "type": "datatype.string",
              "description": "Optional - If you are passing the AP devices list then Network ID is not needed. Pass this as input when you what the workflow to lookup access point devices for the Network. ",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "text"
            },
            "unique_name": "variable_workflow_02OSH0EYH3SRL7mnVUYWeuhNafzA34PWn47",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.boolean",
            "properties": {
              "value": false,
              "scope": "local",
              "name": "Device is using Proper IP",
              "type": "datatype.boolean",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02OSH0EYH3IDZ1a7F8J9jsVlXBuG8XxLFb0",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "[]",
              "scope": "input",
              "name": "Appliance Uplink Status List",
              "type": "datatype.string",
              "description": "Input list of Appliance Status to help in performing compliance checks for WAN1 and WAN2 Uplinks. \nProvide the Status as a JSON array. This is raw JSON output from Get Organization Appliance Uplink Statuses activity.",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "json"
            },
            "unique_name": "variable_workflow_02OYL2QK8ZSCD07HzEgRCYchh8f33oefSyC",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.boolean",
            "properties": {
              "value": false,
              "scope": "local",
              "name": "Is Device Type Check Passed",
              "type": "datatype.boolean",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02OVAUE5K5HTV5uXMtOsM1DqSZLgQ2RnqPw",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "[]",
              "scope": "input",
              "name": "Devices List",
              "type": "datatype.string",
              "description": "Input list of Devices to check for compliance.\nProvide the devices as a JSON array. This is raw JSON output from Get Organization Devices.",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "json"
            },
            "unique_name": "variable_workflow_02OSH0EYH3YXH1aZFgYWowPqztnCMVBQta7",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "output",
              "name": "Error Message",
              "type": "datatype.string",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02OSH0EYH4FVF2fq64k4E7GqASABHytma1p",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "output",
              "name": "Status Message",
              "type": "datatype.string",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "text"
            },
            "unique_name": "variable_workflow_02OSH0EYH5M7748KX1Sez2t23aruklkFvuw",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "[]",
              "scope": "input",
              "name": "Appliance VLAN List",
              "type": "datatype.string",
              "description": "Input list of Appliance VLANs to use for compliance checks to identify the Fixed IP Assignments.\nProvide the Appliance VLANs as a JSON array. This is raw JSON output from Get Network Appliance Vlans activity.",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "json"
            },
            "unique_name": "variable_workflow_02OSH0EYH2QMP4wI6rY8BO5v0LL7jaVkBx0",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "local",
              "name": "Device Testing Notes",
              "type": "datatype.string",
              "description": "A local variable capturing Notes from different tests done on the AP. ",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "text"
            },
            "unique_name": "variable_workflow_02OSH0EYH67UG6tNshkU1XX1IhpRdaDKoSk",
            "object_type": "variable_workflow"
          }
        ],
        "properties": {
          "atomic": {
            "is_atomic": false
          },
          "delete_workflow_instance": false,
          "description": "A checklist of tests for Devices for a given input Network. Workflow performs two checks \n1. Device Status\n2. IP Assignment of Access Point matches with one of the Appliance VLAN Fixed IP Assignments.",
          "display_name": "Device Checklist",
          "runtime_user": {
            "target_default": true
          },
          "target": {
            "target_type": "meraki.endpoint",
            "specify_on_workflow_start": true
          }
        },
        "object_type": "definition_workflow",
        "actions": [
          {
            "unique_name": "definition_activity_02OSH0F3A1W0N5FIB9DJmgQ1v9C6rVEpn0T",
            "name": "Group",
            "title": "Validate Inputs",
            "type": "logic.group",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "description": "Checks on the status of passed in inputs. If inputs are not provided make needed API calls. \nStores the results in temporary tables. ",
              "display_as_suggestion": false,
              "display_name": "Validate Inputs",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_02OSH0F5E9XFI0UNMWyUCgkV2dr3ZHg4Ph2",
                "name": "Condition Block",
                "title": "Are Inputs provided?",
                "type": "logic.if_else",
                "base_type": "activity",
                "properties": {
                  "conditions": [],
                  "continue_on_failure": false,
                  "description": "For optimization purposes, check if Inputs passed in from other workflows. Only when inputs like Devices List, Device Status List, VLAN List are not passed in as Input - perform lookup with the workflow.",
                  "display_name": "Are Inputs provided?",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_02OSH0F75HFG34Ug9Sz8x8BgdwW071gAILF",
                    "name": "Condition Branch",
                    "title": "Not Enough Inputs",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": {
                          "left_operand": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.input.variable_workflow_02OSH0EYH3YXH1aZFgYWowPqztnCMVBQta7$",
                          "operator": "eq",
                          "right_operand": "[]"
                        },
                        "operator": "and",
                        "right_operand": {
                          "left_operand": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.input.variable_workflow_02OSH0EYH5X847in0cURERDBFdelXTn7emS$",
                          "operator": "eq",
                          "right_operand": ""
                        }
                      },
                      "continue_on_failure": false,
                      "display_name": "Not Enough Inputs",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_02OSH0F8E0NQH2TgxOcsHRWNYc5F6FbXZoL",
                        "name": "Set Variables",
                        "title": "Set Variables",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "description": "Set Variables",
                          "display_name": "Set Variables",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.output.variable_workflow_02OSH0EYH3NKG1nwlsglE3wubPeEjcgZGO5$",
                              "variable_value_new": "Not Enough Inputs to proceed.\nOption 1 - Provide AP Device List and Device Status List from other calling workflows.\nOR\nOption 2 - Provide Organization ID to lookup AP Device List and Device Status for the Organization."
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  },
                  {
                    "unique_name": "definition_activity_02OSH0F9CCPBB1qMm4UxMRrYUoFser384ol",
                    "name": "Condition Branch",
                    "title": "No, execute API calls",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": {
                          "left_operand": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.input.variable_workflow_02OSH0EYH3YXH1aZFgYWowPqztnCMVBQta7$",
                          "operator": "eq",
                          "right_operand": "[]"
                        },
                        "operator": "and",
                        "right_operand": {
                          "left_operand": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.input.variable_workflow_02OSH0EYH5X847in0cURERDBFdelXTn7emS$",
                          "operator": "ne",
                          "right_operand": ""
                        }
                      },
                      "continue_on_failure": false,
                      "description": "This is a block helps to execute the workflow standalone and makes API calls to Meraki to collect the inputs and set to local variables.",
                      "display_name": "No, execute API calls",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_02OSH0FDF5AIZ3utiMQGEQOM2WC3T6tF5xd",
                        "name": "Meraki - Get Organization Devices",
                        "title": "Meraki - Get Organization Devices",
                        "type": "workflow.atomic_workflow",
                        "base_type": "subworkflow",
                        "properties": {
                          "continue_on_failure": false,
                          "description": "**Cisco Meraki - Devices - Get Organization Devices**\n\nList the devices in an organization that have been assigned to networks.\n\n**Target:** A Meraki Endpoint using HTTPS \"api.meraki.com\" port 443 and no path.\n\n**Account Key:** Meraki User API Key. API Key can be generated from Merkai Dashboard -\u003e User Profile -\u003e API Access.\n\nSteps:\n[] Sends Get Network request to Meraki\n[] Check if the request was successful:\n[]\u003e If it was, attempt to extract the results and set the output variables\n[]\u003e If it wasn't, return the error and marks the workflow as failed.\n\nNOTE: Empty attributes in the request are removed from the payload before sending to Meraki. \n\nMore information about this API: https://developer.cisco.com/meraki/api-v1/get-organization-networks/",
                          "display_name": "Meraki - Get Organization Devices",
                          "input": {
                            "variable_workflow_02LBZJE84MKWU3b4u5iWvF5C56j3SWvcLxU": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.input.variable_workflow_02OSH0EYH5X847in0cURERDBFdelXTn7emS$",
                            "variable_workflow_02LPD34ABGELX4xRBULzEWn7yZXmlOLnhlm": "",
                            "variable_workflow_02LPD34ABGWM530L7Ref10RR1lIyS6swy7y": "",
                            "variable_workflow_02LPD34ABH4NB5Y3srIX91xn9cIzEY68MMa": "withAnyTags",
                            "variable_workflow_02LPD34ABHCES6OHeiXWIvVmRKLdKquVK4f": [
                              "wireless"
                            ],
                            "variable_workflow_02LPD34ABHKTT7bzR3DO9wR6Jt8QIVkTmKA": [],
                            "variable_workflow_02LPD34ABHUR66qxroFyemfNTX3wjVrx4bB": "",
                            "variable_workflow_02LPD34ABI5767Bipcwnil1zhzAhMVqXU77": "",
                            "variable_workflow_02LPD34ABICWG2rq68sl7VROvFjqB8bmooh": [],
                            "variable_workflow_02LPD34ABIJYH3MHQNXX88Tf38tgg2nnaiV": [],
                            "variable_workflow_02LPD34ABIRIY7ksRBfahOf52zARKfji5tq": "",
                            "variable_workflow_02LPD34ABIZNM1hpRmCW4fNi50a79mCW4oF": 1000,
                            "variable_workflow_02LPD34ABJ73Y1vUpFZq8UjZK37FVXisvfT": "",
                            "variable_workflow_02LPD34ABJFEJ26DNauhcFei0QIVgWIgCYw": [],
                            "variable_workflow_02LPD34ABJV2C0tJTsG5KJNoU4RZ9yRWNBC": [],
                            "variable_workflow_02LPD34ABK6IH5MaynNsHWnm1mpCQw0TkyQ": [],
                            "variable_workflow_02LPD34ABKF695YGotxETEugS06mLWBlnVr": [],
                            "variable_workflow_02LPD34ABKNYC53bhvdbdyJKVnk3JPbMbDL": ""
                          },
                          "runtime_user": {
                            "target_default": true
                          },
                          "skip_execution": false,
                          "target": {
                            "target_type": "meraki.endpoint",
                            "use_workflow_target": true
                          },
                          "workflow_id": "definition_workflow_02LBZJE7PQZVJ3crE33ELBrscM7zWeiugTw",
                          "workflow_name": "Meraki - Get Organization Devices"
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_02OSH0FFG2GOR5E1sJOGjvUTHFDQfKpZWi3",
                        "name": "Get Organization Devices Statuses",
                        "title": "Get Organization Devices Statuses",
                        "type": "workflow.atomic_workflow",
                        "base_type": "subworkflow",
                        "properties": {
                          "continue_on_failure": false,
                          "description": "List the status of every Meraki device in the organization",
                          "display_name": "Get Organization Devices Statuses",
                          "input": {
                            "variable_workflow_02OQTFUOR8MVC11Q9By4LxWBBrDmYfb4FOQ": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.input.variable_workflow_02OSH0EYH5X847in0cURERDBFdelXTn7emS$"
                          },
                          "runtime_user": {
                            "target_default": true
                          },
                          "skip_execution": false,
                          "target": {
                            "target_type": "meraki.endpoint",
                            "use_workflow_target": true
                          },
                          "workflow_id": "definition_workflow_02OQTFUOR8LBS2UYcPdhVOgQwSfDAOOYyuw",
                          "workflow_name": "Get Organization Devices Statuses"
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_02OSH0FHITTDI11h19gtOzPgdUCPYI6rJMt",
                        "name": "Meraki - Get Network Appliance VLANs",
                        "title": "Meraki - Get Network Appliance VLANs",
                        "type": "workflow.atomic_workflow",
                        "base_type": "subworkflow",
                        "properties": {
                          "continue_on_failure": true,
                          "description": "Retrieve VLAN information for a specific Meraki network appliance within a given organization.",
                          "display_name": "Meraki - Get Network Appliance VLANs",
                          "input": {
                            "variable_workflow_02LLQ6L7QIQQZ0XnS8DcriLDPnW0S7SauWX": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.input.variable_workflow_02OSH0EYH3SRL7mnVUYWeuhNafzA34PWn47$",
                            "variable_workflow_02LLQVGHALE2V4hp6V0kbylHzgwt7s7sWxn": false
                          },
                          "runtime_user": {
                            "target_default": true
                          },
                          "skip_execution": false,
                          "target": {
                            "target_type": "meraki.endpoint",
                            "use_workflow_target": true
                          },
                          "workflow_id": "definition_workflow_02L6HO3MVE3076LgocjRMWpLoMD5gmGIgIR",
                          "workflow_name": "Meraki - Get Network Appliance VLANs"
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_02OYL0K31BT8S15B76DaH2FGdw6WwrEFLFT",
                        "name": "Meraki - Get Organization Appliance Uplink Statuses",
                        "title": "Meraki - Get Organization Appliance Uplink Statuses",
                        "type": "workflow.atomic_workflow",
                        "base_type": "subworkflow",
                        "properties": {
                          "continue_on_failure": false,
                          "description": "List the uplink status of every Meraki MX and Z series appliances in the organization",
                          "display_name": "Meraki - Get Organization Appliance Uplink Statuses",
                          "input": {
                            "variable_workflow_02OARCJ16X2WW4donDhGip6N90Y2WO8jaS5": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.input.variable_workflow_02OSH0EYH5X847in0cURERDBFdelXTn7emS$"
                          },
                          "runtime_user": {
                            "target_default": true
                          },
                          "skip_execution": false,
                          "target": {
                            "target_type": "meraki.endpoint",
                            "use_workflow_target": true
                          },
                          "workflow_id": "definition_workflow_02OARCJ16WZTS5V0LlpWAeTm3Br5dYPREHG",
                          "workflow_name": "Meraki - Get Organization Appliance Uplink Statuses"
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_02OSH0FJDXC107TXJCtoHrpKW4bIE4doODd",
                        "name": "Set Variables",
                        "title": "Set Variables",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "description": "Set Variables",
                          "display_name": "Set Variables",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH28GZ3JKqBGBPnuxfAxmfHaSIMb$",
                              "variable_value_new": "$activity.definition_activity_02OSH0FDF5AIZ3utiMQGEQOM2WC3T6tF5xd.output.variable_workflow_02LBZJE84NB1F75jMCnZjaIsHHmn1NBoO2y$"
                            },
                            {
                              "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH51GV6YLvw99m0EVb3a3cfdjFfp$",
                              "variable_value_new": "$activity.definition_activity_02OSH0FFG2GOR5E1sJOGjvUTHFDQfKpZWi3.output.variable_workflow_02OQTFUOR8PYG3qvB7FFXfklAF5EQYr0ArG$"
                            },
                            {
                              "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH4S1S23ep1RZcl7GCvrAhlCDjcT$",
                              "variable_value_new": "$activity.definition_activity_02OSH0FHITTDI11h19gtOzPgdUCPYI6rJMt.output.variable_workflow_02LLQ6L7QI68J5L73IDYmrWkYMa5r6rbGoo$"
                            },
                            {
                              "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OYL9O8S2J1M64pTd5hwVWPck79byWj7mh$",
                              "variable_value_new": "$activity.definition_activity_02OYL0K31BT8S15B76DaH2FGdw6WwrEFLFT.output.variable_workflow_02OARCJ16X5884mgWf2gyCT0zMxfyvA1KnC$"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  },
                  {
                    "unique_name": "definition_activity_02OSH0FKYGH8U6qWWe1frcZnmhrCXuyL07M",
                    "name": "Condition Branch",
                    "title": "Yes, Use Inputs",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": {
                          "left_operand": {
                            "left_operand": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.input.variable_workflow_02OSH0EYH3YXH1aZFgYWowPqztnCMVBQta7$",
                            "operator": "ne",
                            "right_operand": "[]"
                          },
                          "operator": "and",
                          "right_operand": {
                            "left_operand": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.input.variable_workflow_02OSH0EYH5B8R5LWvHqx2BaTaStXoTcNYCe$",
                            "operator": "ne",
                            "right_operand": "[]"
                          }
                        },
                        "operator": "and",
                        "right_operand": {
                          "left_operand": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.input.variable_workflow_02OSH0EYH2QMP4wI6rY8BO5v0LL7jaVkBx0$",
                          "operator": "ne",
                          "right_operand": "[]"
                        }
                      },
                      "continue_on_failure": false,
                      "description": "This is a block helps when the workflow is called from other parent workflows. The inputs are passed from the caller workflows and set to local variables.",
                      "display_name": "Yes, Use Inputs",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_02OSH0FMOBKIS3clOwilgsEl5PcUyILqg2Z",
                        "name": "Set Variables",
                        "title": "Set Variables",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "description": "Set Variables",
                          "display_name": "Set Variables",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH28GZ3JKqBGBPnuxfAxmfHaSIMb$",
                              "variable_value_new": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.input.variable_workflow_02OSH0EYH3YXH1aZFgYWowPqztnCMVBQta7$"
                            },
                            {
                              "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH51GV6YLvw99m0EVb3a3cfdjFfp$",
                              "variable_value_new": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.input.variable_workflow_02OSH0EYH5B8R5LWvHqx2BaTaStXoTcNYCe$"
                            },
                            {
                              "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH4S1S23ep1RZcl7GCvrAhlCDjcT$",
                              "variable_value_new": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.input.variable_workflow_02OSH0EYH2QMP4wI6rY8BO5v0LL7jaVkBx0$"
                            },
                            {
                              "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OYL9O8S2J1M64pTd5hwVWPck79byWj7mh$",
                              "variable_value_new": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.input.variable_workflow_02OYL2QK8ZSCD07HzEgRCYchh8f33oefSyC$"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  }
                ]
              },
              {
                "unique_name": "definition_activity_02OSH0FQMPYGD3RwbV5yst9iTpplT6TfgbS",
                "name": "Read Table from JSON",
                "title": "Read Device Status from JSON",
                "type": "corejava.read_table_from_json",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": false,
                  "description": "This helps to read an array (typically a GET all) output to a Table like structure for further processing. This reads the content of Get Organization Device Status API.",
                  "display_name": "Read Device Status from JSON",
                  "input_json": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH51GV6YLvw99m0EVb3a3cfdjFfp$",
                  "jsonpath_query": "$.*",
                  "persist_output": true,
                  "populate_columns": false,
                  "skip_execution": false,
                  "table_columns": [
                    {
                      "column_name": "serial",
                      "column_type": "string"
                    },
                    {
                      "column_name": "status",
                      "column_type": "string"
                    }
                  ]
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02OVGZTIN7F3G000b0ZfYqr9iqHKcZp52Ok",
                "name": "Execute Python Script",
                "title": "Filter for Network Devices",
                "type": "python3.script",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": false,
                  "description": "Filter the devices for the current network.\nWe getting the devices at Org level (1 api) and then filtering for Network specific devices as post processing. This help to reduce the number of API calls.",
                  "display_name": "Filter for Network Devices",
                  "script": "import json\nimport sys\n\n(alldevices, filterNetworkId) = sys.argv[1:3]\n\ndata = json.loads(alldevices)\n\n# Filter the list\nfiltered = [item for item in data if item.get(\"networkId\") == filterNetworkId]\n\n# Print the filtered JSON array\nnetworkDevices = json.dumps(filtered, indent=2)\nprint(networkDevices)",
                  "script_arguments": [
                    "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH28GZ3JKqBGBPnuxfAxmfHaSIMb$",
                    "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.input.variable_workflow_02OSH0EYH3SRL7mnVUYWeuhNafzA34PWn47$"
                  ],
                  "script_queries": [
                    {
                      "script_query": "networkDevices",
                      "script_query_name": "networkDevices",
                      "script_query_type": "string"
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              }
            ]
          },
          {
            "unique_name": "definition_activity_02OYM8XHL7QOK1LsPXNMXHg2WQEmhJs3w1k",
            "name": "Group",
            "title": "Process Inputs",
            "type": "logic.group",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "description": "Group",
              "display_as_suggestion": false,
              "display_name": "Process Inputs",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_02OVHAVH953HW1rjJQT6uHXE0F8sHC9eFpm",
                "name": "Condition Block",
                "title": "Are there devices for this Network?",
                "type": "logic.if_else",
                "base_type": "activity",
                "properties": {
                  "conditions": [],
                  "continue_on_failure": false,
                  "description": "If-Else condition block",
                  "display_name": "Are there devices for this Network?",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_02OVHAVIPVR5U3IzYDYjjpVPLZX2RTmQx70",
                    "name": "Condition Branch",
                    "title": "Yes",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$activity.definition_activity_02OVGZTIN7F3G000b0ZfYqr9iqHKcZp52Ok.output.script_queries.networkDevices$",
                        "operator": "ne",
                        "right_operand": "[]"
                      },
                      "continue_on_failure": false,
                      "display_name": "Yes",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_02OSH0FNO3VIK2sRVeN47baf3gI9XpG7rKv",
                        "name": "Read Table from JSON",
                        "title": "Read Devices from JSON",
                        "type": "corejava.read_table_from_json",
                        "base_type": "activity",
                        "properties": {
                          "action_timeout": 180,
                          "continue_on_failure": false,
                          "description": "This helps to read an array (typically a GET all) output to a Table like structure for further processing. This reads the content of Get Organization Devices API.",
                          "display_name": "Read Devices from JSON",
                          "input_json": "$activity.definition_activity_02OVGZTIN7F3G000b0ZfYqr9iqHKcZp52Ok.output.script_queries.networkDevices$",
                          "jsonpath_query": "$.*",
                          "persist_output": true,
                          "populate_columns": false,
                          "skip_execution": false,
                          "table_columns": [
                            {
                              "column_name": "serial",
                              "column_type": "string"
                            },
                            {
                              "column_name": "model",
                              "column_type": "string"
                            },
                            {
                              "column_name": "name",
                              "column_type": "string"
                            },
                            {
                              "column_name": "lanIp",
                              "column_type": "string"
                            },
                            {
                              "column_name": "networkId",
                              "column_type": "string"
                            },
                            {
                              "column_name": "productType",
                              "column_type": "string"
                            },
                            {
                              "column_name": "mac",
                              "column_type": "string"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_02OSH0FRX1GV62OnJk3kd4kGZtqjWZZ0RrH",
                        "name": "For Each",
                        "title": "For Each Device in Network",
                        "type": "logic.for_each",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "description": "Loop for each device in the filtered for current Network",
                          "display_name": "For Each Device in Network",
                          "skip_execution": false,
                          "source_array": "$activity.definition_activity_02OSH0FNO3VIK2sRVeN47baf3gI9XpG7rKv.output.read_table_from_json$"
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02OSH0FTM807J11cKWoNozS07ZjT2KvPgzZ",
                            "name": "Group",
                            "title": "Step 1: Check Device Status",
                            "type": "logic.group",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "description": "Check the status of device as Online, Alerting, Not Online",
                              "display_as_suggestion": false,
                              "display_name": "Step 1: Check Device Status",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02OSH0FV2SJAK6Dyqwsh5o25IQHOV7n82VM",
                                "name": "Select from Table",
                                "title": "Select from Device Status Table",
                                "type": "core.selectfromtable",
                                "base_type": "activity",
                                "properties": {
                                  "action_timeout": 180,
                                  "columns": [
                                    {
                                      "column_name": "serial",
                                      "column_type": "string"
                                    },
                                    {
                                      "column_name": "status",
                                      "column_type": "string"
                                    }
                                  ],
                                  "continue_on_failure": false,
                                  "description": "Select from Table",
                                  "display_name": "Select from Device Status Table",
                                  "input_table": "$activity.definition_activity_02OSH0FQMPYGD3RwbV5yst9iTpplT6TfgbS.output.read_table_from_json$",
                                  "number_of_rows": {
                                    "all_rows": true
                                  },
                                  "persist_output": true,
                                  "skip_execution": false,
                                  "sorting": {
                                    "no_sort": true
                                  },
                                  "where_clause": "serial = '$activity.definition_activity_02OSH0FRX1GV62OnJk3kd4kGZtqjWZZ0RrH.input.source_array[@].serial$'"
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_02OSH0FWT0QJD1cLFofRjCEADDaziSdyTS8",
                                "name": "Condition Block",
                                "title": "Check Device Status",
                                "type": "logic.if_else",
                                "base_type": "activity",
                                "properties": {
                                  "conditions": [],
                                  "continue_on_failure": false,
                                  "description": "Check the status of device as Online, Alerting, Not Online",
                                  "display_name": "Check Device Status",
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity",
                                "blocks": [
                                  {
                                    "unique_name": "definition_activity_02OSH0FXS80GO2YEVq9cMa0ZZl0Tb2g7I4y",
                                    "name": "Condition Branch",
                                    "title": "Online",
                                    "type": "logic.condition_block",
                                    "base_type": "activity",
                                    "properties": {
                                      "condition": {
                                        "left_operand": "$activity.definition_activity_02OSH0FV2SJAK6Dyqwsh5o25IQHOV7n82VM.output.output_table[0].status$",
                                        "operator": "eq",
                                        "right_operand": "online"
                                      },
                                      "continue_on_failure": false,
                                      "display_name": "Online",
                                      "skip_execution": false
                                    },
                                    "object_type": "definition_activity",
                                    "actions": [
                                      {
                                        "unique_name": "definition_activity_02OSH0FZ7SWNC4NCc9QexKhBGyBMBI9blHd",
                                        "name": "Set Variables",
                                        "title": "Set Variables",
                                        "type": "core.set_multiple_variables",
                                        "base_type": "activity",
                                        "properties": {
                                          "continue_on_failure": false,
                                          "description": "Set Variables",
                                          "display_name": "Set Variables",
                                          "skip_execution": false,
                                          "variables_to_update": [
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH46U65yK8bMOP16CRXnPSKKiruX$",
                                              "variable_value_new": true
                                            }
                                          ]
                                        },
                                        "object_type": "definition_activity"
                                      }
                                    ]
                                  },
                                  {
                                    "unique_name": "definition_activity_02OSH0G0AD5EC4mH9UKQxvjItIum9luncNS",
                                    "name": "Condition Branch",
                                    "title": "Alerting",
                                    "type": "logic.condition_block",
                                    "base_type": "activity",
                                    "properties": {
                                      "condition": {
                                        "left_operand": "$activity.definition_activity_02OSH0FV2SJAK6Dyqwsh5o25IQHOV7n82VM.output.output_table[0].status$",
                                        "operator": "eq",
                                        "right_operand": "alerting"
                                      },
                                      "continue_on_failure": false,
                                      "display_name": "Alerting",
                                      "skip_execution": false
                                    },
                                    "object_type": "definition_activity",
                                    "actions": [
                                      {
                                        "unique_name": "definition_activity_02OSH0G1WVI1B5gVx8JJZHInrgBtDpv77IE",
                                        "name": "Set Variables",
                                        "title": "Set Variables",
                                        "type": "core.set_multiple_variables",
                                        "base_type": "activity",
                                        "properties": {
                                          "continue_on_failure": false,
                                          "description": "Set Variables",
                                          "display_name": "Set Variables",
                                          "skip_execution": false,
                                          "variables_to_update": [
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH67UG6tNshkU1XX1IhpRdaDKoSk$",
                                              "variable_value_new": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH67UG6tNshkU1XX1IhpRdaDKoSk$ Device is alerting."
                                            }
                                          ]
                                        },
                                        "object_type": "definition_activity"
                                      }
                                    ]
                                  },
                                  {
                                    "unique_name": "definition_activity_02OSH0G31NCS67S5JbkYpo2vNTLDJCwvgMe",
                                    "name": "Condition Branch",
                                    "title": "Not Online",
                                    "type": "logic.condition_block",
                                    "base_type": "activity",
                                    "properties": {
                                      "condition": {
                                        "left_operand": "$activity.definition_activity_02OSH0FV2SJAK6Dyqwsh5o25IQHOV7n82VM.output.output_table[0].status$",
                                        "operator": "ne",
                                        "right_operand": "online"
                                      },
                                      "continue_on_failure": false,
                                      "display_name": "Not Online",
                                      "skip_execution": false
                                    },
                                    "object_type": "definition_activity",
                                    "actions": [
                                      {
                                        "unique_name": "definition_activity_02OSH0G4O8IAD6IzbEhBWzGmUSCppH3QgWp",
                                        "name": "Set Variables",
                                        "title": "Set Variables",
                                        "type": "core.set_multiple_variables",
                                        "base_type": "activity",
                                        "properties": {
                                          "continue_on_failure": false,
                                          "description": "Set Variables",
                                          "display_name": "Set Variables",
                                          "skip_execution": false,
                                          "variables_to_update": [
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH67UG6tNshkU1XX1IhpRdaDKoSk$",
                                              "variable_value_new": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH67UG6tNshkU1XX1IhpRdaDKoSk$ Device is not online."
                                            }
                                          ]
                                        },
                                        "object_type": "definition_activity"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "unique_name": "definition_activity_02OSH0G5O4H8L0bH4IgWAk7rf88W0zS0tou",
                            "name": "Group",
                            "title": "Step 2: Check IP Assignments",
                            "type": "logic.group",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "description": "Check if the device has a Fixed IP assignment and if IP is set correctly for device.",
                              "display_as_suggestion": false,
                              "display_name": "Step 2: Check IP Assignments",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02OSH0G73UKM32zyqz1RTEO19bGj8M0WVUX",
                                "name": "Condition Block",
                                "title": "Are Vlans Available?",
                                "type": "logic.if_else",
                                "base_type": "activity",
                                "properties": {
                                  "conditions": [],
                                  "continue_on_failure": false,
                                  "description": "Ensure we have Appliance VLANs before we proceed checking for IP assignments. ",
                                  "display_name": "Are Vlans Available?",
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity",
                                "blocks": [
                                  {
                                    "unique_name": "definition_activity_02OSH0G7Z9W0X7ItvLnE1TrG6tUtrBKOsnG",
                                    "name": "Condition Branch",
                                    "title": "Yes, VLANs Available",
                                    "type": "logic.condition_block",
                                    "base_type": "activity",
                                    "properties": {
                                      "condition": {
                                        "left_operand": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH4S1S23ep1RZcl7GCvrAhlCDjcT$",
                                        "operator": "nmw",
                                        "right_operand": "*errors*"
                                      },
                                      "continue_on_failure": false,
                                      "description": "Some VLANs are available but it could be different devices.",
                                      "display_name": "Yes, VLANs Available",
                                      "skip_execution": false
                                    },
                                    "object_type": "definition_activity",
                                    "actions": [
                                      {
                                        "unique_name": "definition_activity_02OSH0G992KER2o94lBZXo7yate6OGSYAuZ",
                                        "name": "Read Table from JSON",
                                        "title": "Read VLANs from JSON",
                                        "type": "corejava.read_table_from_json",
                                        "base_type": "activity",
                                        "properties": {
                                          "action_timeout": 180,
                                          "continue_on_failure": false,
                                          "description": "This helps to read an array (typically a GET all) output to a Table like structure for further processing.",
                                          "display_name": "Read VLANs from JSON",
                                          "input_json": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH4S1S23ep1RZcl7GCvrAhlCDjcT$",
                                          "jsonpath_query": "$.*",
                                          "persist_output": true,
                                          "populate_columns": false,
                                          "skip_execution": false,
                                          "table_columns": [
                                            {
                                              "column_name": "id",
                                              "column_type": "string"
                                            },
                                            {
                                              "column_name": "fixedIpAssignments",
                                              "column_type": "string"
                                            }
                                          ]
                                        },
                                        "object_type": "definition_activity"
                                      },
                                      {
                                        "unique_name": "definition_activity_02OSH0GAPSLFU1DKcieQonyn0iomlV41tZv",
                                        "name": "JSONPath Query",
                                        "title": "Find Fixed IP Assignment for Device",
                                        "type": "corejava.jsonpathquery",
                                        "base_type": "activity",
                                        "properties": {
                                          "action_timeout": 180,
                                          "continue_on_failure": true,
                                          "description": "Identify if there are any IP Assignment for the MAC address of the Device.\nThis check can be changed specific to customer needs depending on if they want Device Name match or a MAC address match.\nNOTE: This JSON Path will fail when there is no match, hence its essential to Continue on workflow execution, so we can check for results in the following IF condition.",
                                          "display_name": "Find Fixed IP Assignment for Device",
                                          "input_json": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH4S1S23ep1RZcl7GCvrAhlCDjcT$",
                                          "jsonpath_queries": [
                                            {
                                              "jsonpath_query": "$[?(@.fixedIpAssignments['$activity.definition_activity_02OSH0FRX1GV62OnJk3kd4kGZtqjWZZ0RrH.input.source_array[@].mac$'])]",
                                              "jsonpath_query_name": "matchedVlan",
                                              "jsonpath_query_type": "string",
                                              "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                                            }
                                          ],
                                          "skip_execution": false
                                        },
                                        "object_type": "definition_activity"
                                      },
                                      {
                                        "unique_name": "definition_activity_02OSH0GF8FZ1F2cII6S6g84tcypCVoD7SgQ",
                                        "name": "Condition Block",
                                        "title": "Found an IP Assignment?",
                                        "type": "logic.if_else",
                                        "base_type": "activity",
                                        "properties": {
                                          "conditions": [],
                                          "continue_on_failure": false,
                                          "description": "First check if there was a match, then parse for VLAN ID, IP, Name. ",
                                          "display_name": "Found an IP Assignment?",
                                          "skip_execution": false
                                        },
                                        "object_type": "definition_activity",
                                        "blocks": [
                                          {
                                            "unique_name": "definition_activity_02OSH0GGD7TQ12irUVL1pIv861ibJmTExgy",
                                            "name": "Condition Branch",
                                            "title": "Yes, Found",
                                            "type": "logic.condition_block",
                                            "base_type": "activity",
                                            "properties": {
                                              "condition": {
                                                "left_operand": "$activity.definition_activity_02OSH0GAPSLFU1DKcieQonyn0iomlV41tZv.output.succeeded$",
                                                "operator": "eq",
                                                "right_operand": true
                                              },
                                              "continue_on_failure": false,
                                              "display_name": "Yes, Found",
                                              "skip_execution": false
                                            },
                                            "object_type": "definition_activity",
                                            "actions": [
                                              {
                                                "unique_name": "definition_activity_02OSH0GHZEFGJ3tCuxnAsvy05eltLPYxKIz",
                                                "name": "JSONPath Query",
                                                "title": "Find VLAN and IP Address",
                                                "type": "corejava.jsonpathquery",
                                                "base_type": "activity",
                                                "properties": {
                                                  "action_timeout": 180,
                                                  "continue_on_failure": false,
                                                  "description": "Find the IP Address and the corresponding VLAN ID now that we know there is a match.",
                                                  "display_name": "Find VLAN and IP Address",
                                                  "input_json": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH4S1S23ep1RZcl7GCvrAhlCDjcT$",
                                                  "jsonpath_queries": [
                                                    {
                                                      "jsonpath_query": "$[?(@.fixedIpAssignments['$activity.definition_activity_02OSH0FRX1GV62OnJk3kd4kGZtqjWZZ0RrH.input.source_array[@].mac$'])].id",
                                                      "jsonpath_query_name": "vlanId",
                                                      "jsonpath_query_type": "string",
                                                      "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                                                    },
                                                    {
                                                      "jsonpath_query": "$[?(@.fixedIpAssignments['$activity.definition_activity_02OSH0FRX1GV62OnJk3kd4kGZtqjWZZ0RrH.input.source_array[@].mac$'])].fixedIpAssignments['$activity.definition_activity_02OSH0FRX1GV62OnJk3kd4kGZtqjWZZ0RrH.input.source_array[@].mac$'].ip",
                                                      "jsonpath_query_name": "fixedIpAddress",
                                                      "jsonpath_query_type": "string"
                                                    }
                                                  ],
                                                  "skip_execution": false
                                                },
                                                "object_type": "definition_activity"
                                              },
                                              {
                                                "unique_name": "definition_activity_02OSH0GJDXZ290NpENDzob729MTg95MUJYg",
                                                "name": "Condition Block",
                                                "title": "Assigned to Vlan 1?",
                                                "type": "logic.if_else",
                                                "base_type": "activity",
                                                "properties": {
                                                  "conditions": [],
                                                  "continue_on_failure": false,
                                                  "description": "Condition checks if the AP (by name) has a fixed IP address assignment in Appliance VLANs list. Additionally checks if the assigned VLAN is 1. ",
                                                  "display_name": "Assigned to Vlan 1?",
                                                  "skip_execution": false
                                                },
                                                "object_type": "definition_activity",
                                                "blocks": [
                                                  {
                                                    "unique_name": "definition_activity_02OSH0GKDNTM73TMpWvCJWxj6N71cpesQbE",
                                                    "name": "Condition Branch",
                                                    "title": "Yes, assigned to VLAN 1",
                                                    "type": "logic.condition_block",
                                                    "base_type": "activity",
                                                    "properties": {
                                                      "condition": {
                                                        "left_operand": "$activity.definition_activity_02OSH0GHZEFGJ3tCuxnAsvy05eltLPYxKIz.output.jsonpath_queries.vlanId$",
                                                        "operator": "eq",
                                                        "right_operand": "1"
                                                      },
                                                      "continue_on_failure": false,
                                                      "description": "Condition checks if the Device (by name) has a fixed IP address assignment in Appliance VLANs list. Additionally checks if the assigned VLAN is 1.",
                                                      "display_name": "Yes, assigned to VLAN 1",
                                                      "skip_execution": false
                                                    },
                                                    "object_type": "definition_activity",
                                                    "actions": [
                                                      {
                                                        "unique_name": "definition_activity_02OSH0GLUB8K40Z6BloS9YVx4UlwleEotNp",
                                                        "name": "Set Variables",
                                                        "title": "Set Variables",
                                                        "type": "core.set_multiple_variables",
                                                        "base_type": "activity",
                                                        "properties": {
                                                          "continue_on_failure": false,
                                                          "description": "Set Variables",
                                                          "display_name": "Set Variables",
                                                          "skip_execution": false,
                                                          "variables_to_update": [
                                                            {
                                                              "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH30X961rApId7NKu66pme36xkaf$",
                                                              "variable_value_new": true
                                                            }
                                                          ]
                                                        },
                                                        "object_type": "definition_activity"
                                                      },
                                                      {
                                                        "unique_name": "definition_activity_02OSH0GMURIGO2ujBUW00PJiAZuGq7Ljo2G",
                                                        "name": "Condition Block",
                                                        "title": "Is IP Address match?",
                                                        "type": "logic.if_else",
                                                        "base_type": "activity",
                                                        "properties": {
                                                          "conditions": [],
                                                          "continue_on_failure": false,
                                                          "description": "Condition checks if the Device (by name) has a fixed IP address assignment in Appliance VLANs list.\nChecks Device IP matches with the Fixed IP Address",
                                                          "display_name": "Is IP Address match?",
                                                          "skip_execution": false
                                                        },
                                                        "object_type": "definition_activity",
                                                        "blocks": [
                                                          {
                                                            "unique_name": "definition_activity_02OSH0GO15T855F2af7JusU5iUzSYSlWXdc",
                                                            "name": "Condition Branch",
                                                            "title": "Yes, Device has Proper IP",
                                                            "type": "logic.condition_block",
                                                            "base_type": "activity",
                                                            "properties": {
                                                              "condition": {
                                                                "left_operand": "$activity.definition_activity_02OSH0GHZEFGJ3tCuxnAsvy05eltLPYxKIz.output.jsonpath_queries.fixedIpAddress$",
                                                                "operator": "eq",
                                                                "right_operand": "$activity.definition_activity_02OSH0FRX1GV62OnJk3kd4kGZtqjWZZ0RrH.input.source_array[@].lanIp$"
                                                              },
                                                              "continue_on_failure": false,
                                                              "description": "Condition checks if the Device (by name) has a fixed IP address assignment in Appliance VLANs list.\nChecks Device IP matches with the Fixed IP Address",
                                                              "display_name": "Yes, Device has Proper IP",
                                                              "skip_execution": false
                                                            },
                                                            "object_type": "definition_activity",
                                                            "actions": [
                                                              {
                                                                "unique_name": "definition_activity_02OSH0GPOCJTF4S5e1ZkMNn99Zz20H3Y2pt",
                                                                "name": "Set Variables",
                                                                "title": "Set Variables",
                                                                "type": "core.set_multiple_variables",
                                                                "base_type": "activity",
                                                                "properties": {
                                                                  "continue_on_failure": false,
                                                                  "description": "Set Variables",
                                                                  "display_name": "Set Variables",
                                                                  "skip_execution": false,
                                                                  "variables_to_update": [
                                                                    {
                                                                      "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH3IDZ1a7F8J9jsVlXBuG8XxLFb0$",
                                                                      "variable_value_new": true
                                                                    }
                                                                  ]
                                                                },
                                                                "object_type": "definition_activity"
                                                              }
                                                            ]
                                                          },
                                                          {
                                                            "unique_name": "definition_activity_02OSH0GQZR55S4WA8CXYQEnClYhaHcrMejW",
                                                            "name": "Condition Branch",
                                                            "title": "Not using correct IP",
                                                            "type": "logic.condition_block",
                                                            "base_type": "activity",
                                                            "properties": {
                                                              "condition": {
                                                                "left_operand": "$activity.definition_activity_02OSH0GHZEFGJ3tCuxnAsvy05eltLPYxKIz.output.jsonpath_queries.fixedIpAddress$",
                                                                "operator": "ne",
                                                                "right_operand": "$activity.definition_activity_02OSH0FRX1GV62OnJk3kd4kGZtqjWZZ0RrH.input.source_array[@].lanIp$"
                                                              },
                                                              "continue_on_failure": false,
                                                              "description": "When IP is invalid update Device Notes.",
                                                              "display_name": "Not using correct IP",
                                                              "skip_execution": false
                                                            },
                                                            "object_type": "definition_activity",
                                                            "actions": [
                                                              {
                                                                "unique_name": "definition_activity_02OSH0GSSYI714nmORnHpiuzIYv9xdJYyOP",
                                                                "name": "Set Variables",
                                                                "title": "Set Variables",
                                                                "type": "core.set_multiple_variables",
                                                                "base_type": "activity",
                                                                "properties": {
                                                                  "continue_on_failure": false,
                                                                  "description": "Set Variables",
                                                                  "display_name": "Set Variables",
                                                                  "skip_execution": false,
                                                                  "variables_to_update": [
                                                                    {
                                                                      "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH67UG6tNshkU1XX1IhpRdaDKoSk$",
                                                                      "variable_value_new": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH67UG6tNshkU1XX1IhpRdaDKoSk$ Not using the assigned IP address."
                                                                    }
                                                                  ]
                                                                },
                                                                "object_type": "definition_activity"
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "unique_name": "definition_activity_02OSH0GTWXI6D1HTE7p6pDoBsICRnzUS03f",
                                                    "name": "Condition Branch",
                                                    "title": "Wrong Vlan",
                                                    "type": "logic.condition_block",
                                                    "base_type": "activity",
                                                    "properties": {
                                                      "condition": {
                                                        "left_operand": "$activity.definition_activity_02OSH0GHZEFGJ3tCuxnAsvy05eltLPYxKIz.output.jsonpath_queries.vlanId$",
                                                        "operator": "ne",
                                                        "right_operand": "1"
                                                      },
                                                      "continue_on_failure": false,
                                                      "description": "Checks if there is Wrong VLAN. Update Device Notes with invalid message.",
                                                      "display_name": "Wrong Vlan",
                                                      "skip_execution": false
                                                    },
                                                    "object_type": "definition_activity",
                                                    "actions": [
                                                      {
                                                        "unique_name": "definition_activity_02OSH0GVI15M65gsxmGZA1LbEGfQmhTJjeI",
                                                        "name": "Set Variables",
                                                        "title": "Set Variables",
                                                        "type": "core.set_multiple_variables",
                                                        "base_type": "activity",
                                                        "properties": {
                                                          "continue_on_failure": false,
                                                          "description": "Set Variables",
                                                          "display_name": "Set Variables",
                                                          "skip_execution": false,
                                                          "variables_to_update": [
                                                            {
                                                              "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH67UG6tNshkU1XX1IhpRdaDKoSk$",
                                                              "variable_value_new": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH67UG6tNshkU1XX1IhpRdaDKoSk$ Wrong VLAN assignment."
                                                            }
                                                          ]
                                                        },
                                                        "object_type": "definition_activity"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "unique_name": "definition_activity_02OSH0GWP4MG345ZfFEt78puTYHTuYTU0Ld",
                                            "name": "Condition Branch",
                                            "title": "No IP Assignment",
                                            "type": "logic.condition_block",
                                            "base_type": "activity",
                                            "properties": {
                                              "condition": {
                                                "left_operand": "$activity.definition_activity_02OSH0GAPSLFU1DKcieQonyn0iomlV41tZv.output.succeeded$",
                                                "operator": "eq",
                                                "right_operand": false
                                              },
                                              "continue_on_failure": false,
                                              "description": "Checks if there are No IP Assignments. Update Device Notes with invalid message.",
                                              "display_name": "No IP Assignment",
                                              "skip_execution": false
                                            },
                                            "object_type": "definition_activity",
                                            "actions": [
                                              {
                                                "unique_name": "definition_activity_02OSH0GYEWO3O1xyLQCwEgtDif6qUuCKJ4K",
                                                "name": "Set Variables",
                                                "title": "Set Variables",
                                                "type": "core.set_multiple_variables",
                                                "base_type": "activity",
                                                "properties": {
                                                  "continue_on_failure": false,
                                                  "description": "Set Variables",
                                                  "display_name": "Set Variables",
                                                  "skip_execution": false,
                                                  "variables_to_update": [
                                                    {
                                                      "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH67UG6tNshkU1XX1IhpRdaDKoSk$",
                                                      "variable_value_new": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH67UG6tNshkU1XX1IhpRdaDKoSk$ No IP Assignment exists."
                                                    }
                                                  ]
                                                },
                                                "object_type": "definition_activity"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "unique_name": "definition_activity_02OSH0GZH0IY11cZTqYqr6l4lHyujGJpabH",
                                    "name": "Condition Branch",
                                    "title": "No, VLANs",
                                    "type": "logic.condition_block",
                                    "base_type": "activity",
                                    "properties": {
                                      "condition": {
                                        "left_operand": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH4S1S23ep1RZcl7GCvrAhlCDjcT$",
                                        "operator": "mw",
                                        "right_operand": "errors"
                                      },
                                      "continue_on_failure": false,
                                      "display_name": "No, VLANs",
                                      "skip_execution": false
                                    },
                                    "object_type": "definition_activity",
                                    "actions": [
                                      {
                                        "unique_name": "definition_activity_02OSH0H0W14F719pGhb9Q0EQX49ZnA5J7pk",
                                        "name": "Set Variables",
                                        "title": "Set Variables",
                                        "type": "core.set_multiple_variables",
                                        "base_type": "activity",
                                        "properties": {
                                          "continue_on_failure": false,
                                          "description": "Set Variables",
                                          "display_name": "Set Variables",
                                          "skip_execution": false,
                                          "variables_to_update": [
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH67UG6tNshkU1XX1IhpRdaDKoSk$",
                                              "variable_value_new": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH67UG6tNshkU1XX1IhpRdaDKoSk$ No Vlans found for this Network."
                                            }
                                          ]
                                        },
                                        "object_type": "definition_activity"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "unique_name": "definition_activity_02OVAPTH60WIC0F2KmLTg01DMPTlZjn8E1X",
                            "name": "Group",
                            "title": "Step 3: Device Type specific checks",
                            "type": "logic.group",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "description": "Perform device type specific checks.",
                              "display_as_suggestion": false,
                              "display_name": "Step 3: Device Type specific checks",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02OUBMOPD933O72SNhSQJ6gfatUeYiPxIsL",
                                "name": "Condition Block",
                                "title": "Evaluate Device Type",
                                "type": "logic.if_else",
                                "base_type": "activity",
                                "properties": {
                                  "conditions": [],
                                  "continue_on_failure": false,
                                  "description": "If-Else condition block",
                                  "display_name": "Evaluate Device Type",
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity",
                                "blocks": [
                                  {
                                    "unique_name": "definition_activity_02OUBMOR8JTJ46y9hfdMYU3GyRjhS6dks31",
                                    "name": "Condition Branch",
                                    "title": "Switch Device",
                                    "type": "logic.condition_block",
                                    "base_type": "activity",
                                    "properties": {
                                      "condition": {
                                        "left_operand": "$activity.definition_activity_02OSH0FRX1GV62OnJk3kd4kGZtqjWZZ0RrH.input.source_array[@].productType$",
                                        "operator": "eq",
                                        "right_operand": "switch"
                                      },
                                      "continue_on_failure": false,
                                      "description": "Checks specific for Switch Device.",
                                      "display_name": "Switch Device",
                                      "skip_execution": false
                                    },
                                    "object_type": "definition_activity",
                                    "actions": [
                                      {
                                        "unique_name": "definition_activity_02OUB3133VQFY4wRPzQNYkBhdIasAtg1FZq",
                                        "name": "Switch Port Checklist",
                                        "title": "Switch Port Checklist",
                                        "type": "workflow.sub_workflow",
                                        "base_type": "subworkflow",
                                        "properties": {
                                          "continue_on_failure": false,
                                          "description": "A checklist of tests for Switch Ports.\n\nLookup Switch Ports for the Input Device Serial.\nIterate Switch Ports and compare the configured values match with the expected values.\nExpected values are set as Workflow static variables for each Config type.\nSummarize output results.\n",
                                          "display_name": "Switch Port Checklist",
                                          "input": {
                                            "variable_workflow_02OSTQONV63BG3y7iKPWJ2N3WZ4CFZNZw5a": "$activity.definition_activity_02OSH0FRX1GV62OnJk3kd4kGZtqjWZZ0RrH.input.source_array[@].serial$",
                                            "variable_workflow_02OSTX4IJXUVQ1ErCcHPEYAdFNtEBoOuxV7": "[]",
                                            "variable_workflow_02OSTXDMHPW987Ut0LbYBiQcXPLCdU4zcXo": "[]"
                                          },
                                          "runtime_user": {
                                            "target_default": true
                                          },
                                          "skip_execution": false,
                                          "target": {
                                            "target_type": "meraki.endpoint",
                                            "use_workflow_target": true
                                          },
                                          "workflow_id": "definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k",
                                          "workflow_name": "Switch Port Checklist"
                                        },
                                        "object_type": "definition_activity"
                                      },
                                      {
                                        "unique_name": "definition_activity_02OUBHH6MQNU77gLBb3PDv1QIAr88zsFoBl",
                                        "name": "Set Variables",
                                        "title": "Set Variables",
                                        "type": "core.set_multiple_variables",
                                        "base_type": "activity",
                                        "properties": {
                                          "continue_on_failure": false,
                                          "description": "Set Variables",
                                          "display_name": "Set Variables",
                                          "skip_execution": false,
                                          "variables_to_update": [
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH67UG6tNshkU1XX1IhpRdaDKoSk$",
                                              "variable_value_new": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH67UG6tNshkU1XX1IhpRdaDKoSk$\n-----------------------------------------\nPort Results for Device $activity.definition_activity_02OSH0FRX1GV62OnJk3kd4kGZtqjWZZ0RrH.input.source_array[@].serial$:$activity.definition_activity_02OUB3133VQFY4wRPzQNYkBhdIasAtg1FZq.output.variable_workflow_02OSQ4SZ13DFA2R2Ada5e6FxaPhIMdlBIsV$"
                                            },
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OVAUE5K5HTV5uXMtOsM1DqSZLgQ2RnqPw$",
                                              "variable_value_new": "$activity.definition_activity_02OUB3133VQFY4wRPzQNYkBhdIasAtg1FZq.output.variable_workflow_02OUBEE9A6VVN281EmeXky7NgoFzUHHNLSA$"
                                            }
                                          ]
                                        },
                                        "object_type": "definition_activity"
                                      }
                                    ]
                                  },
                                  {
                                    "unique_name": "definition_activity_02OXWGDQVWOM70vpeVQXhx4lS76lbe20KMu",
                                    "name": "Condition Branch",
                                    "title": "Appliance Device",
                                    "type": "logic.condition_block",
                                    "base_type": "activity",
                                    "properties": {
                                      "condition": {
                                        "left_operand": "$activity.definition_activity_02OSH0FRX1GV62OnJk3kd4kGZtqjWZZ0RrH.input.source_array[@].productType$",
                                        "operator": "eq",
                                        "right_operand": "appliance"
                                      },
                                      "continue_on_failure": false,
                                      "description": "Checks specific for Appliance Device.",
                                      "display_name": "Appliance Device",
                                      "skip_execution": false
                                    },
                                    "object_type": "definition_activity",
                                    "actions": [
                                      {
                                        "unique_name": "definition_activity_02OXWIJ1O91WM0x0JAqELcSZsakYPe0PBpW",
                                        "name": "Appliance Device Checklist",
                                        "title": "Appliance Device Checklist",
                                        "type": "workflow.sub_workflow",
                                        "base_type": "subworkflow",
                                        "properties": {
                                          "continue_on_failure": false,
                                          "description": "A checklist of tests for Appliance Devices to check the WAN1 and WAN2 status.",
                                          "display_name": "Appliance Device Checklist",
                                          "input": {
                                            "variable_workflow_02OW90BNU6RGR2sRw9V8mpUdcFHtno0Tzr1": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.input.variable_workflow_02OSH0EYH5X847in0cURERDBFdelXTn7emS$",
                                            "variable_workflow_02OW90BNU8SSI0EGYz5IvpmHtXPCrrDflZf": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OYL9O8S2J1M64pTd5hwVWPck79byWj7mh$",
                                            "variable_workflow_02OX2E0ZJY3CQ0rjE7DzFKgJg00G5pKPPcg": "$activity.definition_activity_02OSH0FRX1GV62OnJk3kd4kGZtqjWZZ0RrH.input.source_array[@].serial$"
                                          },
                                          "runtime_user": {
                                            "target_default": true
                                          },
                                          "skip_execution": false,
                                          "target": {
                                            "target_type": "meraki.endpoint",
                                            "use_workflow_target": true
                                          },
                                          "workflow_id": "definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A",
                                          "workflow_name": "Appliance Device Checklist"
                                        },
                                        "object_type": "definition_activity"
                                      },
                                      {
                                        "unique_name": "definition_activity_02OXWGDR2IAZ91SPiylLSieYlFtE6X2Yr2x",
                                        "name": "Set Variables",
                                        "title": "Set Variables",
                                        "type": "core.set_multiple_variables",
                                        "base_type": "activity",
                                        "properties": {
                                          "continue_on_failure": false,
                                          "description": "Set Variables",
                                          "display_name": "Set Variables",
                                          "skip_execution": false,
                                          "variables_to_update": [
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH67UG6tNshkU1XX1IhpRdaDKoSk$",
                                              "variable_value_new": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH67UG6tNshkU1XX1IhpRdaDKoSk$\n-----------------------------------------\nAppliance Device Type Results for Device $activity.definition_activity_02OSH0FRX1GV62OnJk3kd4kGZtqjWZZ0RrH.input.source_array[@].serial$:$activity.definition_activity_02OXWIJ1O91WM0x0JAqELcSZsakYPe0PBpW.output.variable_workflow_02OW90BNU85CG6GlfVy7LEIuc4DaUMT1WBN$"
                                            },
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OVAUE5K5HTV5uXMtOsM1DqSZLgQ2RnqPw$",
                                              "variable_value_new": "$activity.definition_activity_02OXWIJ1O91WM0x0JAqELcSZsakYPe0PBpW.output.variable_workflow_02OYMGR422F0X0JcMEzRemH49EIImB4hM09$"
                                            }
                                          ]
                                        },
                                        "object_type": "definition_activity"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "unique_name": "definition_activity_02OSH0H1XT3WB77cILGBr2P6dtWzkt41CSS",
                            "name": "Group",
                            "title": "Summarize Results",
                            "type": "logic.group",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "description": "Summarize test results to output variables.",
                              "display_as_suggestion": false,
                              "display_name": "Summarize Results",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02OSH0H3FSE4K1qK4AzlBqIr04ukknwTRm7",
                                "name": "Condition Block",
                                "title": "All Checks Passed?",
                                "type": "logic.if_else",
                                "base_type": "activity",
                                "properties": {
                                  "conditions": [],
                                  "continue_on_failure": false,
                                  "description": "Set AP Check Status as Passed when AP is Online and AP is assigned to valid VLAN and AP has a proper IP assignment.",
                                  "display_name": "All Checks Passed?",
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity",
                                "blocks": [
                                  {
                                    "unique_name": "definition_activity_02OSH0H4CEBTV7jpR6A4YDQD2E2ScjtDe8v",
                                    "name": "Condition Branch",
                                    "title": "Passed",
                                    "type": "logic.condition_block",
                                    "base_type": "activity",
                                    "properties": {
                                      "condition": {
                                        "left_operand": {
                                          "left_operand": {
                                            "left_operand": {
                                              "left_operand": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH30X961rApId7NKu66pme36xkaf$",
                                              "operator": "eq",
                                              "right_operand": true
                                            },
                                            "operator": "and",
                                            "right_operand": {
                                              "left_operand": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH46U65yK8bMOP16CRXnPSKKiruX$",
                                              "operator": "eq",
                                              "right_operand": true
                                            }
                                          },
                                          "operator": "and",
                                          "right_operand": {
                                            "left_operand": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH3IDZ1a7F8J9jsVlXBuG8XxLFb0$",
                                            "operator": "eq",
                                            "right_operand": true
                                          }
                                        },
                                        "operator": "and",
                                        "right_operand": {
                                          "left_operand": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OVAUE5K5HTV5uXMtOsM1DqSZLgQ2RnqPw$",
                                          "operator": "eq",
                                          "right_operand": true
                                        }
                                      },
                                      "continue_on_failure": false,
                                      "display_name": "Passed",
                                      "skip_execution": false
                                    },
                                    "object_type": "definition_activity",
                                    "actions": [
                                      {
                                        "unique_name": "definition_activity_02OSH0H5WJEWK0VcIgQoNoLN45a3AAJ0r2O",
                                        "name": "Set Variables",
                                        "title": "Set Variables",
                                        "type": "core.set_multiple_variables",
                                        "base_type": "activity",
                                        "properties": {
                                          "continue_on_failure": false,
                                          "description": "Set Variables",
                                          "display_name": "Set Variables",
                                          "skip_execution": false,
                                          "variables_to_update": [
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.output.variable_workflow_02OSH0EYH3NKG1nwlsglE3wubPeEjcgZGO5$",
                                              "variable_value_new": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.output.variable_workflow_02OSH0EYH3NKG1nwlsglE3wubPeEjcgZGO5$\nDevice $activity.definition_activity_02OSH0FRX1GV62OnJk3kd4kGZtqjWZZ0RrH.input.source_array[@].serial$ ( $activity.definition_activity_02OSH0FRX1GV62OnJk3kd4kGZtqjWZZ0RrH.input.source_array[@].name$ ) Model: $activity.definition_activity_02OSH0FRX1GV62OnJk3kd4kGZtqjWZZ0RrH.input.source_array[@].model$ Status Pased, Notes $workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH67UG6tNshkU1XX1IhpRdaDKoSk$ "
                                            }
                                          ]
                                        },
                                        "object_type": "definition_activity"
                                      }
                                    ]
                                  },
                                  {
                                    "unique_name": "definition_activity_02OSH0H77GVOH0bgaIJphyEAX8QQtNP7BKu",
                                    "name": "Condition Branch",
                                    "title": "Failed",
                                    "type": "logic.condition_block",
                                    "base_type": "activity",
                                    "properties": {
                                      "condition": {
                                        "left_operand": {
                                          "left_operand": {
                                            "left_operand": {
                                              "left_operand": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH30X961rApId7NKu66pme36xkaf$",
                                              "operator": "ne",
                                              "right_operand": true
                                            },
                                            "operator": "or",
                                            "right_operand": {
                                              "left_operand": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH46U65yK8bMOP16CRXnPSKKiruX$",
                                              "operator": "ne",
                                              "right_operand": true
                                            }
                                          },
                                          "operator": "or",
                                          "right_operand": {
                                            "left_operand": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH3IDZ1a7F8J9jsVlXBuG8XxLFb0$",
                                            "operator": "ne",
                                            "right_operand": true
                                          }
                                        },
                                        "operator": "or",
                                        "right_operand": {
                                          "left_operand": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OVAUE5K5HTV5uXMtOsM1DqSZLgQ2RnqPw$",
                                          "operator": "ne",
                                          "right_operand": true
                                        }
                                      },
                                      "continue_on_failure": false,
                                      "display_name": "Failed",
                                      "skip_execution": false
                                    },
                                    "object_type": "definition_activity",
                                    "actions": [
                                      {
                                        "unique_name": "definition_activity_02OVHMP9NIS1G6op619IwtLH9HdfaKGzyMI",
                                        "name": "Set Variables",
                                        "title": "Set Variables",
                                        "type": "core.set_multiple_variables",
                                        "base_type": "activity",
                                        "properties": {
                                          "continue_on_failure": false,
                                          "description": "Set Variables",
                                          "display_name": "Set Variables",
                                          "skip_execution": false,
                                          "variables_to_update": [
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.output.variable_workflow_02OSH0EYH3NKG1nwlsglE3wubPeEjcgZGO5$",
                                              "variable_value_new": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.output.variable_workflow_02OSH0EYH3NKG1nwlsglE3wubPeEjcgZGO5$\nDevice $activity.definition_activity_02OSH0FRX1GV62OnJk3kd4kGZtqjWZZ0RrH.input.source_array[@].serial$ ( $activity.definition_activity_02OSH0FRX1GV62OnJk3kd4kGZtqjWZZ0RrH.input.source_array[@].name$ ) Model: $activity.definition_activity_02OSH0FRX1GV62OnJk3kd4kGZtqjWZZ0RrH.input.source_array[@].model$ Status Failed, Notes $workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH67UG6tNshkU1XX1IhpRdaDKoSk$ "
                                            }
                                          ]
                                        },
                                        "object_type": "definition_activity"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "unique_name": "definition_activity_02OSH0HA8BONY1wz61CKwY94IRkVOyNF75b",
                                "name": "Set Variables",
                                "title": "Reset Variables",
                                "type": "core.set_multiple_variables",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "description": "Set Variables",
                                  "display_name": "Reset Variables",
                                  "skip_execution": false,
                                  "variables_to_update": [
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH30X961rApId7NKu66pme36xkaf$",
                                      "variable_value_new": false
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH46U65yK8bMOP16CRXnPSKKiruX$",
                                      "variable_value_new": false
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH3IDZ1a7F8J9jsVlXBuG8XxLFb0$",
                                      "variable_value_new": false
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OSH0EYH67UG6tNshkU1XX1IhpRdaDKoSk$",
                                      "variable_value_new": ""
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui.local.variable_workflow_02OVAUE5K5HTV5uXMtOsM1DqSZLgQ2RnqPw$",
                                      "variable_value_new": false
                                    }
                                  ]
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "categories": [
          "category_02P1ZHJAQ54XV1zJuzEtLLMo66BUJZWb5Dm"
        ]
      },
      "subworkflows": [
        {
          "workflow": {
            "unique_name": "definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k",
            "name": "Switch Port Checklist",
            "title": "Switch Port Checklist",
            "type": "generic.workflow",
            "base_type": "workflow",
            "variables": [
              {
                "schema_id": "datatype.boolean",
                "properties": {
                  "value": true,
                  "scope": "output",
                  "name": "All Checks Passed",
                  "type": "datatype.boolean",
                  "description": "An Output variable set to True by default and False when any one of the checks has a failed.",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02OUBEE9A6VVN281EmeXky7NgoFzUHHNLSA",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.boolean",
                "properties": {
                  "value": false,
                  "scope": "local",
                  "name": "Is Port Config Valid",
                  "type": "datatype.boolean",
                  "description": "A local boolean to keep track if the Port based on the Tag type has valid configuration.\n",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02OTS5LK1BP0W0rbjLJ3EeMOZRBpTNEVinO",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "local",
                  "name": "Port Config Diffs",
                  "type": "datatype.string",
                  "description": "Collects differences in the config from the currently configured values with the expected values based on the port tag type.",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "text"
                },
                "unique_name": "variable_workflow_02OTQU99WJZAG5t9ELftUc5GHXFpYoqGYDB",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.integer",
                "properties": {
                  "value": 0,
                  "scope": "output",
                  "name": "Status Code",
                  "type": "datatype.integer",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02OSQ4SZ14R476Gtjo5WnSKMK2UyGx5H1ac",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "{\n  \"enabled\": true,\n  \"poeEnabled\": false,\n  \"type\": \"trunk\",\n  \"vlan\": 1,\n  \"voiceVlan\": null,\n  \"allowedVlans\": \"all\",\n  \"isolationEnabled\": false,\n  \"rstpEnabled\": true,\n  \"stpGuard\": \"root guard\",\n  \"linkNegotiation\": \"Auto negotiate\",\n  \"portScheduleId\": null,\n  \"udld\": \"Alert only\",\n  \"accessPolicyType\": \"Open\",\n  \"daiTrusted\": false\n}",
                  "scope": "static",
                  "name": "Expected Downlink Port Values",
                  "type": "datatype.string",
                  "description": "Provide the configuration for the Config Tag type to check for compliance.",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "json"
                },
                "unique_name": "variable_workflow_02OSWEYI15TMC7NvoZ3bDoUv3qBFnl0Brpt",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "output",
                  "name": "Status Message",
                  "type": "datatype.string",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "text"
                },
                "unique_name": "variable_workflow_02OSQ4SZ16E7V6A4fBN7TrAzm5jgkiyTg7I",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.boolean",
                "properties": {
                  "value": false,
                  "scope": "local",
                  "name": "is Uplink",
                  "type": "datatype.boolean",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02OTR2MOE966H0qNienRbQbFyTqIyUP1cPw",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "{\n  \"enabled\": true,\n  \"poeEnabled\": true,\n  \"type\": \"access\",\n  \"vlan\": 50,\n  \"voiceVlan\": 20,\n  \"allowedVlans\": \"all\",\n  \"isolationEnabled\": false,\n  \"rstpEnabled\": true,\n  \"stpGuard\": \"bpdu guard\",\n  \"linkNegotiation\": \"Auto negotiate\",\n  \"portScheduleId\": null,\n  \"udld\": \"Alert only\",\n  \"accessPolicyType\": \"Open\",\n  \"daiTrusted\": false\n}",
                  "scope": "static",
                  "name": "Expected Guest Port Values",
                  "type": "datatype.string",
                  "description": "Provide the configuration for the Config Tag type to check for compliance.",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "json"
                },
                "unique_name": "variable_workflow_02OSWLDP0S8780qQjkKMKEMBjuHP8nO01UU",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "{\n  \"enabled\": true,\n  \"poeEnabled\": false,\n  \"type\": \"trunk\",\n  \"vlan\": 1,\n  \"voiceVlan\": null,\n  \"allowedVlans\": \"all\",\n  \"isolationEnabled\": false,\n  \"rstpEnabled\": true,\n  \"stpGuard\": \"disabled\",\n  \"linkNegotiation\": \"Auto negotiate\",\n  \"portScheduleId\": null,\n  \"udld\": \"Alert only\",\n  \"accessPolicyType\": \"Open\",\n  \"daiTrusted\": false\n}",
                  "scope": "static",
                  "name": "Expected Uplink Port Values",
                  "type": "datatype.string",
                  "description": "Define the definition for expected value for an Uplink Port. Uplink is a Tag set for Switchport. ",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "json"
                },
                "unique_name": "variable_workflow_02OSWDY78T23H0HB190wDvT85gVbUzW3xGy",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "[]",
                  "scope": "input",
                  "name": "Device Switch Port Status",
                  "type": "datatype.string",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "json"
                },
                "unique_name": "variable_workflow_02OSTXDMHPW987Ut0LbYBiQcXPLCdU4zcXo",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "[]",
                  "scope": "input",
                  "name": "Device Switch Ports",
                  "type": "datatype.string",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "json"
                },
                "unique_name": "variable_workflow_02OSTX4IJXUVQ1ErCcHPEYAdFNtEBoOuxV7",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "output",
                  "name": "Error Message",
                  "type": "datatype.string",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02OSQ4SZ15JV56xAmall2xlQLUQy9jkBAMx",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "{\n  \"enabled\": true,\n  \"poeEnabled\": true,\n  \"type\": \"access\",\n  \"vlan\": 20,\n  \"voiceVlan\": 20,\n  \"allowedVlans\": \"all\",\n  \"isolationEnabled\": false,\n  \"rstpEnabled\": true,\n  \"stpGuard\": \"bpdu guard\",\n  \"linkNegotiation\": \"Auto negotiate\",\n  \"portScheduleId\": null,\n  \"udld\": \"Alert only\",\n  \"accessPolicyType\": \"Open\",\n  \"daiTrusted\": false\n}",
                  "scope": "static",
                  "name": "Expected Voice Port Values",
                  "type": "datatype.string",
                  "description": "Provide the configuration for the Config Tag type to check for compliance.",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "json"
                },
                "unique_name": "variable_workflow_02OSWFPJK1YT02o8cncSmrcgytKnERS84Os",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "input",
                  "name": "Device Serial",
                  "type": "datatype.string",
                  "description": "Input Device Serial to check for compliance.",
                  "is_required": true,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "text"
                },
                "unique_name": "variable_workflow_02OSTQONV63BG3y7iKPWJ2N3WZ4CFZNZw5a",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "local",
                  "name": "Switchports Status JSON",
                  "type": "datatype.string",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "json"
                },
                "unique_name": "variable_workflow_02OSTU160R28N2WyNLWRUdyU4Rf9ISc6kNQ",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "local",
                  "name": "Switchports JSON",
                  "type": "datatype.string",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "json"
                },
                "unique_name": "variable_workflow_02OSTTI2P773Q2F2LwEf3pRsuvjvoTuYM9P",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "output",
                  "name": "Result",
                  "type": "datatype.string",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "text"
                },
                "unique_name": "variable_workflow_02OSQ4SZ13DFA2R2Ada5e6FxaPhIMdlBIsV",
                "object_type": "variable_workflow"
              }
            ],
            "properties": {
              "atomic": {
                "is_atomic": false
              },
              "delete_workflow_instance": false,
              "description": "A checklist of tests for Switch Ports.\n\nLookup Switch Ports for the Input Device Serial.\nIterate Switch Ports and compare the configured values match with the expected values.\nExpected values are set as Workflow static variables for each Config type.\nSummarize output results.\n",
              "display_name": "Switch Port Checklist",
              "runtime_user": {
                "target_default": true
              },
              "target": {
                "target_type": "meraki.endpoint",
                "specify_on_workflow_start": true
              }
            },
            "object_type": "definition_workflow",
            "actions": [
              {
                "unique_name": "definition_activity_02OSQ4T3AQ0PY5GbO7B5i7NaXRW4dR4fr6D",
                "name": "Group",
                "title": "Process Inputs",
                "type": "logic.group",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "description": "Checks on the status of passed in inputs. If inputs are not provided make needed API calls. \nStores the results in temporary tables. ",
                  "display_as_suggestion": false,
                  "display_name": "Process Inputs",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02OSQ4T4Z9TXP5O9a6uEcy0wOI4BrV1ilIR",
                    "name": "Condition Block",
                    "title": "Are Inputs provided?",
                    "type": "logic.if_else",
                    "base_type": "activity",
                    "properties": {
                      "conditions": [],
                      "continue_on_failure": false,
                      "description": "For optimization purposes, check if Inputs passed in from other workflows. Only when inputs like Devices List, Device Status List, VLAN List are not passed in as Input - perform lookup with the workflow.",
                      "display_name": "Are Inputs provided?",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "blocks": [
                      {
                        "unique_name": "definition_activity_02OSQ4T60BN8D5Uf4eUnDlN9LPFBoJGWLyZ",
                        "name": "Condition Branch",
                        "title": "Not Enough Inputs",
                        "type": "logic.condition_block",
                        "base_type": "activity",
                        "properties": {
                          "condition": {
                            "left_operand": {
                              "left_operand": {
                                "left_operand": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.input.variable_workflow_02OSTQONV63BG3y7iKPWJ2N3WZ4CFZNZw5a$",
                                "operator": "eq",
                                "right_operand": ""
                              },
                              "operator": "and",
                              "right_operand": {
                                "left_operand": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.input.variable_workflow_02OSTXDMHPW987Ut0LbYBiQcXPLCdU4zcXo$",
                                "operator": "eq",
                                "right_operand": "[]"
                              }
                            },
                            "operator": "and",
                            "right_operand": {
                              "left_operand": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.input.variable_workflow_02OSTX4IJXUVQ1ErCcHPEYAdFNtEBoOuxV7$",
                              "operator": "eq",
                              "right_operand": "[]"
                            }
                          },
                          "continue_on_failure": false,
                          "display_name": "Not Enough Inputs",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02OSQ4T78V2W809Ggm4epRNpcglCS8rZDEV",
                            "name": "Set Variables",
                            "title": "Set Variables",
                            "type": "core.set_multiple_variables",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "description": "Set Variables",
                              "display_name": "Set Variables",
                              "skip_execution": false,
                              "variables_to_update": [
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.output.variable_workflow_02OSQ4SZ13DFA2R2Ada5e6FxaPhIMdlBIsV$",
                                  "variable_value_new": "Not Enough Inputs to proceed.\nPlease provide all required inputs: \nDevice Serial to perform API calls.\nor provide Device Switch Ports and Device Switch Port Status JSON. "
                                }
                              ]
                            },
                            "object_type": "definition_activity"
                          }
                        ]
                      },
                      {
                        "unique_name": "definition_activity_02OSQ4T88MD0F6puMbVv7XwcDn9O7ghvAvH",
                        "name": "Condition Branch",
                        "title": "No, execute API calls",
                        "type": "logic.condition_block",
                        "base_type": "activity",
                        "properties": {
                          "condition": {
                            "left_operand": {
                              "left_operand": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.input.variable_workflow_02OSTXDMHPW987Ut0LbYBiQcXPLCdU4zcXo$",
                              "operator": "eq",
                              "right_operand": "[]"
                            },
                            "operator": "and",
                            "right_operand": {
                              "left_operand": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.input.variable_workflow_02OSTX4IJXUVQ1ErCcHPEYAdFNtEBoOuxV7$",
                              "operator": "eq",
                              "right_operand": "[]"
                            }
                          },
                          "continue_on_failure": false,
                          "display_name": "No, execute API calls",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02OSTQP3FQBEO5Dt9UGw3ofWeB6H8UEz7LX",
                            "name": "Meraki - Get Device Switch Ports",
                            "title": "Meraki - Get Device Switch Ports",
                            "type": "workflow.atomic_workflow",
                            "base_type": "subworkflow",
                            "properties": {
                              "continue_on_failure": false,
                              "description": "Retrieve switch port information for a specific Meraki device.",
                              "display_name": "Meraki - Get Device Switch Ports",
                              "input": {
                                "variable_workflow_02LLUYO8DV17A22l9lor4ttg6i8GspwoAVk": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.input.variable_workflow_02OSTQONV63BG3y7iKPWJ2N3WZ4CFZNZw5a$"
                              },
                              "runtime_user": {
                                "target_default": true
                              },
                              "skip_execution": false,
                              "target": {
                                "target_type": "meraki.endpoint",
                                "use_workflow_target": true
                              },
                              "workflow_id": "definition_workflow_02LLUYO87CIIF2MYkTzJpsPsYYOXZ5MUPA1",
                              "workflow_name": "Meraki - Get Device Switch Ports"
                            },
                            "object_type": "definition_activity"
                          },
                          {
                            "unique_name": "definition_activity_02OSTQP5B5WJM68zqDy8mbiwsnAe9lFVyyd",
                            "name": "Meraki - Get Switch Port Status",
                            "title": "Meraki - Get Switch Port Status",
                            "type": "workflow.atomic_workflow",
                            "base_type": "subworkflow",
                            "properties": {
                              "continue_on_failure": false,
                              "description": "Retrieve status for a specific switch port on a Meraki device.",
                              "display_name": "Meraki - Get Switch Port Status",
                              "input": {
                                "variable_workflow_02LLUYO8DV17A22l9lor4ttg6i8GspwoAVk": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.input.variable_workflow_02OSTQONV63BG3y7iKPWJ2N3WZ4CFZNZw5a$"
                              },
                              "runtime_user": {
                                "target_default": true
                              },
                              "skip_execution": false,
                              "target": {
                                "target_type": "meraki.endpoint",
                                "use_workflow_target": true
                              },
                              "workflow_id": "definition_workflow_02LLUYO87CIIF2MYkTzJpsPsYYOXZ5MUPA1",
                              "workflow_name": "Meraki - Get Device Switch Ports"
                            },
                            "object_type": "definition_activity"
                          },
                          {
                            "unique_name": "definition_activity_02OSQ4TICEXB76cB44j3zrvi2tC7RPIjebt",
                            "name": "Set Variables",
                            "title": "Set Variables",
                            "type": "core.set_multiple_variables",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "description": "Set Variables",
                              "display_name": "Set Variables",
                              "skip_execution": false,
                              "variables_to_update": [
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.local.variable_workflow_02OSTTI2P773Q2F2LwEf3pRsuvjvoTuYM9P$",
                                  "variable_value_new": "$activity.definition_activity_02OSTQP3FQBEO5Dt9UGw3ofWeB6H8UEz7LX.output.variable_workflow_02LLUYO8DUAUK5cdNbWcLbEsrzMeC5jahEc$"
                                },
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.local.variable_workflow_02OSTU160R28N2WyNLWRUdyU4Rf9ISc6kNQ$",
                                  "variable_value_new": "$activity.definition_activity_02OSTQP5B5WJM68zqDy8mbiwsnAe9lFVyyd.output.variable_workflow_02LLUYO8DUAUK5cdNbWcLbEsrzMeC5jahEc$"
                                }
                              ]
                            },
                            "object_type": "definition_activity"
                          }
                        ]
                      },
                      {
                        "unique_name": "definition_activity_02OSQ4TJXXFGK2e2v453THHu0JByWVXGTed",
                        "name": "Condition Branch",
                        "title": "Yes, Use Inputs",
                        "type": "logic.condition_block",
                        "base_type": "activity",
                        "properties": {
                          "condition": {
                            "left_operand": {
                              "left_operand": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.input.variable_workflow_02OSTXDMHPW987Ut0LbYBiQcXPLCdU4zcXo$",
                              "operator": "ne",
                              "right_operand": "[]"
                            },
                            "operator": "and",
                            "right_operand": {
                              "left_operand": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.input.variable_workflow_02OSTX4IJXUVQ1ErCcHPEYAdFNtEBoOuxV7$",
                              "operator": "ne",
                              "right_operand": "[]"
                            }
                          },
                          "continue_on_failure": false,
                          "display_name": "Yes, Use Inputs",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02OSQ4TLLX1F80xQDRaHjO7UgMuWEF0FVAw",
                            "name": "Set Variables",
                            "title": "Set Variables",
                            "type": "core.set_multiple_variables",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "description": "Set Variables",
                              "display_name": "Set Variables",
                              "skip_execution": false,
                              "variables_to_update": [
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.local.variable_workflow_02OSTTI2P773Q2F2LwEf3pRsuvjvoTuYM9P$",
                                  "variable_value_new": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.input.variable_workflow_02OSTX4IJXUVQ1ErCcHPEYAdFNtEBoOuxV7$"
                                },
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.local.variable_workflow_02OSTU160R28N2WyNLWRUdyU4Rf9ISc6kNQ$",
                                  "variable_value_new": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.input.variable_workflow_02OSTXDMHPW987Ut0LbYBiQcXPLCdU4zcXo$"
                                }
                              ]
                            },
                            "object_type": "definition_activity"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "unique_name": "definition_activity_02OSQ4TMLMGH07KGCnzwYoJeXFw2JoPxIW6",
                    "name": "Read Table from JSON",
                    "title": "Read Switch Ports from JSON",
                    "type": "corejava.read_table_from_json",
                    "base_type": "activity",
                    "properties": {
                      "action_timeout": 180,
                      "continue_on_failure": false,
                      "description": "Reading table data from JSON",
                      "display_name": "Read Switch Ports from JSON",
                      "input_json": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.local.variable_workflow_02OSTTI2P773Q2F2LwEf3pRsuvjvoTuYM9P$",
                      "jsonpath_query": "$.*",
                      "persist_output": true,
                      "populate_columns": false,
                      "skip_execution": false,
                      "table_columns": [
                        {
                          "column_name": "portId",
                          "column_type": "string"
                        },
                        {
                          "column_name": "name",
                          "column_type": "string"
                        },
                        {
                          "column_name": "tags",
                          "column_type": "string"
                        },
                        {
                          "column_name": "enabled",
                          "column_type": "boolean"
                        },
                        {
                          "column_name": "poeEnabled",
                          "column_type": "boolean"
                        },
                        {
                          "column_name": "type",
                          "column_type": "string"
                        },
                        {
                          "column_name": "vlan",
                          "column_type": "integer"
                        },
                        {
                          "column_name": "voiceVlan",
                          "column_type": "string"
                        },
                        {
                          "column_name": "allowedVlans",
                          "column_type": "string"
                        },
                        {
                          "column_name": "isolationEnabled",
                          "column_type": "boolean"
                        },
                        {
                          "column_name": "rstpEnabled",
                          "column_type": "boolean"
                        },
                        {
                          "column_name": "stpGuard",
                          "column_type": "string"
                        },
                        {
                          "column_name": "linkNegotiation",
                          "column_type": "string"
                        },
                        {
                          "column_name": "portScheduleId",
                          "column_type": "string"
                        },
                        {
                          "column_name": "udld",
                          "column_type": "string"
                        },
                        {
                          "column_name": "accessPolicyType",
                          "column_type": "string"
                        },
                        {
                          "column_name": "accessPolicyNumber",
                          "column_type": "string"
                        },
                        {
                          "column_name": "daiTrusted",
                          "column_type": "boolean"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02OSQ4TQWGH6S0PaW4e3lOlYsvOpkpkD4SE",
                    "name": "Read Table from JSON",
                    "title": "Read Switch Port Status from JSON",
                    "type": "corejava.read_table_from_json",
                    "base_type": "activity",
                    "properties": {
                      "action_timeout": 180,
                      "continue_on_failure": false,
                      "description": "Reading table data from JSON",
                      "display_name": "Read Switch Port Status from JSON",
                      "input_json": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.local.variable_workflow_02OSTU160R28N2WyNLWRUdyU4Rf9ISc6kNQ$",
                      "jsonpath_query": "$.*",
                      "persist_output": true,
                      "populate_columns": false,
                      "skip_execution": false,
                      "table_columns": [
                        {
                          "column_name": "portId",
                          "column_type": "string"
                        },
                        {
                          "column_name": "status",
                          "column_type": "string"
                        },
                        {
                          "column_name": "isUplink",
                          "column_type": "boolean"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  }
                ]
              },
              {
                "unique_name": "definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG",
                "name": "For Each",
                "title": "For Each Switch Port",
                "type": "logic.for_each",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "description": "ForEach block",
                  "display_name": "For Each Switch Port",
                  "skip_execution": false,
                  "source_array": "$activity.definition_activity_02OSQ4TMLMGH07KGCnzwYoJeXFw2JoPxIW6.output.read_table_from_json$"
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02OSVBDFWPF6N0tWlJ59rYoF0OFjFeew8PR",
                    "name": "Group",
                    "title": "Port Check",
                    "type": "logic.group",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "description": "Group",
                      "display_as_suggestion": false,
                      "display_name": "Port Check",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_02OSWY17QW7IR4iNdIHFWCdlMEu8XQBrA6m",
                        "name": "Select from Table",
                        "title": "Select Status for Port",
                        "type": "core.selectfromtable",
                        "base_type": "activity",
                        "properties": {
                          "action_timeout": 180,
                          "columns": [
                            {
                              "column_name": "isUplink",
                              "column_type": "boolean"
                            }
                          ],
                          "continue_on_failure": false,
                          "description": "Select from Table",
                          "display_name": "Select Status for Port",
                          "input_table": "$activity.definition_activity_02OSQ4TQWGH6S0PaW4e3lOlYsvOpkpkD4SE.output.read_table_from_json$",
                          "number_of_rows": {
                            "all_rows": true
                          },
                          "persist_output": true,
                          "skip_execution": false,
                          "sorting": {
                            "no_sort": true
                          },
                          "where_clause": "portId = '$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].portId$'"
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_02OTBXH0OKJVC5lzM6Cd9vrNbbbvV4fQSVb",
                        "name": "Condition Block",
                        "title": "Check Config based on Tag type",
                        "type": "logic.if_else",
                        "base_type": "activity",
                        "properties": {
                          "conditions": [],
                          "continue_on_failure": false,
                          "description": "This checks if the one of the Port Tags in marked as Uplink, Downlink, Guest, Voice and validates individual config value match with the expected values for that type.\nExpected config values are configured as static workflow variables.",
                          "display_name": "Check Config based on Tag type",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "blocks": [
                          {
                            "unique_name": "definition_activity_02OTBXH23CHZM4X3Y8EyvtUwoNJ5x7LkJIW",
                            "name": "Condition Branch",
                            "title": "Uplink Tag \u0026 Uplink Status",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].tags$",
                                "operator": "mw",
                                "right_operand": "*Uplink*"
                              },
                              "continue_on_failure": false,
                              "description": "This checks if the one of the Port Tags in marked as Uplink, Downlink, Guest, Voice and validates individual config value match with the expected values for that type.\nExpected config values are configured as static workflow variables.",
                              "display_name": "Uplink Tag \u0026 Uplink Status",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02OSX0NBC348R1Pb6KTAUJF94e9Qc5sOuLK",
                                "name": "Execute Python Script",
                                "title": "Validate Uplink Config",
                                "type": "python3.script",
                                "base_type": "activity",
                                "properties": {
                                  "action_timeout": 180,
                                  "continue_on_failure": false,
                                  "description": "Checks if the Port has valid config expected for an Uplink Port. \n1. Prepares a JSON string for the current Port with specific attributes.\n2. Compares it with the expected Uplink values defined in Workflow Input.\n3. If values match (does string comparison) set Notes.",
                                  "display_name": "Validate Uplink Config",
                                  "script": "import json\nimport sys\n\n(expectedConfigValues, enabled, poeEnabled, ptype, vlan, voiceVlan, allowedVlans, isolationEnabled, rstpEnabled, stpGuard, linkNegotiation, portScheduleId, udld, accessPolicyType, daiTrusted ) = sys.argv[1:16]\n\ndef str_to_bool(s):\n    return s.lower() == 'true'\n\ndef str_to_none(s):\n    return None if s.lower() == 'null' or s.lower() == '' else s\n\ndef str_to_int_or_none(s):\n    if s.lower() == 'null' or s.lower() == '':\n        return None\n    try:\n        return int(s)\n    except ValueError:\n        return s\n\ndef create_switchport_json(\n    enabled,\n    poeEnabled,\n    ptype,\n    vlan,\n    voiceVlan,\n    allowedVlans,\n    isolationEnabled,\n    rstpEnabled,\n    stpGuard,\n    linkNegotiation,\n    portScheduleId,\n    udld,\n    accessPolicyType,\n    daiTrusted\n):\n    data = {\n        \"enabled\": enabled,\n        \"poeEnabled\": poeEnabled,\n        \"type\": ptype,\n        \"vlan\": vlan,\n        \"voiceVlan\": voiceVlan,\n        \"allowedVlans\": allowedVlans,\n        \"isolationEnabled\": isolationEnabled,\n        \"rstpEnabled\": rstpEnabled,\n        \"stpGuard\": stpGuard,\n        \"linkNegotiation\": linkNegotiation,\n        \"portScheduleId\": portScheduleId,\n        \"udld\": udld,\n        \"accessPolicyType\": accessPolicyType,\n        \"daiTrusted\": daiTrusted\n    }\n    return json.dumps(data, indent=4)\n\ndef normalize_values_to_str(d):\n    # Recursively convert all values to string\n    if isinstance(d, dict):\n        return {k: normalize_values_to_str(v) for k, v in d.items()}\n    elif isinstance(d, list):\n        return [normalize_values_to_str(v) for v in d]\n    else:\n        return str(d)\n\ndef compare_dicts(dict1, dict2):\n    differences = {}\n    all_keys = set(dict1.keys()) | set(dict2.keys())\n    for key in all_keys:\n        val1 = dict1.get(key, '\u003cmissing\u003e')\n        val2 = dict2.get(key, '\u003cmissing\u003e')\n        if val1 != val2:\n            differences[key] = {'expected': val1, 'got': val2}\n    return differences\n\ndef compare_ports(json_str1, json_str2):\n    \"\"\"\n    Compares two JSON strings by first parsing them into Python objects,\n    \"\"\"\n    try:\n        # Parse strings into Python objects\n        obj1 = json.loads(json_str1)\n        obj2 = json.loads(json_str2)\n\n        norm1 = normalize_values_to_str(obj1)\n        norm2 = normalize_values_to_str(obj2)\n\n        diffs = compare_dicts(norm1, norm2)\n\n        # Print the current_port_json constructed\n        # print(\"Current Port JSON\")\n        # print(json.dumps(norm1, indent=2))\n\n        # print(\"Expected Port JSON\")\n        # print(json.dumps(norm2, indent=2))\n\n        print(\"Diffs\")\n        print(json.dumps(diffs, indent=2))\n\n        return diffs\n\n    except json.JSONDecodeError as e:\n        print(f\"Error decoding JSON: {e}\")\n        return {}\n\n# convert the bool, int, null to string and none\nenabled = str_to_bool(enabled)\npoeEnabled = str_to_bool(poeEnabled)\nisolationEnabled = str_to_bool(isolationEnabled)\nrstpEnabled = str_to_bool(rstpEnabled)\ndaiTrusted = str_to_bool(daiTrusted)\nvlan = str_to_int_or_none(vlan)\nvoiceVlan = str_to_int_or_none(voiceVlan)\nportScheduleId = str_to_none(portScheduleId)\n\n# create a json for the current port\ncurrent_port_json = create_switchport_json(enabled, poeEnabled, ptype, vlan, voiceVlan, allowedVlans, isolationEnabled, rstpEnabled, stpGuard, linkNegotiation, portScheduleId, udld, accessPolicyType, daiTrusted )\n\n# do a dict comparison\ndiffs = compare_ports(current_port_json, expectedConfigValues)\n\nis_match = not bool(diffs)\n",
                                  "script_arguments": [
                                    "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.static.variable_workflow_02OSWDY78T23H0HB190wDvT85gVbUzW3xGy$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].enabled$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].poeEnabled$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].type$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].vlan$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].voiceVlan$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].allowedVlans$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].isolationEnabled$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].rstpEnabled$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].stpGuard$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].linkNegotiation$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].portScheduleId$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].udld$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].accessPolicyType$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].daiTrusted$"
                                  ],
                                  "script_queries": [
                                    {
                                      "script_query": "diffs",
                                      "script_query_name": "portDiffs",
                                      "script_query_type": "string"
                                    },
                                    {
                                      "script_query": "is_match",
                                      "script_query_name": "portMatch",
                                      "script_query_type": "boolean"
                                    }
                                  ],
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_02OTRX913ZWB51QMQCsGEmnSv1HobNhZeif",
                                "name": "Set Variables",
                                "title": "Set Variables",
                                "type": "core.set_multiple_variables",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "description": "Set Variables",
                                  "display_name": "Set Variables",
                                  "skip_execution": false,
                                  "variables_to_update": [
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.local.variable_workflow_02OTQU99WJZAG5t9ELftUc5GHXFpYoqGYDB$",
                                      "variable_value_new": "Differences: $activity.definition_activity_02OSX0NBC348R1Pb6KTAUJF94e9Qc5sOuLK.output.script_queries.portDiffs$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.local.variable_workflow_02OTS5LK1BP0W0rbjLJ3EeMOZRBpTNEVinO$",
                                      "variable_value_new": "$activity.definition_activity_02OSX0NBC348R1Pb6KTAUJF94e9Qc5sOuLK.output.script_queries.portMatch$"
                                    }
                                  ]
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_02OTNEAQENQT44Erxr5BeGlmZ1zmoEp4Ijn",
                                "name": "Condition Block",
                                "title": "Is Uplink Status up?",
                                "type": "logic.if_else",
                                "base_type": "activity",
                                "properties": {
                                  "conditions": [],
                                  "continue_on_failure": false,
                                  "description": "If-Else condition block",
                                  "display_name": "Is Uplink Status up?",
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity",
                                "blocks": [
                                  {
                                    "unique_name": "definition_activity_02OTNEARQNTXN1WPS6SmOgxo6DtaKmS8OM6",
                                    "name": "Condition Branch",
                                    "title": "No",
                                    "type": "logic.condition_block",
                                    "base_type": "activity",
                                    "properties": {
                                      "condition": {
                                        "left_operand": "$activity.definition_activity_02OSWY17QW7IR4iNdIHFWCdlMEu8XQBrA6m.output.output_table[0].isUplink$",
                                        "operator": "eq",
                                        "right_operand": true
                                      },
                                      "continue_on_failure": false,
                                      "description": "checks if the port status is up.",
                                      "display_name": "No",
                                      "skip_execution": false
                                    },
                                    "object_type": "definition_activity",
                                    "actions": [
                                      {
                                        "unique_name": "definition_activity_02OTQTU2AOD1W0lY4cYXgPMFz1179pAhMQt",
                                        "name": "Set Variables",
                                        "title": "Set Variables",
                                        "type": "core.set_multiple_variables",
                                        "base_type": "activity",
                                        "properties": {
                                          "continue_on_failure": false,
                                          "description": "Set Variables",
                                          "display_name": "Set Variables",
                                          "skip_execution": false,
                                          "variables_to_update": [
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.local.variable_workflow_02OTS5LK1BP0W0rbjLJ3EeMOZRBpTNEVinO$",
                                              "variable_value_new": false
                                            },
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.local.variable_workflow_02OTQU99WJZAG5t9ELftUc5GHXFpYoqGYDB$",
                                              "variable_value_new": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.local.variable_workflow_02OTQU99WJZAG5t9ELftUc5GHXFpYoqGYDB$ Switchport is not acting as the uplink."
                                            }
                                          ]
                                        },
                                        "object_type": "definition_activity"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "unique_name": "definition_activity_02OTCWWZYI4M557bHGX8bOLZyullCOSNzaG",
                            "name": "Condition Branch",
                            "title": "Downlink Tag",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].tags$",
                                "operator": "mw",
                                "right_operand": "*Downlink*"
                              },
                              "continue_on_failure": false,
                              "display_name": "Downlink Tag",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02OTCXU8B012K2TOmBQzmDwNx6y42gkowBi",
                                "name": "Execute Python Script",
                                "title": "Validate Downlink Config",
                                "type": "python3.script",
                                "base_type": "activity",
                                "properties": {
                                  "action_timeout": 180,
                                  "continue_on_failure": false,
                                  "description": "Checks if the Port has valid config expected for a Downlink Port. \n1. Prepares a JSON string for the current Port.\n2. Compares it with the expected Downlink values defined in Workflow Input.\n3. Compares and produces Diff JSON.",
                                  "display_name": "Validate Downlink Config",
                                  "script": "import json\nimport sys\n\n(expectedConfigValues, enabled, poeEnabled, ptype, vlan, voiceVlan, allowedVlans, isolationEnabled, rstpEnabled, stpGuard, linkNegotiation, portScheduleId, udld, accessPolicyType, daiTrusted ) = sys.argv[1:16]\n\ndef str_to_bool(s):\n    return s.lower() == 'true'\n\ndef str_to_none(s):\n    return None if s.lower() == 'null' or s.lower() == '' else s\n\ndef str_to_int_or_none(s):\n    if s.lower() == 'null' or s.lower() == '':\n        return None\n    try:\n        return int(s)\n    except ValueError:\n        return s\n\ndef create_switchport_json(\n    enabled,\n    poeEnabled,\n    ptype,\n    vlan,\n    voiceVlan,\n    allowedVlans,\n    isolationEnabled,\n    rstpEnabled,\n    stpGuard,\n    linkNegotiation,\n    portScheduleId,\n    udld,\n    accessPolicyType,\n    daiTrusted\n):\n    data = {\n        \"enabled\": enabled,\n        \"poeEnabled\": poeEnabled,\n        \"type\": ptype,\n        \"vlan\": vlan,\n        \"voiceVlan\": voiceVlan,\n        \"allowedVlans\": allowedVlans,\n        \"isolationEnabled\": isolationEnabled,\n        \"rstpEnabled\": rstpEnabled,\n        \"stpGuard\": stpGuard,\n        \"linkNegotiation\": linkNegotiation,\n        \"portScheduleId\": portScheduleId,\n        \"udld\": udld,\n        \"accessPolicyType\": accessPolicyType,\n        \"daiTrusted\": daiTrusted\n    }\n    return json.dumps(data, indent=4)\n\ndef normalize_values_to_str(d):\n    # Recursively convert all values to string\n    if isinstance(d, dict):\n        return {k: normalize_values_to_str(v) for k, v in d.items()}\n    elif isinstance(d, list):\n        return [normalize_values_to_str(v) for v in d]\n    else:\n        return str(d)\n\ndef compare_dicts(dict1, dict2):\n    differences = {}\n    all_keys = set(dict1.keys()) | set(dict2.keys())\n    for key in all_keys:\n        val1 = dict1.get(key, '\u003cmissing\u003e')\n        val2 = dict2.get(key, '\u003cmissing\u003e')\n        if val1 != val2:\n            differences[key] = {'expected': val1, 'got': val2}\n    return differences\n\ndef compare_ports(json_str1, json_str2):\n    \"\"\"\n    Compares two JSON strings by first parsing them into Python objects,\n    \"\"\"\n    try:\n        # Parse strings into Python objects\n        obj1 = json.loads(json_str1)\n        obj2 = json.loads(json_str2)\n\n        norm1 = normalize_values_to_str(obj1)\n        norm2 = normalize_values_to_str(obj2)\n\n        diffs = compare_dicts(norm1, norm2)\n\n        # Print the current_port_json constructed\n        # print(\"Current Port JSON\")\n        # print(json.dumps(norm1, indent=2))\n\n        # print(\"Expected Port JSON\")\n        # print(json.dumps(norm2, indent=2))\n\n        print(\"Diffs\")\n        print(json.dumps(diffs, indent=2))\n\n        return diffs\n\n    except json.JSONDecodeError as e:\n        print(f\"Error decoding JSON: {e}\")\n        return {}\n\n# convert the bool, int, null to string and none\nenabled = str_to_bool(enabled)\npoeEnabled = str_to_bool(poeEnabled)\nisolationEnabled = str_to_bool(isolationEnabled)\nrstpEnabled = str_to_bool(rstpEnabled)\ndaiTrusted = str_to_bool(daiTrusted)\nvlan = str_to_int_or_none(vlan)\nvoiceVlan = str_to_int_or_none(voiceVlan)\nportScheduleId = str_to_none(portScheduleId)\n\n# create a json for the current port\ncurrent_port_json = create_switchport_json(enabled, poeEnabled, ptype, vlan, voiceVlan, allowedVlans, isolationEnabled, rstpEnabled, stpGuard, linkNegotiation, portScheduleId, udld, accessPolicyType, daiTrusted )\n\n# do a dict comparison\ndiffs = compare_ports(current_port_json, expectedConfigValues)\n\nis_match = not bool(diffs)",
                                  "script_arguments": [
                                    "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.static.variable_workflow_02OSWEYI15TMC7NvoZ3bDoUv3qBFnl0Brpt$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].enabled$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].poeEnabled$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].type$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].vlan$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].voiceVlan$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].allowedVlans$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].isolationEnabled$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].rstpEnabled$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].stpGuard$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].linkNegotiation$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].portScheduleId$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].udld$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].accessPolicyType$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].daiTrusted$"
                                  ],
                                  "script_queries": [
                                    {
                                      "script_query": "diffs",
                                      "script_query_name": "portDiffs",
                                      "script_query_type": "string"
                                    },
                                    {
                                      "script_query": "is_match",
                                      "script_query_name": "portMatch",
                                      "script_query_type": "boolean"
                                    }
                                  ],
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_02OTS6YRPWTLF4WgUXeizCXHMiSasOp1uLT",
                                "name": "Set Variables",
                                "title": "Set Variables",
                                "type": "core.set_multiple_variables",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "description": "Set Variables",
                                  "display_name": "Set Variables",
                                  "skip_execution": false,
                                  "variables_to_update": [
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.local.variable_workflow_02OTQU99WJZAG5t9ELftUc5GHXFpYoqGYDB$",
                                      "variable_value_new": "Differences: $activity.definition_activity_02OTCXU8B012K2TOmBQzmDwNx6y42gkowBi.output.script_queries.portDiffs$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.local.variable_workflow_02OTS5LK1BP0W0rbjLJ3EeMOZRBpTNEVinO$",
                                      "variable_value_new": "$activity.definition_activity_02OTCXU8B012K2TOmBQzmDwNx6y42gkowBi.output.script_queries.portMatch$"
                                    }
                                  ]
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          },
                          {
                            "unique_name": "definition_activity_02OTN1OHH4TUO3hPw13VfYx9gT6i9k0FojZ",
                            "name": "Condition Branch",
                            "title": "Guest Tag",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].tags$",
                                "operator": "mw",
                                "right_operand": "*Guest*"
                              },
                              "continue_on_failure": false,
                              "display_name": "Guest Tag",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02OTN1OHK56EP561KdGP2aCg1bYuDMz4ik8",
                                "name": "Execute Python Script",
                                "title": "Validate Guest Config",
                                "type": "python3.script",
                                "base_type": "activity",
                                "properties": {
                                  "action_timeout": 180,
                                  "continue_on_failure": false,
                                  "description": "Checks if the Port has valid config expected for an Guest Port. \n1. Prepares a JSON string for the current Port with specific attributes.\n2. Compares it with the expected Guest values defined in Workflow Input.\n3. If values match (does string comparison) set Notes.",
                                  "display_name": "Validate Guest Config",
                                  "script": "import json\nimport sys\n\n(expectedConfigValues, enabled, poeEnabled, ptype, vlan, voiceVlan, allowedVlans, isolationEnabled, rstpEnabled, stpGuard, linkNegotiation, portScheduleId, udld, accessPolicyType, daiTrusted ) = sys.argv[1:16]\n\ndef str_to_bool(s):\n    return s.lower() == 'true'\n\ndef str_to_none(s):\n    return None if s.lower() == 'null' or s.lower() == '' else s\n\ndef str_to_int_or_none(s):\n    if s.lower() == 'null' or s.lower() == '':\n        return None\n    try:\n        return int(s)\n    except ValueError:\n        return s\n\ndef create_switchport_json(\n    enabled,\n    poeEnabled,\n    ptype,\n    vlan,\n    voiceVlan,\n    allowedVlans,\n    isolationEnabled,\n    rstpEnabled,\n    stpGuard,\n    linkNegotiation,\n    portScheduleId,\n    udld,\n    accessPolicyType,\n    daiTrusted\n):\n    data = {\n        \"enabled\": enabled,\n        \"poeEnabled\": poeEnabled,\n        \"type\": ptype,\n        \"vlan\": vlan,\n        \"voiceVlan\": voiceVlan,\n        \"allowedVlans\": allowedVlans,\n        \"isolationEnabled\": isolationEnabled,\n        \"rstpEnabled\": rstpEnabled,\n        \"stpGuard\": stpGuard,\n        \"linkNegotiation\": linkNegotiation,\n        \"portScheduleId\": portScheduleId,\n        \"udld\": udld,\n        \"accessPolicyType\": accessPolicyType,\n        \"daiTrusted\": daiTrusted\n    }\n    return json.dumps(data, indent=4)\n\ndef normalize_values_to_str(d):\n    # Recursively convert all values to string\n    if isinstance(d, dict):\n        return {k: normalize_values_to_str(v) for k, v in d.items()}\n    elif isinstance(d, list):\n        return [normalize_values_to_str(v) for v in d]\n    else:\n        return str(d)\n\ndef compare_dicts(dict1, dict2):\n    differences = {}\n    all_keys = set(dict1.keys()) | set(dict2.keys())\n    for key in all_keys:\n        val1 = dict1.get(key, '\u003cmissing\u003e')\n        val2 = dict2.get(key, '\u003cmissing\u003e')\n        if val1 != val2:\n            differences[key] = {'expected': val1, 'got': val2}\n    return differences\n\ndef compare_ports(json_str1, json_str2):\n    \"\"\"\n    Compares two JSON strings by first parsing them into Python objects,\n    \"\"\"\n    try:\n        # Parse strings into Python objects\n        obj1 = json.loads(json_str1)\n        obj2 = json.loads(json_str2)\n\n        norm1 = normalize_values_to_str(obj1)\n        norm2 = normalize_values_to_str(obj2)\n\n        diffs = compare_dicts(norm1, norm2)\n\n        # Print the current_port_json constructed\n        # print(\"Current Port JSON\")\n        # print(json.dumps(norm1, indent=2))\n\n        # print(\"Expected Port JSON\")\n        # print(json.dumps(norm2, indent=2))\n\n        print(\"Diffs\")\n        print(json.dumps(diffs, indent=2))\n\n        return diffs\n\n    except json.JSONDecodeError as e:\n        print(f\"Error decoding JSON: {e}\")\n        return {}\n\n# convert the bool, int, null to string and none\nenabled = str_to_bool(enabled)\npoeEnabled = str_to_bool(poeEnabled)\nisolationEnabled = str_to_bool(isolationEnabled)\nrstpEnabled = str_to_bool(rstpEnabled)\ndaiTrusted = str_to_bool(daiTrusted)\nvlan = str_to_int_or_none(vlan)\nvoiceVlan = str_to_int_or_none(voiceVlan)\nportScheduleId = str_to_none(portScheduleId)\n\n# create a json for the current port\ncurrent_port_json = create_switchport_json(enabled, poeEnabled, ptype, vlan, voiceVlan, allowedVlans, isolationEnabled, rstpEnabled, stpGuard, linkNegotiation, portScheduleId, udld, accessPolicyType, daiTrusted )\n\n# do a dict comparison\ndiffs = compare_ports(current_port_json, expectedConfigValues)\n\nis_match = not bool(diffs)",
                                  "script_arguments": [
                                    "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.static.variable_workflow_02OSWLDP0S8780qQjkKMKEMBjuHP8nO01UU$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].enabled$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].poeEnabled$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].type$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].vlan$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].voiceVlan$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].allowedVlans$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].isolationEnabled$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].rstpEnabled$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].stpGuard$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].linkNegotiation$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].portScheduleId$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].udld$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].accessPolicyType$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].daiTrusted$"
                                  ],
                                  "script_queries": [
                                    {
                                      "script_query": "diffs",
                                      "script_query_name": "portDiffs",
                                      "script_query_type": "string"
                                    },
                                    {
                                      "script_query": "is_match",
                                      "script_query_name": "portMatch",
                                      "script_query_type": "boolean"
                                    }
                                  ],
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_02OTRUBIU4RJL62GIdjhnGwDqoTo5ugyIfy",
                                "name": "Set Variables",
                                "title": "Set Variables",
                                "type": "core.set_multiple_variables",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "description": "Set Variables",
                                  "display_name": "Set Variables",
                                  "skip_execution": false,
                                  "variables_to_update": [
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.local.variable_workflow_02OTQU99WJZAG5t9ELftUc5GHXFpYoqGYDB$",
                                      "variable_value_new": "Differences: $activity.definition_activity_02OTN1OHK56EP561KdGP2aCg1bYuDMz4ik8.output.script_queries.portDiffs$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.local.variable_workflow_02OTS5LK1BP0W0rbjLJ3EeMOZRBpTNEVinO$",
                                      "variable_value_new": "$activity.definition_activity_02OTN1OHK56EP561KdGP2aCg1bYuDMz4ik8.output.script_queries.portMatch$"
                                    }
                                  ]
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          },
                          {
                            "unique_name": "definition_activity_02OTN1XAC24XA55hDiF4ncenoPJhc74nlfk",
                            "name": "Condition Branch",
                            "title": "Voice Tag",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].tags$",
                                "operator": "mw",
                                "right_operand": "*Voice*"
                              },
                              "continue_on_failure": false,
                              "display_name": "Voice Tag",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02OTN1XAEJZP91jmYTEz6qVXt2ocIgHi5q0",
                                "name": "Execute Python Script",
                                "title": "Validate Voice Config",
                                "type": "python3.script",
                                "base_type": "activity",
                                "properties": {
                                  "action_timeout": 180,
                                  "continue_on_failure": false,
                                  "description": "Checks if the Port has valid config expected for a Voice Port. \n1. Prepares a JSON string for the current Port.\n2. Compares it with the expected Voice values defined in Workflow Input.\n3. Compares and produces Diff JSON.",
                                  "display_name": "Validate Voice Config",
                                  "script": "import json\nimport sys\n\n(expectedConfigValues, enabled, poeEnabled, ptype, vlan, voiceVlan, allowedVlans, isolationEnabled, rstpEnabled, stpGuard, linkNegotiation, portScheduleId, udld, accessPolicyType, daiTrusted ) = sys.argv[1:16]\n\ndef str_to_bool(s):\n    return s.lower() == 'true'\n\ndef str_to_none(s):\n    return None if s.lower() == 'null' or s.lower() == '' else s\n\ndef str_to_int_or_none(s):\n    if s.lower() == 'null' or s.lower() == '':\n        return None\n    try:\n        return int(s)\n    except ValueError:\n        return s\n\ndef create_switchport_json(\n    enabled,\n    poeEnabled,\n    ptype,\n    vlan,\n    voiceVlan,\n    allowedVlans,\n    isolationEnabled,\n    rstpEnabled,\n    stpGuard,\n    linkNegotiation,\n    portScheduleId,\n    udld,\n    accessPolicyType,\n    daiTrusted\n):\n    data = {\n        \"enabled\": enabled,\n        \"poeEnabled\": poeEnabled,\n        \"type\": ptype,\n        \"vlan\": vlan,\n        \"voiceVlan\": voiceVlan,\n        \"allowedVlans\": allowedVlans,\n        \"isolationEnabled\": isolationEnabled,\n        \"rstpEnabled\": rstpEnabled,\n        \"stpGuard\": stpGuard,\n        \"linkNegotiation\": linkNegotiation,\n        \"portScheduleId\": portScheduleId,\n        \"udld\": udld,\n        \"accessPolicyType\": accessPolicyType,\n        \"daiTrusted\": daiTrusted\n    }\n    return json.dumps(data, indent=4)\n\ndef normalize_values_to_str(d):\n    # Recursively convert all values to string\n    if isinstance(d, dict):\n        return {k: normalize_values_to_str(v) for k, v in d.items()}\n    elif isinstance(d, list):\n        return [normalize_values_to_str(v) for v in d]\n    else:\n        return str(d)\n\ndef compare_dicts(dict1, dict2):\n    differences = {}\n    all_keys = set(dict1.keys()) | set(dict2.keys())\n    for key in all_keys:\n        val1 = dict1.get(key, '\u003cmissing\u003e')\n        val2 = dict2.get(key, '\u003cmissing\u003e')\n        if val1 != val2:\n            differences[key] = {'expected': val1, 'got': val2}\n    return differences\n\ndef compare_ports(json_str1, json_str2):\n    \"\"\"\n    Compares two JSON strings by first parsing them into Python objects,\n    \"\"\"\n    try:\n        # Parse strings into Python objects\n        obj1 = json.loads(json_str1)\n        obj2 = json.loads(json_str2)\n\n        norm1 = normalize_values_to_str(obj1)\n        norm2 = normalize_values_to_str(obj2)\n\n        diffs = compare_dicts(norm1, norm2)\n\n        # Print the current_port_json constructed\n        # print(\"Current Port JSON\")\n        # print(json.dumps(norm1, indent=2))\n\n        # print(\"Expected Port JSON\")\n        # print(json.dumps(norm2, indent=2))\n\n        print(\"Diffs\")\n        print(json.dumps(diffs, indent=2))\n\n        return diffs\n\n    except json.JSONDecodeError as e:\n        print(f\"Error decoding JSON: {e}\")\n        return {}\n\n# convert the bool, int, null to string and none\nenabled = str_to_bool(enabled)\npoeEnabled = str_to_bool(poeEnabled)\nisolationEnabled = str_to_bool(isolationEnabled)\nrstpEnabled = str_to_bool(rstpEnabled)\ndaiTrusted = str_to_bool(daiTrusted)\nvlan = str_to_int_or_none(vlan)\nvoiceVlan = str_to_int_or_none(voiceVlan)\nportScheduleId = str_to_none(portScheduleId)\n\n# create a json for the current port\ncurrent_port_json = create_switchport_json(enabled, poeEnabled, ptype, vlan, voiceVlan, allowedVlans, isolationEnabled, rstpEnabled, stpGuard, linkNegotiation, portScheduleId, udld, accessPolicyType, daiTrusted )\n\n# do a dict comparison\ndiffs = compare_ports(current_port_json, expectedConfigValues)\n\nis_match = not bool(diffs)",
                                  "script_arguments": [
                                    "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.static.variable_workflow_02OSWFPJK1YT02o8cncSmrcgytKnERS84Os$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].enabled$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].poeEnabled$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].type$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].vlan$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].voiceVlan$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].allowedVlans$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].isolationEnabled$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].rstpEnabled$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].stpGuard$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].linkNegotiation$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].portScheduleId$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].udld$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].accessPolicyType$",
                                    "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].daiTrusted$"
                                  ],
                                  "script_queries": [
                                    {
                                      "script_query": "diffs",
                                      "script_query_name": "portDiffs",
                                      "script_query_type": "string"
                                    },
                                    {
                                      "script_query": "is_match",
                                      "script_query_name": "portMatch",
                                      "script_query_type": "boolean"
                                    }
                                  ],
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_02OTRUV5U118X6v3LuZy86gpWzHmd1pFx1q",
                                "name": "Set Variables",
                                "title": "Set Variables",
                                "type": "core.set_multiple_variables",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "description": "Set Variables",
                                  "display_name": "Set Variables",
                                  "skip_execution": false,
                                  "variables_to_update": [
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.local.variable_workflow_02OTQU99WJZAG5t9ELftUc5GHXFpYoqGYDB$",
                                      "variable_value_new": "Differences: $activity.definition_activity_02OTN1XAEJZP91jmYTEz6qVXt2ocIgHi5q0.output.script_queries.portDiffs$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.local.variable_workflow_02OTS5LK1BP0W0rbjLJ3EeMOZRBpTNEVinO$",
                                      "variable_value_new": "$activity.definition_activity_02OTN1XAEJZP91jmYTEz6qVXt2ocIgHi5q0.output.script_queries.portMatch$"
                                    }
                                  ]
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          },
                          {
                            "unique_name": "definition_activity_02OU8CA7MU35D42j6BqZRkTVoE0dDklIOMn",
                            "name": "Condition Branch",
                            "title": "No Tags",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": "$activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].tags$",
                                "operator": "eq",
                                "right_operand": "[]"
                              },
                              "continue_on_failure": false,
                              "display_name": "No Tags",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02OU8CA7VNLQT1ZMlyIUSrIypc2JauXld6z",
                                "name": "Set Variables",
                                "title": "Set Variables",
                                "type": "core.set_multiple_variables",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "description": "Set Variables",
                                  "display_name": "Set Variables",
                                  "skip_execution": false,
                                  "variables_to_update": [
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.local.variable_workflow_02OTQU99WJZAG5t9ELftUc5GHXFpYoqGYDB$",
                                      "variable_value_new": "Switchport does not have valid config type tag."
                                    }
                                  ]
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "unique_name": "definition_activity_02OSQ4UZ15SB44ZNn28w8BXBVY8HGBrV20P",
                    "name": "Group",
                    "title": "Summarize Results",
                    "type": "logic.group",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "description": "Group",
                      "display_as_suggestion": false,
                      "display_name": "Summarize Results",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_02OSQ4V0A916V2DMjnzRaEJ0yuuUPrOVYNT",
                        "name": "Condition Block",
                        "title": "All Checks Passed?",
                        "type": "logic.if_else",
                        "base_type": "activity",
                        "properties": {
                          "conditions": [],
                          "continue_on_failure": false,
                          "description": "Set AP Check Status as Passed when AP is Online and AP is assigned to valid VLAN and AP has a proper IP assignment.",
                          "display_name": "All Checks Passed?",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "blocks": [
                          {
                            "unique_name": "definition_activity_02OSQ4V13HY8S7OLiRvAwlMdn4ngo8vfbaA",
                            "name": "Condition Branch",
                            "title": "Passed",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.local.variable_workflow_02OTS5LK1BP0W0rbjLJ3EeMOZRBpTNEVinO$",
                                "operator": "eq",
                                "right_operand": true
                              },
                              "continue_on_failure": false,
                              "display_name": "Passed",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02OSQ4V2EX8Q64vTeBawKCqBPeSVH9pCkWE",
                                "name": "Set Variables",
                                "title": "Set Variables",
                                "type": "core.set_multiple_variables",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "description": "Set Variables",
                                  "display_name": "Set Variables",
                                  "skip_execution": false,
                                  "variables_to_update": [
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.output.variable_workflow_02OSQ4SZ13DFA2R2Ada5e6FxaPhIMdlBIsV$",
                                      "variable_value_new": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.output.variable_workflow_02OSQ4SZ13DFA2R2Ada5e6FxaPhIMdlBIsV$\nPort $activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].portId$ check Passed."
                                    }
                                  ]
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          },
                          {
                            "unique_name": "definition_activity_02OTTGI8ACOAL0WkzL32gLD3YW4HLF28L4q",
                            "name": "Condition Branch",
                            "title": "Failed",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.local.variable_workflow_02OTS5LK1BP0W0rbjLJ3EeMOZRBpTNEVinO$",
                                "operator": "eq",
                                "right_operand": false
                              },
                              "continue_on_failure": false,
                              "display_name": "Failed",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02OTTGI8CCIU21qcxGzFrUqzyJotwKYgjU0",
                                "name": "Set Variables",
                                "title": "Set Variables",
                                "type": "core.set_multiple_variables",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "description": "Set Variables",
                                  "display_name": "Set Variables",
                                  "skip_execution": false,
                                  "variables_to_update": [
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.output.variable_workflow_02OSQ4SZ13DFA2R2Ada5e6FxaPhIMdlBIsV$",
                                      "variable_value_new": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.output.variable_workflow_02OSQ4SZ13DFA2R2Ada5e6FxaPhIMdlBIsV$ \nPort $activity.definition_activity_02OSQ4TSCYXTP0UW6yLOvjf9ZlwithwuOcG.input.source_array[@].portId$ check Failed. $workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.local.variable_workflow_02OTQU99WJZAG5t9ELftUc5GHXFpYoqGYDB$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.output.variable_workflow_02OUBEE9A6VVN281EmeXky7NgoFzUHHNLSA$",
                                      "variable_value_new": false
                                    }
                                  ]
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "unique_name": "definition_activity_02OSQ4V63YO3C0xOOTjW7Pupg6p0gdCT1TI",
                        "name": "Set Variables",
                        "title": "Reset Variables",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "description": "Set Variables",
                          "display_name": "Reset Variables",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.local.variable_workflow_02OTR2MOE966H0qNienRbQbFyTqIyUP1cPw$",
                              "variable_value_new": false
                            },
                            {
                              "variable_to_update": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.local.variable_workflow_02OTS5LK1BP0W0rbjLJ3EeMOZRBpTNEVinO$",
                              "variable_value_new": false
                            },
                            {
                              "variable_to_update": "$workflow.definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k.local.variable_workflow_02OTQU99WJZAG5t9ELftUc5GHXFpYoqGYDB$",
                              "variable_value_new": ""
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  }
                ]
              }
            ],
            "categories": [
              "category_02P1ZHJAQ54XV1zJuzEtLLMo66BUJZWb5Dm"
            ]
          },
          "atomic_workflows": [
            "definition_workflow_02LLUYO87CIIF2MYkTzJpsPsYYOXZ5MUPA1"
          ],
          "dependent_workflows": [
            "definition_workflow_02LLUYO87CIIF2MYkTzJpsPsYYOXZ5MUPA1"
          ]
        },
        {
          "workflow": {
            "unique_name": "definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A",
            "name": "Appliance Device Checklist",
            "title": "Appliance Device Checklist",
            "type": "generic.workflow",
            "base_type": "workflow",
            "variables": [
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "output",
                  "name": "Result",
                  "type": "datatype.string",
                  "description": "An Output variable to track detailed messages to the caller on how the workflow performed.",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "text"
                },
                "unique_name": "variable_workflow_02OW90BNU85CG6GlfVy7LEIuc4DaUMT1WBN",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "input",
                  "name": "Organization ID",
                  "type": "datatype.string",
                  "description": "Optional - If you are passing the AP devices list then Organization ID is not needed. Pass this as input when you what the workflow to lookup access point devices for the organization. ",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "text"
                },
                "unique_name": "variable_workflow_02OW90BNU6RGR2sRw9V8mpUdcFHtno0Tzr1",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.boolean",
                "properties": {
                  "value": true,
                  "scope": "local",
                  "name": "Uplink Status",
                  "type": "datatype.boolean",
                  "description": "A local variable to set status for Uplink status. Starts with default as true and resets when one the checks fail. ",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02P1UYL4EG6J331gkpbQVDQGNXqwXYxVd34",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "[]",
                  "scope": "input",
                  "name": "Appliance Uplink Status List",
                  "type": "datatype.string",
                  "description": "Input list of Device Status to help in performing compliance checks.\nProvide the Device Status as a JSON array. This is raw JSON output from Get Organization Appliance Uplink Statuses activity.",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "json"
                },
                "unique_name": "variable_workflow_02OW90BNU8SSI0EGYz5IvpmHtXPCrrDflZf",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "local",
                  "name": "Device Testing Notes",
                  "type": "datatype.string",
                  "description": "A local variable capturing Notes from different tests done on the device. ",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "text"
                },
                "unique_name": "variable_workflow_02OW90BNU8GQV3XHqiSeHGGAGJ51ZABU956",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "input",
                  "name": "Device Serial",
                  "type": "datatype.string",
                  "description": "Input device serial to run the test.",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "text"
                },
                "unique_name": "variable_workflow_02OX2E0ZJY3CQ0rjE7DzFKgJg00G5pKPPcg",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "output",
                  "name": "Status Message",
                  "type": "datatype.string",
                  "description": "An Output variable to track simple message of the workflow output.",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "text"
                },
                "unique_name": "variable_workflow_02OW90BNU6JBE6MtB7dMhbjFwFEvmGT2LL3",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "[]",
                  "scope": "local",
                  "name": "Appliance Uplink Status JSON",
                  "type": "datatype.string",
                  "description": "A local variable to hold the raw JSON output from GET from different input paths.",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "json"
                },
                "unique_name": "variable_workflow_02OW90BNU9A9F6DkMsFlkqVGPz5KketcMuC",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.integer",
                "properties": {
                  "value": 0,
                  "scope": "output",
                  "name": "Status Code",
                  "type": "datatype.integer",
                  "description": "An Output variable to track simple code of the workflow output. Typically 200, 400 depending on case.",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02OW90BNU7DMB4bDUpkkOIwNRO99lsen84m",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "output",
                  "name": "Error Message",
                  "type": "datatype.string",
                  "description": "An Output variable to track simple error message of the workflow output.",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02OW90BNU7XED1NIbGsgTnyA52CJHBV3T7k",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.boolean",
                "properties": {
                  "value": true,
                  "scope": "output",
                  "name": "All Checks Passed",
                  "type": "datatype.boolean",
                  "description": "An Output variable set to True by default and False when any one of the checks has a failed.",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02OYMGR422F0X0JcMEzRemH49EIImB4hM09",
                "object_type": "variable_workflow"
              }
            ],
            "properties": {
              "atomic": {
                "is_atomic": false
              },
              "delete_workflow_instance": false,
              "description": "Performs a list of validations for Appliance Devices. Workflow performs following checks \n1. Checks WAN1 Uplink status for Appliance Device is active.\n2. Checks WAN2 Uplink statis for Appliance Device is either ready or active.\n",
              "display_name": "Appliance Device Checklist",
              "runtime_user": {
                "target_default": true
              },
              "target": {
                "target_type": "meraki.endpoint",
                "specify_on_workflow_start": true
              }
            },
            "object_type": "definition_workflow",
            "actions": [
              {
                "unique_name": "definition_activity_02OW90BRZUMJ446EDun2alg6LUof3oxJJ3f",
                "name": "Group",
                "title": "Validate Inputs",
                "type": "logic.group",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "description": "Checks on the status of passed in inputs. If inputs are not provided make needed API calls. \nStores the results in temporary local variables. ",
                  "display_as_suggestion": false,
                  "display_name": "Validate Inputs",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02OW90BTDNG066nPLdjwLGXaebOy0qxtteq",
                    "name": "Condition Block",
                    "title": "Are Inputs provided?",
                    "type": "logic.if_else",
                    "base_type": "activity",
                    "properties": {
                      "conditions": [],
                      "continue_on_failure": false,
                      "description": "For optimization purposes, check if Inputs passed in from other workflows. Only when inputs like Devices List, Device Status List, VLAN List are not passed in as Input - perform lookup with the workflow.",
                      "display_name": "Are Inputs provided?",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "blocks": [
                      {
                        "unique_name": "definition_activity_02OW90BU8NGVT56t49EUO2XLEPBr7A9Y3Tm",
                        "name": "Condition Branch",
                        "title": "Not Enough Inputs",
                        "type": "logic.condition_block",
                        "base_type": "activity",
                        "properties": {
                          "condition": {
                            "left_operand": {
                              "left_operand": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.input.variable_workflow_02OW90BNU8SSI0EGYz5IvpmHtXPCrrDflZf$",
                              "operator": "eq",
                              "right_operand": "[]"
                            },
                            "operator": "and",
                            "right_operand": {
                              "left_operand": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.input.variable_workflow_02OW90BNU6RGR2sRw9V8mpUdcFHtno0Tzr1$",
                              "operator": "eq",
                              "right_operand": ""
                            }
                          },
                          "continue_on_failure": false,
                          "display_name": "Not Enough Inputs",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02OW90BVGEJXK3lISzdGFW7fu7ER0Xckyh3",
                            "name": "Set Variables",
                            "title": "Set Variables",
                            "type": "core.set_multiple_variables",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "description": "Set Variables",
                              "display_name": "Set Variables",
                              "skip_execution": false,
                              "variables_to_update": [
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.output.variable_workflow_02OW90BNU85CG6GlfVy7LEIuc4DaUMT1WBN$",
                                  "variable_value_new": "Not Enough Inputs to proceed.\nOption 1 - Provide AP Device List and Device Status List from other calling workflows.\nOR\nOption 2 - Provide Organization ID to lookup AP Device List and Device Status for the Organization."
                                }
                              ]
                            },
                            "object_type": "definition_activity"
                          }
                        ]
                      },
                      {
                        "unique_name": "definition_activity_02OW90BWGDGCJ2TusaBtWo6h1Lno5uMyJeX",
                        "name": "Condition Branch",
                        "title": "No, execute API calls",
                        "type": "logic.condition_block",
                        "base_type": "activity",
                        "properties": {
                          "condition": {
                            "left_operand": {
                              "left_operand": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.input.variable_workflow_02OW90BNU8SSI0EGYz5IvpmHtXPCrrDflZf$",
                              "operator": "eq",
                              "right_operand": "[]"
                            },
                            "operator": "and",
                            "right_operand": {
                              "left_operand": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.input.variable_workflow_02OW90BNU6RGR2sRw9V8mpUdcFHtno0Tzr1$",
                              "operator": "ne",
                              "right_operand": ""
                            }
                          },
                          "continue_on_failure": false,
                          "display_name": "No, execute API calls",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02OW91DAO25RR4QjTGp0TfBzohYuSquWi05",
                            "name": "Meraki - Get Organization Appliance Uplink Statuses",
                            "title": "Meraki - Get Organization Appliance Uplink Statuses",
                            "type": "workflow.atomic_workflow",
                            "base_type": "subworkflow",
                            "properties": {
                              "continue_on_failure": false,
                              "description": "List the uplink status of every Meraki MX and Z series appliances in the organization",
                              "display_name": "Meraki - Get Organization Appliance Uplink Statuses",
                              "input": {
                                "variable_workflow_02OARCJ16X2WW4donDhGip6N90Y2WO8jaS5": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.input.variable_workflow_02OW90BNU6RGR2sRw9V8mpUdcFHtno0Tzr1$"
                              },
                              "runtime_user": {
                                "target_default": true
                              },
                              "skip_execution": false,
                              "target": {
                                "target_type": "meraki.endpoint",
                                "use_workflow_target": true
                              },
                              "workflow_id": "definition_workflow_02OARCJ16WZTS5V0LlpWAeTm3Br5dYPREHG",
                              "workflow_name": "Meraki - Get Organization Appliance Uplink Statuses"
                            },
                            "object_type": "definition_activity"
                          },
                          {
                            "unique_name": "definition_activity_02OW90C6IY0AH4U4lMGYLOfNtlDQWz393Az",
                            "name": "Set Variables",
                            "title": "Set Variables",
                            "type": "core.set_multiple_variables",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "description": "Set Variables",
                              "display_name": "Set Variables",
                              "skip_execution": false,
                              "variables_to_update": [
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.local.variable_workflow_02OW90BNU9A9F6DkMsFlkqVGPz5KketcMuC$",
                                  "variable_value_new": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.input.variable_workflow_02OW90BNU8SSI0EGYz5IvpmHtXPCrrDflZf$"
                                }
                              ]
                            },
                            "object_type": "definition_activity"
                          }
                        ]
                      },
                      {
                        "unique_name": "definition_activity_02OW90C84XBR13MpmEcDZqW0M52xfXDNwkw",
                        "name": "Condition Branch",
                        "title": "Yes, Use Inputs",
                        "type": "logic.condition_block",
                        "base_type": "activity",
                        "properties": {
                          "condition": {
                            "left_operand": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.input.variable_workflow_02OW90BNU8SSI0EGYz5IvpmHtXPCrrDflZf$",
                            "operator": "ne",
                            "right_operand": "[]"
                          },
                          "continue_on_failure": false,
                          "display_name": "Yes, Use Inputs",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02OW90C9S95Y92s6KiyuX45GOflqmt8aWYi",
                            "name": "Set Variables",
                            "title": "Set Variables",
                            "type": "core.set_multiple_variables",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "description": "Set Variables",
                              "display_name": "Set Variables",
                              "skip_execution": false,
                              "variables_to_update": [
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.local.variable_workflow_02OW90BNU9A9F6DkMsFlkqVGPz5KketcMuC$",
                                  "variable_value_new": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.input.variable_workflow_02OW90BNU8SSI0EGYz5IvpmHtXPCrrDflZf$"
                                }
                              ]
                            },
                            "object_type": "definition_activity"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "unique_name": "definition_activity_02OXVT354EMV31NcwYavpYbWu9qyeEd3HLq",
                "name": "Group",
                "title": "Check 1 - Appliance Uplink Status",
                "type": "logic.group",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "description": "Checks to see if the Uplink Link Status is Active ",
                  "display_as_suggestion": false,
                  "display_name": "Check 1 - Appliance Uplink Status",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02P1TBNXNGR6777rtrRl0j2gMF0LpGhAuJu",
                    "name": "Condition Block",
                    "title": "Has any Uplinks?",
                    "type": "logic.if_else",
                    "base_type": "activity",
                    "properties": {
                      "conditions": [],
                      "continue_on_failure": false,
                      "description": "This checks if the Appliance Uplinks Status JSON has any value in it. ",
                      "display_name": "Has any Uplinks?",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "blocks": [
                      {
                        "unique_name": "definition_activity_02P1TBNYZ0GSB5Q5dYyeX4bGG9DAad2xiBt",
                        "name": "Condition Branch",
                        "title": "Yes",
                        "type": "logic.condition_block",
                        "base_type": "activity",
                        "properties": {
                          "condition": {
                            "left_operand": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.local.variable_workflow_02OW90BNU9A9F6DkMsFlkqVGPz5KketcMuC$",
                            "operator": "ne",
                            "right_operand": "[]"
                          },
                          "continue_on_failure": false,
                          "display_name": "Yes",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02P1SWR4N7SC47EMNJuSVxyueyvIcOrkUKs",
                            "name": "Read Table from JSON",
                            "title": "Read Devices Uplinks from JSON",
                            "type": "corejava.read_table_from_json",
                            "base_type": "activity",
                            "properties": {
                              "action_timeout": 180,
                              "continue_on_failure": false,
                              "description": "Read each Devices JSON.",
                              "display_name": "Read Devices Uplinks from JSON",
                              "input_json": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.local.variable_workflow_02OW90BNU9A9F6DkMsFlkqVGPz5KketcMuC$",
                              "jsonpath_query": "$.*",
                              "persist_output": true,
                              "populate_columns": false,
                              "skip_execution": false,
                              "table_columns": [
                                {
                                  "column_name": "serial",
                                  "column_type": "string"
                                },
                                {
                                  "column_name": "uplinks",
                                  "column_type": "string"
                                }
                              ]
                            },
                            "object_type": "definition_activity"
                          },
                          {
                            "unique_name": "definition_activity_02P1UCX1557MX59vcwqZwg0Ge9Rq4R8wIY2",
                            "name": "Select from Table",
                            "title": "Select Device from Table",
                            "type": "core.selectfromtable",
                            "base_type": "activity",
                            "properties": {
                              "action_timeout": 180,
                              "columns": [
                                {
                                  "column_name": "uplinks",
                                  "column_type": "string"
                                }
                              ],
                              "continue_on_failure": false,
                              "description": "Filter to input device",
                              "display_name": "Select Device from Table",
                              "input_table": "$activity.definition_activity_02P1SWR4N7SC47EMNJuSVxyueyvIcOrkUKs.output.read_table_from_json$",
                              "number_of_rows": {
                                "all_rows": true
                              },
                              "persist_output": true,
                              "skip_execution": false,
                              "sorting": {
                                "no_sort": true
                              },
                              "where_clause": "serial == '$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.input.variable_workflow_02OX2E0ZJY3CQ0rjE7DzFKgJg00G5pKPPcg$'"
                            },
                            "object_type": "definition_activity"
                          },
                          {
                            "unique_name": "definition_activity_02OXT2WGWPH1Z3Lai0g2n054Fzo53edwnGl",
                            "name": "Condition Block",
                            "title": "Input Device has Uplinks?",
                            "type": "logic.if_else",
                            "base_type": "activity",
                            "properties": {
                              "conditions": [],
                              "continue_on_failure": false,
                              "description": "If-Else condition block",
                              "display_name": "Input Device has Uplinks?",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "blocks": [
                              {
                                "unique_name": "definition_activity_02OXT2WI2JHOP5Lefwol1wdQE3ESWTGrCHL",
                                "name": "Condition Branch",
                                "title": "No",
                                "type": "logic.condition_block",
                                "base_type": "activity",
                                "properties": {
                                  "condition": {
                                    "left_operand": {
                                      "left_operand": "$activity.definition_activity_02P1UCX1557MX59vcwqZwg0Ge9Rq4R8wIY2.output.output_table[0].uplinks$",
                                      "operator": "eq",
                                      "right_operand": "[]"
                                    },
                                    "operator": "or",
                                    "right_operand": {
                                      "left_operand": "$activity.definition_activity_02P1UCX1557MX59vcwqZwg0Ge9Rq4R8wIY2.output.row_count$",
                                      "operator": "eq",
                                      "right_operand": 0
                                    }
                                  },
                                  "continue_on_failure": false,
                                  "display_name": "No",
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity",
                                "actions": [
                                  {
                                    "unique_name": "definition_activity_02OXT8ZEZRAW34kEcLFVAvpHyTbX8VB38Zy",
                                    "name": "Set Variables",
                                    "title": "Set Variables",
                                    "type": "core.set_multiple_variables",
                                    "base_type": "activity",
                                    "properties": {
                                      "continue_on_failure": false,
                                      "description": "Set Variables",
                                      "display_name": "Set Variables",
                                      "skip_execution": false,
                                      "variables_to_update": [
                                        {
                                          "variable_to_update": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.local.variable_workflow_02OW90BNU8GQV3XHqiSeHGGAGJ51ZABU956$",
                                          "variable_value_new": "No Uplinks found for devices."
                                        },
                                        {
                                          "variable_to_update": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.local.variable_workflow_02P1UYL4EG6J331gkpbQVDQGNXqwXYxVd34$",
                                          "variable_value_new": false
                                        }
                                      ]
                                    },
                                    "object_type": "definition_activity"
                                  }
                                ]
                              },
                              {
                                "unique_name": "definition_activity_02OXT9TRSCOGI1VkxsoJIJIt7a0HUZu0PID",
                                "name": "Condition Branch",
                                "title": "Success",
                                "type": "logic.condition_block",
                                "base_type": "activity",
                                "properties": {
                                  "condition": {
                                    "left_operand": {
                                      "left_operand": "$activity.definition_activity_02P1UCX1557MX59vcwqZwg0Ge9Rq4R8wIY2.output.output_table[0].uplinks$",
                                      "operator": "ne",
                                      "right_operand": "[]"
                                    },
                                    "operator": "and",
                                    "right_operand": {
                                      "left_operand": "$activity.definition_activity_02P1UCX1557MX59vcwqZwg0Ge9Rq4R8wIY2.output.row_count$",
                                      "operator": "gt",
                                      "right_operand": 0
                                    }
                                  },
                                  "continue_on_failure": false,
                                  "display_name": "Success",
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity",
                                "actions": [
                                  {
                                    "unique_name": "definition_activity_02P1ULDMN80WV7ZSwdxJwdHBjmkp8hmhaUt",
                                    "name": "Read Table from JSON",
                                    "title": "Read Uplinks from JSON",
                                    "type": "corejava.read_table_from_json",
                                    "base_type": "activity",
                                    "properties": {
                                      "action_timeout": 180,
                                      "continue_on_failure": false,
                                      "description": "This reads the Uplinks list for a selected device",
                                      "display_name": "Read Uplinks from JSON",
                                      "input_json": "$activity.definition_activity_02P1UCX1557MX59vcwqZwg0Ge9Rq4R8wIY2.output.output_table[0].uplinks$",
                                      "jsonpath_query": "$.*",
                                      "persist_output": true,
                                      "populate_columns": false,
                                      "skip_execution": false,
                                      "table_columns": [
                                        {
                                          "column_name": "status",
                                          "column_type": "string"
                                        },
                                        {
                                          "column_name": "interface",
                                          "column_type": "string"
                                        }
                                      ]
                                    },
                                    "object_type": "definition_activity"
                                  },
                                  {
                                    "unique_name": "definition_activity_02P1UMFZHW3Q90rfb7eVucabkJQMEm5UkHH",
                                    "name": "Select from Table",
                                    "title": "Select WAN1 Uplink",
                                    "type": "core.selectfromtable",
                                    "base_type": "activity",
                                    "properties": {
                                      "action_timeout": 180,
                                      "columns": [
                                        {
                                          "column_name": "status",
                                          "column_type": "string"
                                        }
                                      ],
                                      "continue_on_failure": false,
                                      "description": "Select WAN1 section from table",
                                      "display_name": "Select WAN1 Uplink",
                                      "input_table": "$activity.definition_activity_02P1ULDMN80WV7ZSwdxJwdHBjmkp8hmhaUt.output.read_table_from_json$",
                                      "number_of_rows": {
                                        "all_rows": true
                                      },
                                      "persist_output": true,
                                      "skip_execution": false,
                                      "sorting": {
                                        "no_sort": true
                                      },
                                      "where_clause": "interface == 'wan1'"
                                    },
                                    "object_type": "definition_activity"
                                  },
                                  {
                                    "unique_name": "definition_activity_02P1UNFD0H21R592ttPMI5fIYwSdV4WY4ZW",
                                    "name": "Select from Table",
                                    "title": "Select WAN2 Uplink",
                                    "type": "core.selectfromtable",
                                    "base_type": "activity",
                                    "properties": {
                                      "action_timeout": 180,
                                      "columns": [
                                        {
                                          "column_name": "status",
                                          "column_type": "string"
                                        }
                                      ],
                                      "continue_on_failure": false,
                                      "description": "Select WAN2 section from table",
                                      "display_name": "Select WAN2 Uplink",
                                      "input_table": "$activity.definition_activity_02P1ULDMN80WV7ZSwdxJwdHBjmkp8hmhaUt.output.read_table_from_json$",
                                      "number_of_rows": {
                                        "all_rows": true
                                      },
                                      "persist_output": true,
                                      "skip_execution": false,
                                      "sorting": {
                                        "no_sort": true
                                      },
                                      "where_clause": "interface == 'wan2'"
                                    },
                                    "object_type": "definition_activity"
                                  },
                                  {
                                    "unique_name": "definition_activity_02OXVX9CH473J0irrum6K9sPnP2PiNMdmaC",
                                    "name": "Condition Block",
                                    "title": "Check WAN 1 Status",
                                    "type": "logic.if_else",
                                    "base_type": "activity",
                                    "properties": {
                                      "conditions": [],
                                      "continue_on_failure": false,
                                      "description": "If-Else condition block",
                                      "display_name": "Check WAN 1 Status",
                                      "skip_execution": false
                                    },
                                    "object_type": "definition_activity",
                                    "blocks": [
                                      {
                                        "unique_name": "definition_activity_02OXVX9DMNZ734DFjEwbJ0jhHgExPXL2clf",
                                        "name": "Condition Branch",
                                        "title": "Not Active",
                                        "type": "logic.condition_block",
                                        "base_type": "activity",
                                        "properties": {
                                          "condition": {
                                            "left_operand": "$activity.definition_activity_02P1UMFZHW3Q90rfb7eVucabkJQMEm5UkHH.output.output_table[0].status$",
                                            "operator": "ne",
                                            "right_operand": "active"
                                          },
                                          "continue_on_failure": false,
                                          "description": "Valid values for WAN1 link are active. Checking for negative condition to set Output variables messages.",
                                          "display_name": "Not Active",
                                          "skip_execution": false
                                        },
                                        "object_type": "definition_activity",
                                        "actions": [
                                          {
                                            "unique_name": "definition_activity_02OXT9TRUDFHE2WsdoTepc13jFcFVzgSNxO",
                                            "name": "Set Variables",
                                            "title": "Set Variables",
                                            "type": "core.set_multiple_variables",
                                            "base_type": "activity",
                                            "properties": {
                                              "continue_on_failure": false,
                                              "description": "Set Variables",
                                              "display_name": "Set Variables",
                                              "skip_execution": false,
                                              "variables_to_update": [
                                                {
                                                  "variable_to_update": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.local.variable_workflow_02OW90BNU8GQV3XHqiSeHGGAGJ51ZABU956$",
                                                  "variable_value_new": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.local.variable_workflow_02OW90BNU8GQV3XHqiSeHGGAGJ51ZABU956$\nWAN 1 is not properly connected to the internet."
                                                },
                                                {
                                                  "variable_to_update": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.local.variable_workflow_02P1UYL4EG6J331gkpbQVDQGNXqwXYxVd34$",
                                                  "variable_value_new": false
                                                }
                                              ]
                                            },
                                            "object_type": "definition_activity"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "unique_name": "definition_activity_02OXW261HN9MH0VCZitIFyNnjN4juGc2eHb",
                                    "name": "Condition Block",
                                    "title": "Check WAN 2 Status",
                                    "type": "logic.if_else",
                                    "base_type": "activity",
                                    "properties": {
                                      "conditions": [],
                                      "continue_on_failure": false,
                                      "description": "If-Else condition block",
                                      "display_name": "Check WAN 2 Status",
                                      "skip_execution": false
                                    },
                                    "object_type": "definition_activity",
                                    "blocks": [
                                      {
                                        "unique_name": "definition_activity_02OXW261IYM9C4JPCZg4UouK9LIScjarxhe",
                                        "name": "Condition Branch",
                                        "title": "Not Ready or Not Active",
                                        "type": "logic.condition_block",
                                        "base_type": "activity",
                                        "properties": {
                                          "condition": {
                                            "left_operand": {
                                              "left_operand": "$activity.definition_activity_02P1UNFD0H21R592ttPMI5fIYwSdV4WY4ZW.output.output_table[0].status$",
                                              "operator": "ne",
                                              "right_operand": "ready"
                                            },
                                            "operator": "and",
                                            "right_operand": {
                                              "left_operand": "$activity.definition_activity_02P1UNFD0H21R592ttPMI5fIYwSdV4WY4ZW.output.output_table[0].status$",
                                              "operator": "ne",
                                              "right_operand": "active"
                                            }
                                          },
                                          "continue_on_failure": false,
                                          "description": "Valid values for WAN2 link are active or and ready. Checking for negative condition to set Output variables messages.",
                                          "display_name": "Not Ready or Not Active",
                                          "skip_execution": false
                                        },
                                        "object_type": "definition_activity",
                                        "actions": [
                                          {
                                            "unique_name": "definition_activity_02OXW5HCG9HAN3jILDMoMoqySIwNHHupV8G",
                                            "name": "Set Variables",
                                            "title": "Set Variables",
                                            "type": "core.set_multiple_variables",
                                            "base_type": "activity",
                                            "properties": {
                                              "continue_on_failure": false,
                                              "description": "Set Variables",
                                              "display_name": "Set Variables",
                                              "skip_execution": false,
                                              "variables_to_update": [
                                                {
                                                  "variable_to_update": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.local.variable_workflow_02OW90BNU8GQV3XHqiSeHGGAGJ51ZABU956$",
                                                  "variable_value_new": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.local.variable_workflow_02OW90BNU8GQV3XHqiSeHGGAGJ51ZABU956$\nWAN 2 is not properly connected to the internet."
                                                },
                                                {
                                                  "variable_to_update": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.local.variable_workflow_02P1UYL4EG6J331gkpbQVDQGNXqwXYxVd34$",
                                                  "variable_value_new": false
                                                }
                                              ]
                                            },
                                            "object_type": "definition_activity"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "unique_name": "definition_activity_02OXVWAWFW6JJ2VLxjlZ2IuEayebirLjr99",
                "name": "Group",
                "title": "Check 2 - Uplink Settings",
                "type": "logic.group",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "description": "Placeholder for other checks",
                  "display_as_suggestion": false,
                  "display_name": "Check 2 - Uplink Settings",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02OXW7NLUHY767Y2QXvNVs0O6Um3Ldg7ePy",
                "name": "Group",
                "title": "Summarize Results",
                "type": "logic.group",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "description": "Summarize all the check results and save the output variables.",
                  "display_as_suggestion": false,
                  "display_name": "Summarize Results",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02OXWC7LJO2OW40GBinEgaaMBlZTOQRdZif",
                    "name": "Condition Block",
                    "title": "All Checks Passed",
                    "type": "logic.if_else",
                    "base_type": "activity",
                    "properties": {
                      "conditions": [],
                      "continue_on_failure": false,
                      "description": "If-Else condition block",
                      "display_name": "All Checks Passed",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "blocks": [
                      {
                        "unique_name": "definition_activity_02OXWC7MOXPHV4nRvo08amY1bV3MLWhKYfr",
                        "name": "Condition Branch",
                        "title": "Passed",
                        "type": "logic.condition_block",
                        "base_type": "activity",
                        "properties": {
                          "condition": {
                            "left_operand": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.local.variable_workflow_02P1UYL4EG6J331gkpbQVDQGNXqwXYxVd34$",
                            "operator": "eq",
                            "right_operand": "true"
                          },
                          "continue_on_failure": false,
                          "display_name": "Passed",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02OYHXR7GACRW52AhIJhPerSmFvAo9zWWes",
                            "name": "Set Variables",
                            "title": "Set Variables",
                            "type": "core.set_multiple_variables",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "description": "Set Variables",
                              "display_name": "Set Variables",
                              "skip_execution": false,
                              "variables_to_update": [
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.output.variable_workflow_02OW90BNU85CG6GlfVy7LEIuc4DaUMT1WBN$",
                                  "variable_value_new": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.output.variable_workflow_02OW90BNU85CG6GlfVy7LEIuc4DaUMT1WBN$\nAppliance Device $workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.input.variable_workflow_02OX2E0ZJY3CQ0rjE7DzFKgJg00G5pKPPcg$ checks Passed."
                                },
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.output.variable_workflow_02OW90BNU6JBE6MtB7dMhbjFwFEvmGT2LL3$",
                                  "variable_value_new": "Appliance checks passed."
                                },
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.output.variable_workflow_02OW90BNU7DMB4bDUpkkOIwNRO99lsen84m$",
                                  "variable_value_new": 200
                                }
                              ]
                            },
                            "object_type": "definition_activity"
                          }
                        ]
                      },
                      {
                        "unique_name": "definition_activity_02OYI08H3O5SQ1HCOvPgPzjF553Tt1BOlRB",
                        "name": "Condition Branch",
                        "title": "Failed",
                        "type": "logic.condition_block",
                        "base_type": "activity",
                        "properties": {
                          "condition": {
                            "left_operand": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.local.variable_workflow_02P1UYL4EG6J331gkpbQVDQGNXqwXYxVd34$",
                            "operator": "ne",
                            "right_operand": "true"
                          },
                          "continue_on_failure": false,
                          "display_name": "Failed",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02OYI08H727C56hCYVufO5J8q8bnWMVdCS4",
                            "name": "Set Variables",
                            "title": "Set Variables",
                            "type": "core.set_multiple_variables",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "description": "Set Variables",
                              "display_name": "Set Variables",
                              "skip_execution": false,
                              "variables_to_update": [
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.output.variable_workflow_02OW90BNU85CG6GlfVy7LEIuc4DaUMT1WBN$",
                                  "variable_value_new": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.output.variable_workflow_02OW90BNU85CG6GlfVy7LEIuc4DaUMT1WBN$\nAppliance Device $workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.input.variable_workflow_02OX2E0ZJY3CQ0rjE7DzFKgJg00G5pKPPcg$ checks Failed. $workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.local.variable_workflow_02OW90BNU8GQV3XHqiSeHGGAGJ51ZABU956$"
                                },
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.output.variable_workflow_02OYMGR422F0X0JcMEzRemH49EIImB4hM09$",
                                  "variable_value_new": false
                                },
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.output.variable_workflow_02OW90BNU7XED1NIbGsgTnyA52CJHBV3T7k$",
                                  "variable_value_new": "One or more checks failed."
                                },
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A.output.variable_workflow_02OW90BNU7DMB4bDUpkkOIwNRO99lsen84m$",
                                  "variable_value_new": 400
                                }
                              ]
                            },
                            "object_type": "definition_activity"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "categories": [
              "category_02P1ZHJAQ54XV1zJuzEtLLMo66BUJZWb5Dm"
            ]
          },
          "atomic_workflows": [
            "definition_workflow_02OARCJ16WZTS5V0LlpWAeTm3Br5dYPREHG"
          ],
          "dependent_workflows": [
            "definition_workflow_02OARCJ16WZTS5V0LlpWAeTm3Br5dYPREHG"
          ]
        }
      ],
      "atomic_workflows": [
        "definition_workflow_02LBZJE7PQZVJ3crE33ELBrscM7zWeiugTw",
        "definition_workflow_02OQTFUOR8LBS2UYcPdhVOgQwSfDAOOYyuw",
        "definition_workflow_02L6HO3MVE3076LgocjRMWpLoMD5gmGIgIR",
        "definition_workflow_02OARCJ16WZTS5V0LlpWAeTm3Br5dYPREHG"
      ],
      "dependent_workflows": [
        "definition_workflow_02LBZJE7PQZVJ3crE33ELBrscM7zWeiugTw",
        "definition_workflow_02OQTFUOR8LBS2UYcPdhVOgQwSfDAOOYyuw",
        "definition_workflow_02L6HO3MVE3076LgocjRMWpLoMD5gmGIgIR",
        "definition_workflow_02OARCJ16WZTS5V0LlpWAeTm3Br5dYPREHG",
        "definition_workflow_02OSQ4SYHH4EH1ByWxq7yyQ9W92BYX4iG1k",
        "definition_workflow_02OW90BNEI3OQ1XSBhq1OkD6LnxOmfqEM5A"
      ]
    }
  ],
  "atomic_workflows": [
    "definition_workflow_02LBZJE7PQZVJ3crE33ELBrscM7zWeiugTw",
    "definition_workflow_02OQTFUOR8LBS2UYcPdhVOgQwSfDAOOYyuw",
    "definition_workflow_02OARCJ16WZTS5V0LlpWAeTm3Br5dYPREHG",
    "definition_workflow_02L6HO3MVE3076LgocjRMWpLoMD5gmGIgIR"
  ],
  "dependent_workflows": [
    "definition_workflow_02OZ9YHMKZSHP6JD9ZLrRRSPqMYrDt79a4S",
    "definition_workflow_02LBZJE7PQZVJ3crE33ELBrscM7zWeiugTw",
    "definition_workflow_02OQTFUOR8LBS2UYcPdhVOgQwSfDAOOYyuw",
    "definition_workflow_02OARCJ16WZTS5V0LlpWAeTm3Br5dYPREHG",
    "definition_workflow_02L6HO3MVE3076LgocjRMWpLoMD5gmGIgIR",
    "definition_workflow_02OSH0EXXAZL07jJT5tTLmqeMQzflo7miui"
  ]
}