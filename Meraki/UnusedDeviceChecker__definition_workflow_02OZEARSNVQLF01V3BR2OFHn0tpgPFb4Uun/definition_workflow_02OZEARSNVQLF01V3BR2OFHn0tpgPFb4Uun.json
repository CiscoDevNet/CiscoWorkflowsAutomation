{
  "workflow": {
    "unique_name": "definition_workflow_02OZEARSNVQLF01V3BR2OFHn0tpgPFb4Uun",
    "name": "Unused Device Checker",
    "title": "Unused Device Checker",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "615867249042917302",
          "scope": "input",
          "name": "Organization ID",
          "type": "datatype.string",
          "description": "Provide the Organization ID to check the device status for.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02OZHHWLKI2BK2uHBhsy7kWuJk9PkoVitjo",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.integer",
        "properties": {
          "value": 30,
          "scope": "input",
          "name": "Days Threshold",
          "type": "datatype.integer",
          "description": "Provide a number in form of days that act as a threshold to check for unused device.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": ""
        },
        "unique_name": "variable_workflow_02P06JKFVFQO95HDnvg9OKuGTtxWm3D8322",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Result",
          "type": "datatype.string",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02P06P97Q7MFM6fXvkPgAol17bjivAkUINa",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "is_atomic": false
      },
      "delete_workflow_instance": false,
      "description": "This workflow helps to check if the devices in the Organization are used in the last N days. \nThis check is based on the last reported date in Organization Device Status activity. ",
      "display_name": "Unused Device Checker",
      "runtime_user": {
        "target_default": true
      },
      "target": {
        "target_type": "meraki.endpoint",
        "specify_on_workflow_start": true
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_02OZHHF88OKWC2A8D2prTZIRczdeZ2NHQ5F",
        "name": "Get Organization Devices Statuses",
        "title": "Get Organization Devices Statuses",
        "type": "workflow.atomic_workflow",
        "base_type": "subworkflow",
        "properties": {
          "continue_on_failure": false,
          "description": "List the status of every Meraki device in the organization",
          "display_name": "Get Organization Devices Statuses",
          "input": {
            "variable_workflow_02OQTFUOR8MVC11Q9By4LxWBBrDmYfb4FOQ": "$workflow.definition_workflow_02OZEARSNVQLF01V3BR2OFHn0tpgPFb4Uun.input.variable_workflow_02OZHHWLKI2BK2uHBhsy7kWuJk9PkoVitjo$"
          },
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "target_type": "meraki.endpoint",
            "use_workflow_target": true
          },
          "workflow_id": "definition_workflow_02OQTFUOR8LBS2UYcPdhVOgQwSfDAOOYyuw",
          "workflow_name": "Get Organization Devices Statuses"
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02OZHY4Q7LOA66YkBJuR5KM7GSl9ccUBgbG",
        "name": "Read Table from JSON",
        "title": "Read Devices from JSON",
        "type": "corejava.read_table_from_json",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "description": "Reading table data from JSON",
          "display_name": "Read Devices from JSON",
          "input_json": "$activity.definition_activity_02OZHHF88OKWC2A8D2prTZIRczdeZ2NHQ5F.output.variable_workflow_02OQTFUOR8PYG3qvB7FFXfklAF5EQYr0ArG$",
          "jsonpath_query": "$.*",
          "persist_output": false,
          "populate_columns": false,
          "skip_execution": false,
          "table_columns": [
            {
              "column_name": "serial",
              "column_type": "string"
            },
            {
              "column_name": "status",
              "column_type": "string"
            },
            {
              "column_name": "lastReportedAt",
              "column_type": "string"
            }
          ]
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02OZHXWT7KTE51i4lrDx1Ze78IxscfAaOfu",
        "name": "For Each",
        "title": "For Each Device",
        "type": "logic.for_each",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "ForEach block",
          "display_name": "For Each Device",
          "skip_execution": false,
          "source_array": "$activity.definition_activity_02OZHY4Q7LOA66YkBJuR5KM7GSl9ccUBgbG.output.read_table_from_json$"
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_02P06I43J0DG13dRGjJgPgoK6n7rW6lkZuQ",
            "name": "Execute Python Script",
            "title": "Calculate Date difference",
            "type": "python3.script",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": false,
              "description": "Execute Python Script",
              "display_name": "Calculate Date difference",
              "script": "from datetime import datetime, timedelta\nimport sys\n\ndef is_device_unused_by_days(last_reported_at_str: str, days_threshold: int) -\u003e bool:\n    \"\"\"\n    Checks if the last_reported_at date is older than the specified days_threshold\n    from the current date. Handles cases where last_reported_at_str is empty.\n\n    Args:\n        last_reported_at_str (str): The date string in ISO format (e.g., \"2018-02-11T00:00:00.090210Z\").\n                                    Can also be an empty string \"\" if the device has never reported.\n        days_threshold (int): The number of days to consider as the threshold for \"unused\".\n\n    Returns:\n        bool: True if the last_reported_at date is older than the threshold, or if the\n              last_reported_at_str is empty. False otherwise.\n    \"\"\"\n    # --- Handle the case where last_reported_at_str is an empty string ---\n    if not last_reported_at_str:\n        return True # If it's empty, it means it has never reported, so it's unused/old\n\n    # --- Original logic for valid date strings ---\n    # Parse the last_reported_at string into a datetime object\n    # Handle the 'Z' for UTC by removing it and then parsing\n    if last_reported_at_str.endswith('Z'):\n        last_reported_at_str = last_reported_at_str[:-1]\n    last_reported_at = datetime.fromisoformat(last_reported_at_str)\n\n    # Get the current date and time\n    current_datetime = datetime.now()\n\n    # Calculate the date 'days_threshold' ago from the current date\n    threshold_date = current_datetime - timedelta(days=days_threshold)\n\n    # Compare the last_reported_at date with the threshold date\n    # If last_reported_at is earlier than the threshold_date, it means it's older than 'days_threshold'\n    return last_reported_at \u003c threshold_date\n\n# read inputs\n(last_reported_date1, days, serial) = sys.argv[1:4]\ndays_int = int(days)\ndevice_status = \"\"\n\n# Determine the date part once\ndate_part = \"\"\nif last_reported_date1:\n    date_part = f\" (last reported on {last_reported_date1})\"\n\nif is_device_unused_by_days(last_reported_date1, days_int):\n    # Device is unused\n    # No need for another 'if last_reported_date1' here, date_part already handles it\n    device_status = f\"The device {serial}{date_part} has been unused for {days_int} days or more.\"\nelse:\n    # Device is used\n    device_status = f\"The device {serial}{date_part} has been used within the last {days_int} days.\"\nprint(device_status)",
              "script_arguments": [
                "$activity.definition_activity_02OZHXWT7KTE51i4lrDx1Ze78IxscfAaOfu.input.source_array[@].lastReportedAt$",
                "$workflow.definition_workflow_02OZEARSNVQLF01V3BR2OFHn0tpgPFb4Uun.input.variable_workflow_02P06JKFVFQO95HDnvg9OKuGTtxWm3D8322$",
                "$activity.definition_activity_02OZHXWT7KTE51i4lrDx1Ze78IxscfAaOfu.input.source_array[@].serial$"
              ],
              "script_queries": [
                {
                  "script_query": "device_status",
                  "script_query_name": "deviceStatus",
                  "script_query_type": "string"
                }
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02P06PEKF0OFG2lv6bDI22JoTRtIRUpbks4",
            "name": "Set Variables",
            "title": "Set Result",
            "type": "core.set_multiple_variables",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "description": "Set Variables",
              "display_name": "Set Result",
              "skip_execution": false,
              "variables_to_update": [
                {
                  "variable_to_update": "$workflow.definition_workflow_02OZEARSNVQLF01V3BR2OFHn0tpgPFb4Uun.output.variable_workflow_02P06P97Q7MFM6fXvkPgAol17bjivAkUINa$",
                  "variable_value_new": "$workflow.definition_workflow_02OZEARSNVQLF01V3BR2OFHn0tpgPFb4Uun.output.variable_workflow_02P06P97Q7MFM6fXvkPgAol17bjivAkUINa$\n$activity.definition_activity_02P06I43J0DG13dRGjJgPgoK6n7rW6lkZuQ.output.script_queries.deviceStatus$"
                }
              ]
            },
            "object_type": "definition_activity"
          }
        ]
      }
    ],
    "categories": [
      "category_02LA3RNX6YL4430HdJs9thJNlUZGnFD8hfg"
    ]
  },
  "atomic_workflows": [
    "definition_workflow_02OQTFUOR8LBS2UYcPdhVOgQwSfDAOOYyuw"
  ],
  "dependent_workflows": [
    "definition_workflow_02OQTFUOR8LBS2UYcPdhVOgQwSfDAOOYyuw"
  ]
}